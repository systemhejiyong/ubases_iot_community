// Code generated by sgen.exe,2022-05-12 15:44:43. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type OpenAuthQuantityEntitys struct {
	Id           int64     `json:"id,omitempty"`
	CompanyId    int64     `json:"companyId,omitempty"`
	TenantId     string    `json:"tenantId,omitempty"`
	AuthCode     string    `json:"authCode,omitempty"`
	AuthQuantity int32     `json:"authQuantity,omitempty"`
	AuthDate     time.Time `json:"authDate,omitempty"`
	Status       int32     `json:"status,omitempty"`
	CreatedBy    int64     `json:"createdBy,omitempty"`
	CreatedAt    time.Time `json:"createdAt,omitempty"`
	UpdatedBy    int64     `json:"updatedBy,omitempty"`
	UpdatedAt    time.Time `json:"updatedAt,omitempty"`
	DeletedAt    time.Time `json:"deletedAt,omitempty"`
}

// 新增参数非空检查
func (s *OpenAuthQuantityEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OpenAuthQuantityEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OpenAuthQuantityQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OpenAuthQuantityQuery struct {
	Page      uint64                  `json:"page,omitempty"`
	Limit     uint64                  `json:"limit,omitempty"`
	Sort      string                  `json:"sort,omitempty"`
	SortField string                  `json:"sortField,omitempty"`
	SearchKey string                  `json:"searchKey,omitempty"`
	Query     *OpenAuthQuantityFilter `json:"query,omitempty"`
}

// OpenAuthQuantityFilter，查询条件，字段请根据需要自行增减
type OpenAuthQuantityFilter struct {
	Id           int64     `json:"id,omitempty"`
	CompanyId    int64     `json:"companyId,omitempty"`
	TenantId     string    `json:"tenantId,omitempty"`
	AuthCode     string    `json:"authCode,omitempty"`
	AuthQuantity int32     `json:"authQuantity,omitempty"`
	AuthDate     time.Time `json:"authDate,omitempty"`
	Status       int32     `json:"status,omitempty"`
	CreatedBy    int64     `json:"createdBy,omitempty"`
	CreatedAt    time.Time `json:"createdAt,omitempty"`
	UpdatedBy    int64     `json:"updatedBy,omitempty"`
	UpdatedAt    time.Time `json:"updatedAt,omitempty"`
	DeletedAt    time.Time `json:"deletedAt,omitempty"`
}

// 实体转pb对象
func OpenAuthQuantity_e2pb(src *OpenAuthQuantityEntitys) *proto.OpenAuthQuantity {
	if src == nil {
		return nil
	}
	pbObj := proto.OpenAuthQuantity{
		Id:           src.Id,
		CompanyId:    src.CompanyId,
		TenantId:     src.TenantId,
		AuthCode:     src.AuthCode,
		AuthQuantity: src.AuthQuantity,
		AuthDate:     timestamppb.New(src.AuthDate),
		Status:       src.Status,
		CreatedBy:    src.CreatedBy,
		CreatedAt:    timestamppb.New(src.CreatedAt),
		UpdatedBy:    src.UpdatedBy,
		UpdatedAt:    timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

// pb对象转实体
func OpenAuthQuantity_pb2e(src *proto.OpenAuthQuantity) *OpenAuthQuantityEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpenAuthQuantityEntitys{
		Id:           src.Id,
		CompanyId:    src.CompanyId,
		TenantId:     src.TenantId,
		AuthCode:     src.AuthCode,
		AuthQuantity: src.AuthQuantity,
		AuthDate:     src.AuthDate.AsTime(),
		Status:       src.Status,
		CreatedBy:    src.CreatedBy,
		CreatedAt:    src.CreatedAt.AsTime(),
		UpdatedBy:    src.UpdatedBy,
		UpdatedAt:    src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
