// Code generated by sgen.exe,2022-04-17 14:07:18. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	"cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

type DeleteCommonQuery struct {
	Ids []string `json:"ids" form:"ids"`
}

// 增、删、改及查询返回
type SysUserEntitys struct {
	Id           string `json:"id"`
	UserName     string `json:"userName"`
	Mobile       string `json:"mobile,omitempty"`
	UserNickname string `json:"nickName"`
	Birthday     int32  `json:"birthday,omitempty"`
	UserPassword string `json:"password"`
	UserSalt     string `json:"userSalt,omitempty"`
	UserStatus   int32  `json:"status"`
	UserEmail    string `json:"email"`
	Sex          int32  `json:"sex"`
	Avatar       string `json:"avatar,omitempty"`
	DeptId       string `json:"deptId"`
	Remark       string `json:"remark"`
	IsAdmin      int32  `json:"isAdmin"`
	Address      string `json:"address"`
	Describe     string `json:"describe,omitempty"`
	PhoneNum     string `json:"phonenumber"`
	LastLoginIp  string `json:"lastLoginIp,omitempty"`
	//LastLoginTime int64 `json:"lastLoginTime,omitempty"`
	CreatedAt int64 `json:"createdAt,omitempty"`
	UpdatedAt int64 `json:"updatedAt,omitempty"`
	//DeletedAt     time.Time `json:"deletedAt,omitempty"`
	AccountType int32 `json:"accountType,omitempty"`
}

// 查询条件
//
//	type SysUserQuery struct {
//		Page      uint64        `json:"page,omitempty"`
//		Limit     uint64        `json:"limit,omitempty"`
//		Sort      string        `json:"sort,omitempty"`
//		SortField string        `json:"sortField,omitempty"`
//		Query     SysUserFilter `json:"query,omitempty"`
//	}
type SysUserFilter struct {
	Id           string `json:"id,omitempty"`
	UserName     string `json:"userName,omitempty"`
	Mobile       string `json:"mobile,omitempty"`
	UserNickname string `json:"userNickname,omitempty"`
	Birthday     int32  `json:"birthday,omitempty"`
	UserPassword string `json:"userPassword,omitempty"`
	UserSalt     string `json:"userSalt,omitempty"`
	UserStatus   int32  `json:"userStatus,omitempty"`
	UserEmail    string `json:"userEmail,omitempty"`
	Sex          int32  `json:"sex,omitempty"`
	Avatar       string `json:"avatar,omitempty"`
	DeptId       string `json:"deptId,omitempty"`
	Remark       string `json:"remark,omitempty"`
	IsAdmin      int32  `json:"isAdmin,omitempty"`
	Address      string `json:"address,omitempty"`
	Describe     string `json:"describe,omitempty"`
	PhoneNum     string `json:"phoneNum,omitempty"`
	LastLoginIp  string `json:"lastLoginIp,omitempty"`
	//LastLoginTime int64 `json:"lastLoginTime,omitempty"`
	CreatedAt int64 `json:"createdAt,omitempty"`
	UpdatedAt int64 `json:"updatedAt,omitempty"`
	//DeletedAt     time.Time `json:"deletedAt,omitempty"`
	AccountType int32 `json:"accountType,omitempty"`
}

// 个人中心修改自己的信息
type UserCenterEditReq struct {
	PhoneNum string `json:"phonenum"`
	Email    string `json:"email"`
	Avatar   string `json:"avatar"`
}

type UserLogin struct {
	Username     string `json:"username"`               //用户名
	Password     string `json:"password"`               // 密码
	Channel      string `json:"channel,omitempty"`      // PC,APP渠道
	Verifycode   string `json:"verifyCode,omitempty"`   // 验证码
	Platformtype string `json:"platformtype,omitempty"` //平台类型 （cloud 管理平台 open 开放平台）
	//VerifyKey    int    `json:"verifyKey"`
	ClientIp string `json:"clientIp,omitempty"` //客户端Id
	Explorer string `json:"explorer,omitempty"` //客户端信息
	Os       string `json:"os,omitempty"`       //操作系统
}

type UserDetailReq struct {
	CheckedPosts   []string `json:"checkedPosts"`
	CheckedRoleIds []string `json:"checkedRoleIds"`
	Posts          []string
	RoleList       []string
	UserInfo       *SysUserEntitys
}

// SetUserReq 添加修改用户公用请求字段
type UserCreateReq struct {
	SysUserEntitys
	RoleIds []string
	PostIds []string
}

// 重置密码(未登录情况下)忘记密码的时候
type UserResetPasswordNoTokenReq struct {
	Account          string `json:"account"`
	Password         string `json:"password"`
	VerificationCode string `json:"verificationCode"`
}

// 重置密码
type UserResetPasswordReq struct {
	UserId int64 `json:"id,string"`
	//Password string `json:"password"`
}

// 修改密码
type UserUpdatePasswordReq struct {
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

type QueryUser struct {
	Page        int64  `json:"page" form:"pageNum"`
	Limit       int64  `json:"limit" form:"pageSize"`
	Sort        string `json:"sort" form:"sort"`
	SortField   string `json:"sortField" form:"sortField"`
	SearchKey   string `json:"searchKey" form:"searchKey"`
	BeginTime   string `json:"beginTime" form:"beginTime"`
	EndTime     string `json:"endTime" form:"endTime"`
	Phonenumber string `json:"phonenumber" form:"phonenumber"`
	Status      int64  `json:"status" form:"status"`
	DeptId      string `json:"deptId" form:"deptId"`
	PostId      string `json:"postId" form:"postId"`
}

// 实体转pb对象
func SysUserAdd_e2pb(src *UserCreateReq) *protosService.SysUser {
	if src == nil {
		return nil
	}
	pbObj := protosService.SysUser{
		Id:           iotutil.ToInt64(src.Id),
		UserName:     src.UserName,
		Mobile:       src.Mobile,
		UserNickname: src.UserNickname,
		Birthday:     src.Birthday,
		UserPassword: src.UserPassword,
		UserSalt:     src.UserSalt,
		UserStatus:   src.UserStatus,
		UserEmail:    src.UserEmail,
		Sex:          src.Sex,
		Avatar:       src.Avatar,
		DeptId:       iotutil.ToInt64(src.DeptId),
		Remark:       src.Remark,
		IsAdmin:      src.IsAdmin,
		Address:      src.Address,
		Describe:     src.Describe,
		PhoneNum:     src.PhoneNum,
		LastLoginIp:  src.LastLoginIp,
		//LastLoginTime: timestamppb.New(time.Unix(src.LastLoginTime, 0)),
		CreatedAt:   timestamppb.New(iotutil.GetTimeByUnit(src.CreatedAt)),
		UpdatedAt:   timestamppb.New(iotutil.GetTimeByUnit(src.UpdatedAt)),
		AccountType: src.AccountType,
	}
	return &pbObj
}

// 实体转pb对象
func SysUser_e2pb(src *SysUserEntitys) *protosService.SysUser {
	if src == nil {
		return nil
	}
	pbObj := protosService.SysUser{
		Id:           iotutil.ToInt64(src.Id),
		UserName:     src.UserName,
		Mobile:       src.Mobile,
		UserNickname: src.UserNickname,
		Birthday:     src.Birthday,
		UserPassword: src.UserPassword,
		UserSalt:     src.UserSalt,
		UserStatus:   src.UserStatus,
		UserEmail:    src.UserEmail,
		Sex:          src.Sex,
		Avatar:       src.Avatar,
		DeptId:       iotutil.ToInt64(src.DeptId),
		Remark:       src.Remark,
		IsAdmin:      src.IsAdmin,
		Address:      src.Address,
		Describe:     src.Describe,
		PhoneNum:     src.PhoneNum,
		LastLoginIp:  src.LastLoginIp,
		//LastLoginTime: timestamppb.New(time.Unix(src.LastLoginTime, 0)),
		CreatedAt:   timestamppb.New(iotutil.GetTimeByUnit(src.CreatedAt)),
		UpdatedAt:   timestamppb.New(iotutil.GetTimeByUnit(src.UpdatedAt)),
		AccountType: src.AccountType,
	}
	return &pbObj
}

// pb对象转实体
func SysUser_pb2e(src *protosService.SysUser) *SysUserEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SysUserEntitys{
		Id:           iotutil.ToString(src.Id),
		UserName:     src.UserName,
		Mobile:       src.Mobile,
		UserNickname: src.UserNickname,
		Birthday:     src.Birthday,
		UserPassword: src.UserPassword,
		UserSalt:     src.UserSalt,
		UserStatus:   src.UserStatus,
		UserEmail:    src.UserEmail,
		Sex:          src.Sex,
		Avatar:       src.Avatar,
		DeptId:       iotutil.ToString(src.DeptId),
		Remark:       src.Remark,
		IsAdmin:      src.IsAdmin,
		Address:      src.Address,
		Describe:     src.Describe,
		PhoneNum:     src.PhoneNum,
		LastLoginIp:  src.LastLoginIp,
		//LastLoginTime: src.LastLoginTime.AsTime().Unix(),
		CreatedAt:   src.CreatedAt.AsTime().Unix(),
		UpdatedAt:   src.UpdatedAt.AsTime().Unix(),
		AccountType: src.AccountType,
	}
	return &entitysObj
}

// 新增和修改的时候给公共字段赋值, opterType 1 新增, 2 修改
func SysUser_SetCommonFiled(model *UserCreateReq, userId int64, opterType int) {
	if opterType == 1 {
		model.CreatedAt = time.Now().Unix()
		//model.CreatedAt = userId
	}
	model.UpdatedAt = time.Now().Unix()
	//model. = userId
}

type SysUserRoleDeptRes struct {
	*SysUserEntitys
	Dept     *SysDeptEntitys `json:"dept"`
	RoleInfo []*struct {
		RoleId int64  `json:"roleId"`
		Name   string `json:"name"`
	} `json:"roleInfo"`
	Post []*struct {
		PostId   string `json:"postId"`
		PostName string `json:"postName"`
	} `json:"post"`
	PostIds []string `json:"postIds"`
}

type SysUserDetailRoleDeptRes struct {
	CheckedPosts   []string          `json:"checkedPosts"`
	CheckedRoleIds []string          `json:"checkedRoleIds"`
	UserInfo       *SysUserEntitys   `json:"userInfo"`
	RoleList       []*SysRoleEntitys `json:"roleList"`
	Posts          []*SysPostEntitys `json:"posts"`
}

type SysLoginUserInfoRes struct {
	Permissions []string        `json:"permissions"`
	Roles       []string        `json:"roles"`
	User        *SysUserEntitys `json:"user"`
}

// 刷新tokne
type RefreshToken struct {
	RefreshToken string `json:"refreshToken"`
}
