// Code generated by sgen.exe,2022-04-17 14:07:17. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type SysJobEntitys struct {
	JobId          int64     `json:"jobId,omitempty"`
	JobName        string    `json:"jobName,omitempty"`
	JobParams      string    `json:"jobParams,omitempty"`
	JobGroup       string    `json:"jobGroup,omitempty"`
	InvokeTarget   string    `json:"invokeTarget,omitempty"`
	CronExpression string    `json:"cronExpression,omitempty"`
	MisfirePolicy  int32     `json:"misfirePolicy,omitempty"`
	Concurrent     int32     `json:"concurrent,omitempty"`
	Status         int32     `json:"status,omitempty"`
	CreateBy       int64     `json:"createBy,omitempty"`
	UpdateBy       int64     `json:"updateBy,omitempty"`
	Remark         string    `json:"remark,omitempty"`
	CreatedAt      time.Time `json:"createdAt,omitempty"`
	UpdatedAt      time.Time `json:"updatedAt,omitempty"`
	DeletedAt      time.Time `json:"deletedAt,omitempty"`
}

// 查询条件
type SysJobQuery struct {
	Page      uint64       `json:"page,omitempty"`
	Limit     uint64       `json:"limit,omitempty"`
	Sort      string       `json:"sort,omitempty"`
	SortField string       `json:"sortField,omitempty"`
	Query     SysJobFilter `json:"query,omitempty"`
}
type SysJobFilter struct {
	JobId          int64     `json:"jobId,omitempty"`
	JobName        string    `json:"jobName,omitempty"`
	JobParams      string    `json:"jobParams,omitempty"`
	JobGroup       string    `json:"jobGroup,omitempty"`
	InvokeTarget   string    `json:"invokeTarget,omitempty"`
	CronExpression string    `json:"cronExpression,omitempty"`
	MisfirePolicy  int32     `json:"misfirePolicy,omitempty"`
	Concurrent     int32     `json:"concurrent,omitempty"`
	Status         int32     `json:"status,omitempty"`
	CreateBy       int64     `json:"createBy,omitempty"`
	UpdateBy       int64     `json:"updateBy,omitempty"`
	Remark         string    `json:"remark,omitempty"`
	CreatedAt      time.Time `json:"createdAt,omitempty"`
	UpdatedAt      time.Time `json:"updatedAt,omitempty"`
	DeletedAt      time.Time `json:"deletedAt,omitempty"`
}

// 实体转pb对象
func SysJob_e2pb(src *SysJobEntitys) *protosService.SysJob {
	if src == nil {
		return nil
	}
	pbObj := protosService.SysJob{
		JobId:          src.JobId,
		JobName:        src.JobName,
		JobParams:      src.JobParams,
		JobGroup:       src.JobGroup,
		InvokeTarget:   src.InvokeTarget,
		CronExpression: src.CronExpression,
		MisfirePolicy:  src.MisfirePolicy,
		Concurrent:     src.Concurrent,
		Status:         src.Status,
		CreateBy:       src.CreateBy,
		UpdateBy:       src.UpdateBy,
		Remark:         src.Remark,
		CreatedAt:      timestamppb.New(src.CreatedAt),
		UpdatedAt:      timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

// pb对象转实体
func SysJob_pb2e(src *protosService.SysJob) *SysJobEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SysJobEntitys{
		JobId:          src.JobId,
		JobName:        src.JobName,
		JobParams:      src.JobParams,
		JobGroup:       src.JobGroup,
		InvokeTarget:   src.InvokeTarget,
		CronExpression: src.CronExpression,
		MisfirePolicy:  src.MisfirePolicy,
		Concurrent:     src.Concurrent,
		Status:         src.Status,
		CreateBy:       src.CreateBy,
		UpdateBy:       src.UpdateBy,
		Remark:         src.Remark,
		CreatedAt:      src.CreatedAt.AsTime(),
		UpdatedAt:      src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
