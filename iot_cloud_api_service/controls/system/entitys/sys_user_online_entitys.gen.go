// Code generated by sgen.exe,2022-04-17 14:07:19. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type SysUserOnlineEntitys struct {
	Id         int64     `json:"id,omitempty"`
	Uuid       string    `json:"uuid,omitempty"`
	Token      string    `json:"token,omitempty"`
	CreateTime time.Time `json:"createTime,omitempty"`
	UserName   string    `json:"userName,omitempty"`
	Ip         string    `json:"ip,omitempty"`
	Explorer   string    `json:"explorer,omitempty"`
	Os         string    `json:"os,omitempty"`
}

// 查询条件
type SysUserOnlineQuery struct {
	Page      uint64              `json:"page,omitempty"`
	Limit     uint64              `json:"limit,omitempty"`
	Sort      string              `json:"sort,omitempty"`
	SortField string              `json:"sortField,omitempty"`
	Query     SysUserOnlineFilter `json:"query,omitempty"`
}
type SysUserOnlineFilter struct {
	Id         int64     `json:"id,omitempty"`
	Uuid       string    `json:"uuid,omitempty"`
	Token      string    `json:"token,omitempty"`
	CreateTime time.Time `json:"createTime,omitempty"`
	UserName   string    `json:"userName,omitempty"`
	Ip         string    `json:"ip,omitempty"`
	Explorer   string    `json:"explorer,omitempty"`
	Os         string    `json:"os,omitempty"`
}

// 实体转pb对象
func SysUserOnline_e2pb(src *SysUserOnlineEntitys) *protosService.SysUserOnline {
	if src == nil {
		return nil
	}
	pbObj := protosService.SysUserOnline{
		Id:         src.Id,
		Uuid:       src.Uuid,
		Token:      src.Token,
		CreateTime: timestamppb.New(src.CreateTime),
		UserName:   src.UserName,
		Ip:         src.Ip,
		Explorer:   src.Explorer,
		Os:         src.Os,
	}
	return &pbObj
}

// pb对象转实体
func SysUserOnline_pb2e(src *protosService.SysUserOnline) *SysUserOnlineEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SysUserOnlineEntitys{
		Id:         src.Id,
		Uuid:       src.Uuid,
		Token:      src.Token,
		CreateTime: src.CreateTime.AsTime(),
		UserName:   src.UserName,
		Ip:         src.Ip,
		Explorer:   src.Explorer,
		Os:         src.Os,
	}
	return &entitysObj
}
