// Code generated by sgen.exe,2022-04-17 14:07:15. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type OpenCompanyEntitys struct {
	Id             int64     `json:"id,omitempty"`
	UserId         int64     `json:"userId,omitempty"`
	Name           string    `json:"name,omitempty"`
	Nature         string    `json:"nature,omitempty"`
	LicenseNo      string    `json:"licenseNo,omitempty"`
	License        string    `json:"license,omitempty"`
	LegalPerson    string    `json:"legalPerson,omitempty"`
	ApplyPerson    string    `json:"applyPerson,omitempty"`
	Idcard         string    `json:"idcard,omitempty"`
	IdcardFrontImg string    `json:"idcardFrontImg,omitempty"`
	IdcardAfterImg string    `json:"idcardAfterImg,omitempty"`
	Address        string    `json:"address,omitempty"`
	Status         int32     `json:"status,omitempty"`
	CreatedBy      int64     `json:"createdBy,omitempty"`
	CreatedAt      time.Time `json:"createdAt,omitempty"`
	UpdatedBy      int64     `json:"updatedBy,omitempty"`
	UpdatedAt      time.Time `json:"updatedAt,omitempty"`
	DeletedAt      time.Time `json:"deletedAt,omitempty"`
}

// 查询条件
type OpenCompanyQuery struct {
	Page      uint64            `json:"page,omitempty"`
	Limit     uint64            `json:"limit,omitempty"`
	Sort      string            `json:"sort,omitempty"`
	SortField string            `json:"sortField,omitempty"`
	Query     OpenCompanyFilter `json:"query,omitempty"`
}
type OpenCompanyFilter struct {
	Id             int64     `json:"id,omitempty"`
	UserId         int64     `json:"userId,omitempty"`
	Name           string    `json:"name,omitempty"`
	Nature         string    `json:"nature,omitempty"`
	LicenseNo      string    `json:"licenseNo,omitempty"`
	License        string    `json:"license,omitempty"`
	LegalPerson    string    `json:"legalPerson,omitempty"`
	ApplyPerson    string    `json:"applyPerson,omitempty"`
	Idcard         string    `json:"idcard,omitempty"`
	IdcardFrontImg string    `json:"idcardFrontImg,omitempty"`
	IdcardAfterImg string    `json:"idcardAfterImg,omitempty"`
	Address        string    `json:"address,omitempty"`
	Status         int32     `json:"status,omitempty"`
	CreatedBy      int64     `json:"createdBy,omitempty"`
	CreatedAt      time.Time `json:"createdAt,omitempty"`
	UpdatedBy      int64     `json:"updatedBy,omitempty"`
	UpdatedAt      time.Time `json:"updatedAt,omitempty"`
	DeletedAt      time.Time `json:"deletedAt,omitempty"`
}

// 实体转pb对象
func OpenCompany_e2pb(src *OpenCompanyEntitys) *protosService.OpenCompany {
	if src == nil {
		return nil
	}
	pbObj := protosService.OpenCompany{
		Id:             src.Id,
		UserId:         src.UserId,
		Name:           src.Name,
		Nature:         src.Nature,
		LicenseNo:      src.LicenseNo,
		License:        src.License,
		LegalPerson:    src.LegalPerson,
		ApplyPerson:    src.ApplyPerson,
		Idcard:         src.Idcard,
		IdcardFrontImg: src.IdcardFrontImg,
		IdcardAfterImg: src.IdcardAfterImg,
		Address:        src.Address,
		Status:         src.Status,
		CreatedBy:      src.CreatedBy,
		CreatedAt:      timestamppb.New(src.CreatedAt),
		UpdatedBy:      src.UpdatedBy,
		UpdatedAt:      timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

// pb对象转实体
func OpenCompany_pb2e(src *protosService.OpenCompany) *OpenCompanyEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpenCompanyEntitys{
		Id:             src.Id,
		UserId:         src.UserId,
		Name:           src.Name,
		Nature:         src.Nature,
		LicenseNo:      src.LicenseNo,
		License:        src.License,
		LegalPerson:    src.LegalPerson,
		ApplyPerson:    src.ApplyPerson,
		Idcard:         src.Idcard,
		IdcardFrontImg: src.IdcardFrontImg,
		IdcardAfterImg: src.IdcardAfterImg,
		Address:        src.Address,
		Status:         src.Status,
		CreatedBy:      src.CreatedBy,
		CreatedAt:      src.CreatedAt.AsTime(),
		UpdatedBy:      src.UpdatedBy,
		UpdatedAt:      src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
