// Code generated by sgen,2023-06-02 13:48:12. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

//增、删、改及查询返回
type OpmPanelStudioBuildRecordEntitys struct {
	Id             int64     `json:"id,string,omitempty"`
	BuildId        string    `json:"buildId,omitempty"`
	PanelId        int64     `json:"panelId,string,omitempty"`
	PanelType      int64     `json:"panelType,string,omitempty"`
	Version        string    `json:"version,omitempty"`
	ResUrl         string    `json:"resUrl,omitempty"`
	ResMd5         string    `json:"resMd5,omitempty"`
	Status         int32     `json:"status,omitempty"`
	CommitId       string    `json:"commitId,omitempty"`
	BuildProgress  int32     `json:"buildProgress,omitempty"`
	BuildResult    int32     `json:"buildResult,omitempty"`
	BuildResultMsg string    `json:"buildResultMsg,omitempty"`
	ZipUrl         string    `json:"zipUrl,omitempty"`
	StartTime      time.Time `json:"startTime,omitempty"`
	EndTime        time.Time `json:"endTime,omitempty"`
	UpdatedAt      time.Time `json:"updatedAt,omitempty"`
}

//新增参数非空检查
func (s *OpmPanelStudioBuildRecordEntitys) AddCheck() error {
	return nil
}

//修改参数非空检查
func (s *OpmPanelStudioBuildRecordEntitys) UpdateCheck() error {
	return nil
}

//查询参数必填检查
func (*OpmPanelStudioBuildRecordQuery) QueryCheck() error {
	return nil
}

//查询条件
type OpmPanelStudioBuildRecordQuery struct {
	Page      uint64                           `json:"page,omitempty"`
	Limit     uint64                           `json:"limit,omitempty"`
	Sort      string                           `json:"sort,omitempty"`
	SortField string                           `json:"sortField,omitempty"`
	SearchKey string                           `json:"searchKey,omitempty"`
	Query     *OpmPanelStudioBuildRecordFilter `json:"query,omitempty"`
}

//OpmPanelStudioBuildRecordFilter，查询条件，字段请根据需要自行增减
type OpmPanelStudioBuildRecordFilter struct {
	Id             int64     `json:"id,string,omitempty"`
	BuildId        string    `json:"buildId,omitempty"`
	PanelId        int64     `json:"panelId,string,omitempty"`
	PanelType      int64     `json:"panelType,string,omitempty"`
	Version        string    `json:"version,omitempty"`
	ResUrl         string    `json:"resUrl,omitempty"`
	ResMd5         string    `json:"resMd5,omitempty"`
	Status         int32     `json:"status,omitempty"`
	CommitId       string    `json:"commitId,omitempty"`
	BuildProgress  int32     `json:"buildProgress,omitempty"`
	BuildResult    int32     `json:"buildResult,omitempty"`
	BuildResultMsg string    `json:"buildResultMsg,omitempty"`
	ZipUrl         string    `json:"zipUrl,omitempty"`
	StartTime      time.Time `json:"startTime,omitempty"`
	EndTime        time.Time `json:"endTime,omitempty"`
	UpdatedAt      time.Time `json:"updatedAt,omitempty"`
}

//实体转pb对象
func OpmPanelStudioBuildRecord_e2pb(src *OpmPanelStudioBuildRecordEntitys) *proto.OpmPanelStudioBuildRecord {
	if src == nil {
		return nil
	}
	pbObj := proto.OpmPanelStudioBuildRecord{
		Id:             src.Id,
		BuildId:        src.BuildId,
		PanelId:        src.PanelId,
		PanelType:      src.PanelType,
		Version:        src.Version,
		ResUrl:         src.ResUrl,
		ResMd5:         src.ResMd5,
		Status:         src.Status,
		CommitId:       src.CommitId,
		BuildProgress:  src.BuildProgress,
		BuildResult:    src.BuildResult,
		BuildResultMsg: src.BuildResultMsg,
		ZipUrl:         src.ZipUrl,
		StartTime:      timestamppb.New(src.StartTime),
		EndTime:        timestamppb.New(src.EndTime),
		UpdatedAt:      timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

//pb对象转实体
func OpmPanelStudioBuildRecord_pb2e(src *proto.OpmPanelStudioBuildRecord) *OpmPanelStudioBuildRecordEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpmPanelStudioBuildRecordEntitys{
		Id:             src.Id,
		BuildId:        src.BuildId,
		PanelId:        src.PanelId,
		PanelType:      src.PanelType,
		Version:        src.Version,
		ResUrl:         src.ResUrl,
		ResMd5:         src.ResMd5,
		Status:         src.Status,
		CommitId:       src.CommitId,
		BuildProgress:  src.BuildProgress,
		BuildResult:    src.BuildResult,
		BuildResultMsg: src.BuildResultMsg,
		ZipUrl:         src.ZipUrl,
		StartTime:      src.StartTime.AsTime(),
		EndTime:        src.EndTime.AsTime(),
		UpdatedAt:      src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
