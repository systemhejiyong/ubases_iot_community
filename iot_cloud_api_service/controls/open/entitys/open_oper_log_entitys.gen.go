// Code generated by sgen.exe,2022-04-27 10:55:25. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"google.golang.org/protobuf/types/known/timestamppb"
	"time"
)

// 增、删、改及查询返回
type OpenOperLogEntitys struct {
	OperId        int64     `json:"operId,omitempty"`
	Title         string    `json:"title,omitempty"`
	BusinessType  int32     `json:"businessType,omitempty"`
	Method        string    `json:"method,omitempty"`
	RequestMethod string    `json:"requestMethod,omitempty"`
	OperatorType  int32     `json:"operatorType,omitempty"`
	OperName      string    `json:"operName,omitempty"`
	DeptName      string    `json:"deptName,omitempty"`
	OperUrl       string    `json:"operUrl,omitempty"`
	OperIp        string    `json:"operIp,omitempty"`
	OperLocation  string    `json:"operLocation,omitempty"`
	OperParam     string    `json:"operParam,omitempty"`
	JsonResult    string    `json:"jsonResult,omitempty"`
	Status        int32     `json:"status,omitempty"`
	ErrorMsg      string    `json:"errorMsg,omitempty"`
	OperTime      time.Time `json:"operTime,omitempty"`
}

// 查询条件
type OpenOperLogQuery struct {
	Page      uint64            `json:"page,omitempty"`
	Limit     uint64            `json:"limit,omitempty"`
	Sort      string            `json:"sort,omitempty"`
	SortField string            `json:"sortField,omitempty"`
	Query     OpenOperLogFilter `json:"query,omitempty"`
}

// OpenOperLogFilter，查询条件，字段请根据需要自行增减
type OpenOperLogFilter struct {
	OperId        int64     `json:"operId,omitempty"`
	Title         string    `json:"title,omitempty"`
	BusinessType  int32     `json:"businessType,omitempty"`
	Method        string    `json:"method,omitempty"`
	RequestMethod string    `json:"requestMethod,omitempty"`
	OperatorType  int32     `json:"operatorType,omitempty"`
	OperName      string    `json:"operName,omitempty"`
	DeptName      string    `json:"deptName,omitempty"`
	OperUrl       string    `json:"operUrl,omitempty"`
	OperIp        string    `json:"operIp,omitempty"`
	OperLocation  string    `json:"operLocation,omitempty"`
	OperParam     string    `json:"operParam,omitempty"`
	JsonResult    string    `json:"jsonResult,omitempty"`
	Status        int32     `json:"status,omitempty"`
	ErrorMsg      string    `json:"errorMsg,omitempty"`
	OperTime      time.Time `json:"operTime,omitempty"`
}

// 实体转pb对象
func OpenOperLog_e2pb(src *OpenOperLogEntitys) *proto.OpenOperLog {
	if src == nil {
		return nil
	}
	pbObj := proto.OpenOperLog{
		OperId:        src.OperId,
		Title:         src.Title,
		BusinessType:  src.BusinessType,
		Method:        src.Method,
		RequestMethod: src.RequestMethod,
		OperatorType:  src.OperatorType,
		OperName:      src.OperName,
		DeptName:      src.DeptName,
		OperUrl:       src.OperUrl,
		OperIp:        src.OperIp,
		OperLocation:  src.OperLocation,
		OperParam:     src.OperParam,
		JsonResult:    src.JsonResult,
		Status:        src.Status,
		ErrorMsg:      src.ErrorMsg,
		OperTime:      timestamppb.New(src.OperTime),
	}
	return &pbObj
}

// pb对象转实体
func OpenOperLog_pb2e(src *proto.OpenOperLog) *OpenOperLogEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpenOperLogEntitys{
		OperId:        src.OperId,
		Title:         src.Title,
		BusinessType:  src.BusinessType,
		Method:        src.Method,
		RequestMethod: src.RequestMethod,
		OperatorType:  src.OperatorType,
		OperName:      src.OperName,
		DeptName:      src.DeptName,
		OperUrl:       src.OperUrl,
		OperIp:        src.OperIp,
		OperLocation:  src.OperLocation,
		OperParam:     src.OperParam,
		JsonResult:    src.JsonResult,
		Status:        src.Status,
		ErrorMsg:      src.ErrorMsg,
		OperTime:      src.OperTime.AsTime(),
	}
	return &entitysObj
}
