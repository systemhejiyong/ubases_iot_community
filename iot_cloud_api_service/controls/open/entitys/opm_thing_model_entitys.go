// Code generated by sgen.exe,2022-04-29 15:04:31. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"
)

// 增、删、改及查询返回
type OpmThingModelEntitys struct {
	Id          int64  `json:"id,omitempty"`
	ProductId   int64  `json:"productId,string,omitempty"`
	Standard    int32  `json:"standard,omitempty"`
	Version     string `json:"version,omitempty"`
	Description string `json:"description,omitempty"`
}

// 新增参数非空检查
func (s *OpmThingModelEntitys) AddCheck() error {

	return nil
}

// 修改参数非空检查
func (s *OpmThingModelEntitys) UpdateCheck() error {

	return nil
}

// 查询条件
type OpmThingModelQuery struct {
	Page      uint64               `json:"page,omitempty"`
	Limit     uint64               `json:"limit,omitempty"`
	Sort      string               `json:"sort,omitempty"`
	SortField string               `json:"sortField,omitempty"`
	SearchKey string               `json:"searchKey,omitempty"`
	Query     *OpmThingModelFilter `json:"query,omitempty"`
}

// OpmThingModelFilter，查询条件，字段请根据需要自行增减
type OpmThingModelFilter struct {
	Id          int64     `json:"id,omitempty"`
	ProductId   string    `json:"productId,omitempty"`
	Standard    int32     `json:"standard,omitempty"`
	Version     string    `json:"version,omitempty"`
	Description string    `json:"description,omitempty"`
	CreatedBy   int64     `json:"createdBy,omitempty"`
	CreatedAt   time.Time `json:"createdAt,omitempty"`
	UpdatedBy   int64     `json:"updatedBy,omitempty"`
	UpdatedAt   time.Time `json:"updatedAt,omitempty"`
	DeletedAt   time.Time `json:"deletedAt,omitempty"`
}

// 实体转pb对象
func OpmThingModel_e2pb(src *OpmThingModelEntitys) *proto.OpmThingModel {
	if src == nil {
		return nil
	}
	pbObj := proto.OpmThingModel{
		Id:          src.Id,
		ProductId:   src.ProductId,
		Standard:    src.Standard,
		Version:     src.Version,
		Description: src.Description,
	}
	return &pbObj
}

// pb对象转实体
func OpmThingModel_pb2e(src *proto.OpmThingModel) *OpmThingModelEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpmThingModelEntitys{
		Id:          src.Id,
		ProductId:   src.ProductId,
		Standard:    src.Standard,
		Version:     src.Version,
		Description: src.Description,
	}
	return &entitysObj
}

type OpmThingModelAllList struct {
	Model      *OpmThingModelEntitys             `json:"model"`
	Properties []*OpmThingModelPropertiesEntitys `json:"properties"`
	Events     []*OpmThingModelEventsEntitys     `json:"events"`
	Services   []*OpmThingModelServicesEntitys   `json:"services"`
}

type OpmThingModelList struct {
	WebMQTT string                            `json:"webMQTT"`
	Model   *OpmThingModelEntitys             `json:"model,omitempty"`
	List    []*OpmThingModelPropertiesEntitys `json:"list"`
}

type TOpmThingModel struct {
	Id           string `json:"id,omitempty"`           // 主键ID
	FuncType     string `json:"funcType,omitempty"`     // 功能类型
	FuncName     string `json:"funcName,omitempty"`     // 功能名称
	Required     int32  `json:"required"`               // 必选
	Identifier   string `json:"identifier,omitempty"`   // 标识符
	RwFlag       string `json:"rwFlag,omitempty"`       // 数据传输类型
	DataType     string `json:"dataType,omitempty"`     // 数据类型
	Attribute    string `json:"attribute,omitempty"`    // 功能点属性
	Space        string `json:"space,omitempty"`        // 属性数据
	InputParams  string `json:"inputParams,omitempty"`  // 服务输入参数
	OutputParams string `json:"outputParams,omitempty"` // 服务输出参数
	Outputdata   string `json:"outputdata,omitempty"`   // 事件输出数据
	ModelId      int64  `json:"modelId,omitempty"`      // 物模型ID
	ProductId    string `json:"productId,omitempty"`    // 产品唯一标识
	Specs        string `json:"specs,omitempty"`        //非列表型数据
	SpecsList    string `json:"specsList,omitempty"`    //列表型数据
	Custom       int32  `json:"custom,omitempty"`       //是否是自定义功能（0:否, 1:是）
	CallType     int32  `json:"callType,omitempty"`     //服务的调用方式。1：异步调用, 0：同步调用
	EventType    string `json:"eventType,omitempty"`    // 事件类型。INFO_EVENT_TYPE：信息。ALERT_EVENT_TYPE：告警。ERROR_EVENT_TYPE：故障。
}

type TOpmThingModelVo struct {
	Id           string `json:"id,omitempty"`           // 主键ID
	FuncType     string `json:"funcType,omitempty"`     // 功能类型
	FuncName     string `json:"funcName,omitempty"`     // 功能名称
	Required     int32  `json:"required"`               // 必选
	Identifier   string `json:"identifier,omitempty"`   // 标识符
	RwFlag       string `json:"rwFlag,omitempty"`       // 数据传输类型
	DataType     string `json:"dataType,omitempty"`     // 数据类型
	Attribute    string `json:"attribute,omitempty"`    // 功能点属性
	Space        string `json:"space,omitempty"`        // 属性数据
	InputParams  string `json:"inputParams,omitempty"`  // 服务输入参数
	OutputParams string `json:"outputParams,omitempty"` // 服务输出参数
	Outputdata   string `json:"outputdata,omitempty"`   // 事件输出数据
	EventType    string `json:"eventType,omitempty"`    // 事件类型。INFO_EVENT_TYPE：信息。ALERT_EVENT_TYPE：告警。ERROR_EVENT_TYPE：故障。
}

// 数值型DataSpecs（INT & FLOAT & DOUBLE）
type ValueDataSpecs struct {
	DataType     string      `json:"dataType,omitempty"`     // 取值为INT、FLOAT或DOUBLE。
	Max          interface{} `json:"max,omitempty"`          // 最大值。取值为INT、FLOAT或DOUBLE，必须与dataType设置一致
	Min          interface{} `json:"min,omitempty"`          // 最小值。取值为INT、FLOAT或DOUBLE，必须与dataType设置一致
	Step         interface{} `json:"step,omitempty"`         // 步长，数据每次变化的增量。取值为INT、FLOAT或DOUBLE，必须与dataType设置一致
	Precise      string      `json:"precise,omitempty"`      // 精度。当dataType取值为FLOAT或DOUBLE时，可传入的参数
	DefaultValue string      `json:"defaultValue,omitempty"` // 传入此参数，可存入一个默认值
	Unit         interface{} `json:"unit,omitempty"`         // 单位的符号
	UnitName     string      `json:"unitName,omitempty"`     // 单位的名称
	Custom       int32       `json:"custom,omitempty"`       // 是否是自定义功能。1：是 0：否
}

// 字符型DataSpecs（TEXT & DATE & JSON）
type StringDataSpecs struct {
	DataType     string      `json:"dataType,omitempty"`     // 取值为DATE或TEXT。
	Length       interface{} `json:"length,omitempty"`       // 数据长度，取值不能超过2048，单位：字节。dataType取值为TEXT时，需传入该参数。
	DefaultValue interface{} `json:"defaultValue,omitempty"` // 传入此参数，可存入一个默认值。
	Custom       int32       `json:"custom,omitempty"`       // 是否是自定义功能。1：是 0：否
}

// 枚举型DataSpaceList（ENUM）
type EnumDataSpaces struct {
	DataType string `json:"dataType,omitempty"` // 数据类型
	Name     string `json:"name,omitempty"`     // 名称
	Value    int64  `json:"value,omitempty"`    // 数值
	Custom   int32  `json:"custom,omitempty"`   // 是否是自定义功能。1：是 0：否
}

// 布尔型BoolDataSpaces（BOOL）
type BoolDataSpaces struct {
	DataType string `json:"dataType,omitempty"` // 数据类型
	Name     string `json:"name,omitempty"`     // 名称
	Value    int64  `json:"value,omitempty"`    // 数值
	Custom   int32  `json:"custom,omitempty"`   // 是否是自定义功能。1：是 0：否
}

// 生成MCU SDK所需的结构体
type ThingsModel struct {
	Dpid         int32
	Name         string
	Identifier   string
	CaseCamel    string
	IdenLowCase  string
	DataType     string
	Type         string
	VarType      string
	DefaultValue string
	RwFlagDesc   string
	IsControl    bool
	Values       []interface{}
}

// 生成MCU SDK所需的结构体
type ProductEntry struct {
	ProductKey string
	WifiFlag   string
	Models     ThingsModels
}

type ThingsModels []ThingsModel

func (tms ThingsModels) Len() int {
	return len(tms)
}

func (tms ThingsModels) Less(x, y int) bool {
	return tms[x].Dpid < tms[y].Dpid
}

func (tms ThingsModels) Swap(x, y int) {
	tms[x], tms[y] = tms[y], tms[x]
}

type ProductThingsModel struct {
	Services   []*ThingModelServices   `json:"actions"`
	Events     []*ThingModelEvents     `json:"events"`
	Properties []*ThingModelProperties `json:"attrs"`
}

type ThingModelEvents struct {
	Id         int64  `json:"id"` //功能Id
	Identifier string `json:"identifier"`
	Name       string `json:"name"`
	DpId       int32  `json:"dpId,omitempty"` //标识符类型原来的pid
	EventType  string `json:"eventType"`
	OutputData string `json:"outputData"`
}

type ThingModelProperties struct {
	Id            int64  `json:"id,string"` //功能Id
	Name          string `json:"name"`
	NameEn        string `json:"nameEn"`
	RwFlag        string `json:"rwFlag"`
	RwFlagDesc    string `json:"rwFlagDesc"`
	Identifier    string `json:"identifier"`     //标识符类型原来的pid
	DpId          int32  `json:"dpId,omitempty"` //标识符类型原来的pid
	DataType      string `json:"dataType"`
	Required      int32  `json:"required"`
	DataSpecs     string `json:"dataSpecs"`
	DataSpecsList string `json:"dataSpecsList"`
	DefaultVal    string `json:"defaultVal"`
	Value         string `json:"value"`
}

type ThingModelServices struct {
	Id           int64  `json:"id"` //功能Id
	Name         string `json:"name"`
	DpId         int32  `json:"dpId,omitempty"` //标识符类型原来的pid
	Identifier   string `json:"identifier"`
	ServiceName  string `json:"serviceName"`
	InputParams  string `json:"inputParams"`
	OutputParams string `json:"outputParams"`
	CallType     int32  `json:"callType"`
}
