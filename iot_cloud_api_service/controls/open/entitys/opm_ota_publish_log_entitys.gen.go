// Code generated by sgen.exe,2022-05-13 13:53:35. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type OpmOtaPublishLogEntitys struct {
	Id         int64     `json:"id,omitempty"`
	ProductId  int64     `json:"productId,omitempty"`
	FirmwareId int64     `json:"firmwareId,omitempty"`
	PkgId      int64     `json:"pkgId,omitempty"`
	IsGray     int32     `json:"isGray,omitempty"`
	GrayType   int32     `json:"grayType,omitempty"`
	GrayScale  int32     `json:"grayScale,omitempty"`
	Type       int32     `json:"type,omitempty"`
	Version    string    `json:"version,omitempty"`
	Did        string    `json:"did,omitempty"`
	Status     int32     `json:"status,omitempty"`
	DeviceLog  string    `json:"deviceLog,omitempty"`
	CreatedBy  int64     `json:"createdBy,omitempty"`
	UpdatedBy  int64     `json:"updatedBy,omitempty"`
	CreatedAt  time.Time `json:"createdAt,omitempty"`
	UpdatedAt  time.Time `json:"updatedAt,omitempty"`
	DeletedAt  time.Time `json:"deletedAt,omitempty"`
	TenantId   string    `json:"tenantId,omitempty"`
}

// 新增参数非空检查
func (s *OpmOtaPublishLogEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OpmOtaPublishLogEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OpmOtaPublishLogQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OpmOtaPublishLogQuery struct {
	Page      uint64                  `json:"page,omitempty"`
	Limit     uint64                  `json:"limit,omitempty"`
	Sort      string                  `json:"sort,omitempty"`
	SortField string                  `json:"sortField,omitempty"`
	SearchKey string                  `json:"searchKey,omitempty"`
	Query     *OpmOtaPublishLogFilter `json:"query,omitempty"`
}

// OpmOtaPublishLogFilter，查询条件，字段请根据需要自行增减
type OpmOtaPublishLogFilter struct {
	Id         int64     `json:"id,omitempty"`
	ProductId  int64     `json:"productId,omitempty"`
	FirmwareId int64     `json:"firmwareId,omitempty"`
	PkgId      int64     `json:"pkgId,omitempty"`
	IsGray     int32     `json:"isGray,omitempty"`
	GrayType   int32     `json:"grayType,omitempty"`
	GrayScale  int32     `json:"grayScale,omitempty"`
	Type       int32     `json:"type,omitempty"`
	Version    string    `json:"version,omitempty"`
	Did        string    `json:"did,omitempty"`
	Status     int32     `json:"status,omitempty"`
	DeviceLog  string    `json:"deviceLog,omitempty"`
	CreatedBy  int64     `json:"createdBy,omitempty"`
	UpdatedBy  int64     `json:"updatedBy,omitempty"`
	CreatedAt  time.Time `json:"createdAt,omitempty"`
	UpdatedAt  time.Time `json:"updatedAt,omitempty"`
	DeletedAt  time.Time `json:"deletedAt,omitempty"`
	TenantId   string    `json:"tenantId,omitempty"`
}

// 实体转pb对象
func OpmOtaPublishLog_e2pb(src *OpmOtaPublishLogEntitys) *proto.OpmOtaPublishLog {
	if src == nil {
		return nil
	}
	pbObj := proto.OpmOtaPublishLog{
		Id:         src.Id,
		ProductId:  src.ProductId,
		FirmwareId: src.FirmwareId,
		PkgId:      src.PkgId,
		IsGray:     src.IsGray,
		GrayType:   src.GrayType,
		GrayScale:  src.GrayScale,
		Type:       src.Type,
		Version:    src.Version,
		Did:        src.Did,
		Status:     src.Status,
		DeviceLog:  src.DeviceLog,
		CreatedBy:  src.CreatedBy,
		UpdatedBy:  src.UpdatedBy,
		CreatedAt:  timestamppb.New(src.CreatedAt),
		UpdatedAt:  timestamppb.New(src.UpdatedAt),
		TenantId:   src.TenantId,
	}
	return &pbObj
}

// pb对象转实体
func OpmOtaPublishLog_pb2e(src *proto.OpmOtaPublishLog) *OpmOtaPublishLogEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpmOtaPublishLogEntitys{
		Id:         src.Id,
		ProductId:  src.ProductId,
		FirmwareId: src.FirmwareId,
		PkgId:      src.PkgId,
		IsGray:     src.IsGray,
		GrayType:   src.GrayType,
		GrayScale:  src.GrayScale,
		Type:       src.Type,
		Version:    src.Version,
		Did:        src.Did,
		Status:     src.Status,
		DeviceLog:  src.DeviceLog,
		CreatedBy:  src.CreatedBy,
		UpdatedBy:  src.UpdatedBy,
		CreatedAt:  src.CreatedAt.AsTime(),
		UpdatedAt:  src.UpdatedAt.AsTime(),
		TenantId:   src.TenantId,
	}
	return &entitysObj
}
