// Code generated by sgen.exe,2022-04-27 10:55:25. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"google.golang.org/protobuf/types/known/timestamppb"
	"time"
)

// 增、删、改及查询返回
type OpenLoginLogEntitys struct {
	InfoId        int64     `json:"infoId,omitempty"`
	LoginName     string    `json:"loginName,omitempty"`
	Ipaddr        string    `json:"ipaddr,omitempty"`
	LoginLocation string    `json:"loginLocation,omitempty"`
	Browser       string    `json:"browser,omitempty"`
	Os            string    `json:"os,omitempty"`
	Status        int32     `json:"status,omitempty"`
	Msg           string    `json:"msg,omitempty"`
	LoginTime     time.Time `json:"loginTime,omitempty"`
	Module        string    `json:"module,omitempty"`
}

// 查询条件
type OpenLoginLogQuery struct {
	Page      uint64             `json:"page,omitempty"`
	Limit     uint64             `json:"limit,omitempty"`
	Sort      string             `json:"sort,omitempty"`
	SortField string             `json:"sortField,omitempty"`
	Query     OpenLoginLogFilter `json:"query,omitempty"`
}

// OpenLoginLogFilter，查询条件，字段请根据需要自行增减
type OpenLoginLogFilter struct {
	InfoId        int64     `json:"infoId,omitempty"`
	LoginName     string    `json:"loginName,omitempty"`
	Ipaddr        string    `json:"ipaddr,omitempty"`
	LoginLocation string    `json:"loginLocation,omitempty"`
	Browser       string    `json:"browser,omitempty"`
	Os            string    `json:"os,omitempty"`
	Status        int32     `json:"status,omitempty"`
	Msg           string    `json:"msg,omitempty"`
	LoginTime     time.Time `json:"loginTime,omitempty"`
	Module        string    `json:"module,omitempty"`
}

// 实体转pb对象
func OpenLoginLog_e2pb(src *OpenLoginLogEntitys) *proto.OpenLoginLog {
	if src == nil {
		return nil
	}
	pbObj := proto.OpenLoginLog{
		InfoId:        src.InfoId,
		LoginName:     src.LoginName,
		Ipaddr:        src.Ipaddr,
		LoginLocation: src.LoginLocation,
		Browser:       src.Browser,
		Os:            src.Os,
		Status:        src.Status,
		Msg:           src.Msg,
		LoginTime:     timestamppb.New(src.LoginTime),
		Module:        src.Module,
	}
	return &pbObj
}

// pb对象转实体
func OpenLoginLog_pb2e(src *proto.OpenLoginLog) *OpenLoginLogEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpenLoginLogEntitys{
		InfoId:        src.InfoId,
		LoginName:     src.LoginName,
		Ipaddr:        src.Ipaddr,
		LoginLocation: src.LoginLocation,
		Browser:       src.Browser,
		Os:            src.Os,
		Status:        src.Status,
		Msg:           src.Msg,
		LoginTime:     src.LoginTime.AsTime(),
		Module:        src.Module,
	}
	return &entitysObj
}
