// Code generated by sgen.exe,2022-04-27 10:55:24. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type Open2AuthRuleEntitys struct {
	Id              string `json:"id"`
	Pid             string `json:"parentId"`
	Name            string `json:"name"`
	Title           string `json:"title"`
	Icon            string `json:"icon"`
	Condition       string `json:"condition"`
	Remark          string `json:"remark"`
	MenuType        int32  `json:"menuType"`
	Weigh           int32  `json:"weigh"`
	Status          int32  `json:"status"`
	AlwaysShow      int32  `json:"visible"`
	Path            string `json:"path"`
	JumpPath        string `json:"jumpPath"`
	Component       string `json:"component"`
	IsFrame         int32  `json:"isFrame"`
	ModuleType      string `json:"moduleType"`
	ModelId         string `json:"modelId"`
	IsCache         int32  `json:"isCache"`
	IsHideChildMenu int32  `json:"isHideChildMenu"`
}

type Open2AuthRuleEntitysTree struct {
	*Open2AuthRuleEntitys
	Children *[]*Open2AuthRuleEntitysTree `json:"children"`
}

// //查询条件
// type OpenAuthRuleQuery struct {
// 	Page      uint64 `json:"page,omitempty"`
// 	Limit     uint64 `json:"limit,omitempty"`
// 	Sort      string `json:"sort,omitempty"`
// 	SortField string `json:"sortField,omitempty"`
// 	Query   OpenAuthRuleFilter `json:"query,omitempty"`
// }

//实体转pb对象
// func OpenAuthRule_e2pb(src *OpenAuthRuleEntitysTree) *proto.OpenMenuTree {
//     if src == nil {
//         return nil
//     }
//     pbObj := proto.OpenMenuTree{
//         Id:src.Id,
//         Pid:src.Pid,
//         Name:src.Name,
//         Title:src.Title,
//         Icon:src.Icon,
//         Condition:src.Condition,
//         Remark:src.Remark,
//         MenuType:src.MenuType,
//         Weigh:src.Weigh,
//         Status:src.Status,
//         AlwaysShow:src.AlwaysShow,
//         Path:src.Path,
//         JumpPath:src.JumpPath,
//         Component:src.Component,
//         IsFrame:src.IsFrame,
//         ModuleType:src.ModuleType,
//         ModelId:src.ModelId,
//         IsCache:src.IsCache,
//         IsHideChildMenu:src.IsHideChildMenu,
//     }
//     return &pbObj
// }

func Open2AuthRule_pb2eChild(children []*proto.OpenMenuTree, retList *[]*Open2AuthRuleEntitysTree) {
	if children == nil || len(children) == 0 {
		return
	}

	for _, v := range children {
		m := Open2AuthRule_pb2e(v)
		*retList = append(*retList, m)
		if v.Children != nil && len(v.Children) > 0 {
			Open2AuthRule_pb2eChild(v.Children, retList)
			return
		}
	}
}

func Open2AuthRule_pb2e2(src *proto.OpenMenuTree) *Open2AuthRuleEntitys {
	if src == nil {
		return nil
	}
	entitysObj := Open2AuthRuleEntitys{
		Id:              iotutil.ToString(src.Id),
		Pid:             iotutil.ToString(src.Pid),
		Name:            src.Name,
		Title:           src.Title,
		Icon:            src.Icon,
		Condition:       src.Condition,
		Remark:          src.Remark,
		MenuType:        src.MenuType,
		Weigh:           src.Weigh,
		Status:          src.Status,
		AlwaysShow:      src.AlwaysShow,
		Path:            src.Path,
		JumpPath:        src.JumpPath,
		Component:       src.Component,
		IsFrame:         src.IsFrame,
		ModuleType:      src.ModuleType,
		ModelId:         iotutil.ToString(src.ModelId),
		IsCache:         src.IsCache,
		IsHideChildMenu: src.IsHideChildMenu,
	}
	return &entitysObj
}

// pb对象转实体
func Open2AuthRule_pb2e(src *proto.OpenMenuTree) *Open2AuthRuleEntitysTree {
	if src == nil {
		return nil
	}
	entitysObj := Open2AuthRuleEntitysTree{
		Open2AuthRuleEntitys: &Open2AuthRuleEntitys{
			Id:              iotutil.ToString(src.Id),
			Pid:             iotutil.ToString(src.Pid),
			Name:            src.Name,
			Title:           src.Title,
			Icon:            src.Icon,
			Condition:       src.Condition,
			Remark:          src.Remark,
			MenuType:        src.MenuType,
			Weigh:           src.Weigh,
			Status:          src.Status,
			AlwaysShow:      src.AlwaysShow,
			Path:            src.Path,
			JumpPath:        src.JumpPath,
			Component:       src.Component,
			IsFrame:         src.IsFrame,
			ModuleType:      src.ModuleType,
			ModelId:         iotutil.ToString(src.ModelId),
			IsCache:         src.IsCache,
			IsHideChildMenu: src.IsHideChildMenu,
		},
	}
	var res *[]*Open2AuthRuleEntitysTree = &[]*Open2AuthRuleEntitysTree{}
	Open2AuthRule_pb2eChild(src.Children, res)
	entitysObj.Children = &(*res)
	return &entitysObj
}

// pb对象转实体
func Open2AuthRule_pb2eEntitys(src *proto.OpenMenuTree) *Open2AuthRuleEntitys {
	if src == nil {
		return nil
	}
	entitysObj := Open2AuthRuleEntitys{
		Id:              iotutil.ToString(src.Id),
		Pid:             iotutil.ToString(src.Pid),
		Name:            src.Name,
		Title:           src.Title,
		Icon:            src.Icon,
		Condition:       src.Condition,
		Remark:          src.Remark,
		MenuType:        src.MenuType,
		Weigh:           src.Weigh,
		Status:          src.Status,
		AlwaysShow:      src.AlwaysShow,
		Path:            src.Path,
		JumpPath:        src.JumpPath,
		Component:       src.Component,
		IsFrame:         src.IsFrame,
		ModuleType:      src.ModuleType,
		ModelId:         iotutil.ToString(src.ModelId),
		IsCache:         src.IsCache,
		IsHideChildMenu: src.IsHideChildMenu,
	}
	return &entitysObj
}
