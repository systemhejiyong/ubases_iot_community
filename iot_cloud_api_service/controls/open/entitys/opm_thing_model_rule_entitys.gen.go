// Code generated by sgen,2023-07-10 11:45:48. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type OpmThingModelRuleEntitys struct {
	Id            int64     `json:"id,string,omitempty"`
	ProductId     string    `json:"productId,omitempty"`
	ProductKey    string    `json:"productKey"`
	RuleName      string    `json:"ruleName"`
	Name          string    `json:"name"`
	Status        int32     `json:"status"`
	IfSpecs       string    `json:"ifSpecs"`
	ThatSpecs     string    `json:"thenSpecs"` //应前端要求将将thatSpecs修改为thenSpecs
	Desc          string    `json:"desc,omitempty"`
	CreatedBy     int64     `json:"createdBy,string,omitempty"`
	CreatedAt     time.Time `json:"createdAt,omitempty"`
	UpdatedBy     int64     `json:"updatedBy,string,omitempty"`
	UpdatedAt     time.Time `json:"updatedAt,omitempty"`
	DataOrigin    int32     `json:"dataOrigin"`
	ConditionType int32     `json:"conditionType"`
}

// 新增参数非空检查
func (s *OpmThingModelRuleEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OpmThingModelRuleEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OpmThingModelRuleQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OpmThingModelRuleQuery struct {
	Page      uint64                   `json:"page,omitempty"`
	Limit     uint64                   `json:"limit,omitempty"`
	Sort      string                   `json:"sort,omitempty"`
	SortField string                   `json:"sortField,omitempty"`
	SearchKey string                   `json:"searchKey,omitempty"`
	Query     *OpmThingModelRuleFilter `json:"query,omitempty"`
}

// OpmThingModelRuleFilter，查询条件，字段请根据需要自行增减
type OpmThingModelRuleFilter struct {
	Id         int64     `json:"id,string,omitempty"`
	ProductId  string    `json:"productId,omitempty"`
	ProductKey string    `json:"productKey,omitempty"`
	RuleName   string    `json:"ruleName,omitempty"`
	Status     int32     `json:"status,omitempty"`
	IfSpecs    string    `json:"ifSpecs,omitempty"`
	ThatSpecs  string    `json:"thenSpecs,omitempty"` //应前端要求将将thatSpecs修改为thenSpecs
	Desc       string    `json:"desc,omitempty"`
	CreatedBy  int64     `json:"createdBy,string,omitempty"`
	CreatedAt  time.Time `json:"createdAt,omitempty"`
	UpdatedBy  int64     `json:"updatedBy,string,omitempty"`
	UpdatedAt  time.Time `json:"updatedAt,omitempty"`

	DataOrigin    int32 `json:"dataOrigin"`
	ConditionType int32 `json:"conditionType"`
}

// 实体转pb对象
func OpmThingModelRule_e2pb(src *OpmThingModelRuleEntitys) *proto.OpmThingModelRule {
	if src == nil {
		return nil
	}
	pbObj := proto.OpmThingModelRule{
		Id:            src.Id,
		ProductId:     src.ProductId,
		ProductKey:    src.ProductKey,
		RuleName:      src.RuleName,
		Status:        src.Status,
		IfSpecs:       src.IfSpecs,
		ThatSpecs:     src.ThatSpecs,
		Desc:          src.Desc,
		CreatedBy:     src.CreatedBy,
		CreatedAt:     timestamppb.New(src.CreatedAt),
		UpdatedBy:     src.UpdatedBy,
		UpdatedAt:     timestamppb.New(src.UpdatedAt),
		ConditionType: src.ConditionType,
		DataOrigin:    src.DataOrigin,
	}

	return &pbObj
}

// pb对象转实体
func OpmThingModelRule_pb2e(src *proto.OpmThingModelRule) *OpmThingModelRuleEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpmThingModelRuleEntitys{
		Id:            src.Id,
		ProductId:     src.ProductId,
		ProductKey:    src.ProductKey,
		RuleName:      src.RuleName,
		Name:          src.RuleName,
		Status:        src.Status,
		IfSpecs:       src.IfSpecs,
		ThatSpecs:     src.ThatSpecs,
		Desc:          src.Desc,
		CreatedBy:     src.CreatedBy,
		CreatedAt:     src.CreatedAt.AsTime(),
		UpdatedBy:     src.UpdatedBy,
		UpdatedAt:     src.UpdatedAt.AsTime(),
		ConditionType: src.ConditionType,
		DataOrigin:    src.DataOrigin,
	}
	return &entitysObj
}

// 查询条件转换proto
func (s *OpmThingModelRuleQuery) OpmThingModelRuleQuery_e2pb() *proto.OpmThingModelRule {
	queryObj := &proto.OpmThingModelRule{}
	if s.Query != nil {
		queryObj.Status = s.Query.Status
		queryObj.RuleName = s.Query.RuleName
		queryObj.ProductId = s.Query.ProductId
		queryObj.DataOrigin = s.Query.DataOrigin
		//queryObj.ProductKey = s.Query.ProductKey
	}
	return queryObj
}
