// Code generated by sgen.exe,2022-04-27 10:55:25. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type OpenCompanyConnectEntitys struct {
	Id        int64  `json:"id,omitempty"`
	TenantId  string `json:"tenantId,omitempty"`
	Name      string `json:"name,omitempty"`
	Account   string `json:"account,omitempty"`
	Phone     string `json:"phone,omitempty"`
	Address   string `json:"address,omitempty"`
	Job       string `json:"job,omitempty"`
	CreatedBy int64  `json:"createdBy,omitempty"`
	CreatedAt int64  `json:"createdAt,omitempty"`
	UpdatedBy int64  `json:"updatedBy,omitempty"`
	UpdatedAt int64  `json:"updatedAt,omitempty"`
}

// 查询条件
type OpenCompanyConnectQuery struct {
	Page      uint64                   `json:"page,omitempty"`
	Limit     uint64                   `json:"limit,omitempty"`
	Sort      string                   `json:"sort,omitempty"`
	SortField string                   `json:"sortField,omitempty"`
	Query     OpenCompanyConnectFilter `json:"query,omitempty"`
}

// OpenCompanyConnectFilter，查询条件，字段请根据需要自行增减
type OpenCompanyConnectFilter struct {
	Id       int64  `json:"id,omitempty"`
	TenantId string `json:"tenantId,omitempty"`
	Name     string `json:"name,omitempty"`
	Account  string `json:"account,omitempty"`
	Phone    string `json:"phone,omitempty"`
	Address  string `json:"address,omitempty"`
	Job      string `json:"job,omitempty"`
}

// 实体转pb对象
func OpenCompanyConnect_e2pb(src *OpenCompanyConnect) *proto.OpenCompanyConnect {
	if src == nil {
		return nil
	}
	pbObj := proto.OpenCompanyConnect{
		Name:    src.Name,
		Account: src.Account,
		Phone:   src.Phone,
		Address: src.Address,
		Job:     src.Job,
	}
	if src.Id != "" {
		pbObj.Id = iotutil.ToInt64(src.Id)
	}

	return &pbObj
}

//实体转pb对象
// func OpenCompanyConnect_e2pb(src *OpenCompanyConnectEntitys) *proto.OpenCompanyConnect {
// 	if src == nil {
// 		return nil
// 	}
// 	pbObj := proto.OpenCompanyConnect{
// 		Id:        src.Id,
// 		TenantId:  src.TenantId,
// 		Name:      src.Name,
// 		Account:   src.Account,
// 		Phone:     src.Phone,
// 		Address:   src.Address,
// 		Job:       src.Job,
// 		CreatedBy: src.CreatedBy,
// 		UpdatedBy: src.UpdatedBy,
// 	}
// 	return &pbObj
// }

// pb对象转实体
func OpenCompanyConnect_pb2e(src *proto.OpenCompanyConnect) *OpenCompanyConnectEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpenCompanyConnectEntitys{
		Id:        src.Id,
		TenantId:  src.TenantId,
		Name:      src.Name,
		Account:   src.Account,
		Phone:     src.Phone,
		Address:   src.Address,
		Job:       src.Job,
		CreatedBy: src.CreatedBy,
		CreatedAt: src.CreatedAt.AsTime().Unix(),
		UpdatedBy: src.UpdatedBy,
		UpdatedAt: src.UpdatedAt.AsTime().Unix(),
	}
	return &entitysObj
}
