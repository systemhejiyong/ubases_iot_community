// Code generated by sgen.exe,2022-08-25 11:52:18. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"
)

// 增、删、改及查询返回
type IotOtaUpgradeRecordEntitys struct {
	Id              int64  `json:"id,string"`
	Version         string `json:"version"`
	PublishId       int64  `json:"publishId"`
	ProductKey      string `json:"productKey"`
	DeviceId        string `json:"deviceId,omitempty"`
	OriginalVersion string `json:"originalVersion"`
	Status          int32  `json:"status"`
	IsGray          int32  `json:"isGray"`
	TenantId        string `json:"tenantId,omitempty"`
	CreatedAt       int64  `json:"createdAt,omitempty"`
	UpdatedAt       int64  `json:"updatedAt,omitempty"`
	OtaState        string `json:"otaState"`
	OtaCode         int32  `json:"otaCode"`
	OtaProgress     int32  `json:"otaProgress"`
	Result          string `json:"result"`
	AreaName        string `json:"areaName"`
}

// 新增参数非空检查
func (s *IotOtaUpgradeRecordEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *IotOtaUpgradeRecordEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*IotOtaUpgradeRecordQuery) QueryCheck() error {
	return nil
}

// 查询条件
type IotOtaUpgradeRecordQuery struct {
	Page      uint64                     `json:"page,omitempty"`
	Limit     uint64                     `json:"limit,omitempty"`
	Sort      string                     `json:"sort,omitempty"`
	SortField string                     `json:"sortField,omitempty"`
	SearchKey string                     `json:"searchKey,omitempty"`
	Query     *IotOtaUpgradeRecordFilter `json:"query,omitempty"`
}

// IotOtaUpgradeRecordFilter，查询条件，字段请根据需要自行增减
type IotOtaUpgradeRecordFilter struct {
	Id              int64     `json:"id,omitempty"`
	Version         string    `json:"version,omitempty"`
	PublishId       int64     `json:"publishId,omitempty"`
	ProductKey      string    `json:"productKey,omitempty"`
	DeviceId        string    `json:"deviceId,omitempty"`
	OriginalVersion string    `json:"originalVersion,omitempty"`
	Status          int32     `json:"status,omitempty"`
	IsGray          int32     `json:"isGray,omitempty"`
	TenantId        string    `json:"tenantId,omitempty"`
	CreatedAt       time.Time `json:"createdAt,omitempty"`
	UpdatedAt       time.Time `json:"updatedAt,omitempty"`
	OtaState        string    `json:"otaState,omitempty"`
	OtaCode         int32     `json:"otaCode,omitempty"`
	OtaProgress     int32     `json:"otaProgress,omitempty"`
}

// 实体转pb对象
func IotOtaUpgradeRecord_e2pb(src *IotOtaUpgradeRecordEntitys) *proto.IotOtaUpgradeRecord {
	if src == nil {
		return nil
	}
	pbObj := proto.IotOtaUpgradeRecord{
		Id:              src.Id,
		Version:         src.Version,
		PublishId:       src.PublishId,
		ProductKey:      src.ProductKey,
		DeviceId:        src.DeviceId,
		OriginalVersion: src.OriginalVersion,
		Status:          src.Status,
		IsGray:          src.IsGray,
		TenantId:        src.TenantId,
		OtaState:        src.OtaState,
		OtaCode:         src.OtaCode,
		OtaProgress:     src.OtaProgress,
	}
	return &pbObj
}

// pb对象转实体
func IotOtaUpgradeRecord_pb2e(src *proto.IotOtaUpgradeRecord) *IotOtaUpgradeRecordEntitys {
	if src == nil {
		return nil
	}
	entitysObj := IotOtaUpgradeRecordEntitys{
		Id:              src.Id,
		Version:         src.Version,
		PublishId:       src.PublishId,
		ProductKey:      src.ProductKey,
		DeviceId:        src.DeviceId,
		OriginalVersion: src.OriginalVersion,
		IsGray:          src.IsGray,
		TenantId:        src.TenantId,
		CreatedAt:       src.CreatedAt.AsTime().Unix(),
		UpdatedAt:       src.UpdatedAt.AsTime().Unix(),
		OtaState:        src.OtaState,
		OtaCode:         src.OtaCode,
		OtaProgress:     src.OtaProgress,
		AreaName:        src.Area,
		Result:          "",
	}

	switch src.Status {
	case 1:
		entitysObj.Status = 1
		entitysObj.Result = ""
	case 2:
		entitysObj.Status = 2
		entitysObj.Result = "下载中"
	case 3:
		entitysObj.Status = 2
		entitysObj.Result = "安装中"
	case 4:
		entitysObj.Status = 2
		entitysObj.Result = "成功"
	case 5:
		entitysObj.Status = 2
		entitysObj.Result = "失败"
	}

	return &entitysObj
}
