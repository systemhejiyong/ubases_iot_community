// Code generated by sgen,2023-09-15 15:31:43. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type OemAppDebuggerEntitys struct {
	Id         int64  `json:"id,string"`
	AppKey     string `json:"appKey"`
	AppName    string `json:"appName"`
	AppImg     string `json:"appImg"`
	UserId     int64  `json:"userId,string"`
	UserName   string `json:"userName"`
	RegionId   int64  `json:"regionId,string"`
	RegionName string `json:"regionName"`
	Remark     string `json:"remark"`
	CreatedAt  int64  `json:"createdAt"`
	Status     int    `json:"status"`
}

// 新增参数非空检查
func (s *OemAppDebuggerEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OemAppDebuggerEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OemAppDebuggerQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OemAppDebuggerQuery struct {
	Page      uint64                `json:"page,omitempty"`
	Limit     uint64                `json:"limit,omitempty"`
	Sort      string                `json:"sort,omitempty"`
	SortField string                `json:"sortField,omitempty"`
	SearchKey string                `json:"searchKey,omitempty"`
	Query     *OemAppDebuggerFilter `json:"query,omitempty"`
}

// OemAppDebuggerFilter，查询条件，字段请根据需要自行增减
type OemAppDebuggerFilter struct {
	Id       int64  `json:"id,string,omitempty"`
	AppKey   string `json:"appKey,omitempty"`
	UserId   int64  `json:"userId,string,omitempty"`
	UserName string `json:"userName,omitempty"`
	RegionId int64  `json:"regionId,string,omitempty"`
	Remark   string `json:"remark,omitempty"`
}

// 实体转pb对象
func OemAppDebugger_e2pb(src *OemAppDebuggerEntitys) *proto.OemAppDebugger {
	if src == nil {
		return nil
	}
	pbObj := proto.OemAppDebugger{
		Id:       src.Id,
		AppKey:   src.AppKey,
		UserId:   src.UserId,
		UserName: src.UserName,
		RegionId: src.RegionId,
		Remark:   src.Remark,
	}
	return &pbObj
}

// pb对象转实体
func OemAppDebugger_pb2e(src *proto.OemAppDebugger) *OemAppDebuggerEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OemAppDebuggerEntitys{
		Id:        src.Id,
		AppKey:    src.AppKey,
		AppName:   src.AppName,
		AppImg:    src.AppImg,
		UserId:    src.UserId,
		UserName:  src.UserName,
		RegionId:  src.RegionId,
		Remark:    src.Remark,
		Status:    int(src.Status),
		CreatedAt: src.CreatedAt.AsTime().Unix(),
	}
	return &entitysObj
}
