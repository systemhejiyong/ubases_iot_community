// Code generated by sgen,2023-02-23 16:46:11. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	proto "cloud_platform/iot_proto/protos/protosService"
	"encoding/json"
)

// 增、删、改及查询返回
type OemAppCustomRecordEntitys struct {
	Id            int64           `json:"id,string,omitempty"`
	AppId         int64           `json:"appId,string,omitempty"`
	Version       string          `json:"version,omitempty"`
	PkgUrl        string          `json:"pkgUrl,omitempty"`
	PkgMd5        string          `json:"pkgMd5,omitempty"`
	Os            int32           `json:"os,omitempty"`
	Status        int32           `json:"status,omitempty"`
	Description   string          `json:"description,omitempty"`
	RemindDesc   string          `json:"desc"` //提醒描述中文
	RemindDescEn string          `json:"descEn"`//提醒描述英文
	RemindMode int32 `json:"remindMode"` //更新提醒模式 =1 红点提醒 =2 弹框提醒 =3 强制升级提醒
	CreatedBy     int64           `json:"createdBy,string,omitempty"`
	CreatedAt     int64           `json:"createdAt,omitempty"`
	UpdatedBy     int64           `json:"updatedBy,string,omitempty"`
	UpdatedAt     int64           `json:"updatedAt,omitempty"`
	LaunchMarkets []*LaunchMarket `json:"launchMarkets"`
}

// 上架应用市场
type LaunchMarket struct {
	Code string `json:"code"`
	Name string `json:"name"`
}

// 新增参数非空检查
func (s *OemAppCustomRecordEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OemAppCustomRecordEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OemAppCustomRecordQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OemAppCustomRecordQuery struct {
	Page      uint64                    `json:"page,omitempty"`
	Limit     uint64                    `json:"limit,omitempty"`
	Sort      string                    `json:"sort,omitempty"`
	SortField string                    `json:"sortField,omitempty"`
	SearchKey string                    `json:"searchKey,omitempty"`
	Query     *OemAppCustomRecordFilter `json:"query,omitempty"`
}

// OemAppCustomRecordFilter，查询条件，字段请根据需要自行增减
type OemAppCustomRecordFilter struct {
	Id          int64  `json:"id,string,omitempty"`
	AppId       int64  `json:"appId,string,omitempty"`
	Version     string `json:"version,omitempty"`
	PkgUrl      string `json:"pkgUrl,omitempty"`
	PkgMd5      string `json:"pkgMd5,omitempty"`
	Os          int32  `json:"os,omitempty"`
	Status      int32  `json:"status,omitempty"`
	Description string `json:"description,omitempty"`
	CreatedBy   int64  `json:"createdBy,string,omitempty"`
	CreatedAt   int64  `json:"createdAt,omitempty"`
	UpdatedBy   int64  `json:"updatedBy,string,omitempty"`
	UpdatedAt   int64  `json:"updatedAt,omitempty"`
}

// 实体转pb对象
func OemAppCustomRecord_e2pb(src *OemAppCustomRecordEntitys) *proto.OemAppCustomRecord {
	if src == nil {
		return nil
	}
	pbObj := proto.OemAppCustomRecord{
		Id:          src.Id,
		AppId:       src.AppId,
		Version:     src.Version,
		PkgUrl:      src.PkgUrl,
		PkgMd5:      src.PkgMd5,
		Os:          src.Os,
		Status:      src.Status,
		Description: src.Description,
		CreatedBy:   src.CreatedBy,
		UpdatedBy:   src.UpdatedBy,
		RemindMode: src.RemindMode,
		RemindDesc: src.RemindDesc,
		RemindDescEn: src.RemindDescEn,
	}
	if src.LaunchMarkets != nil {
		pbObj.LaunchMarkets = iotutil.ToString(src.LaunchMarkets)
	}
	return &pbObj
}

// pb对象转实体
func OemAppCustomRecord_pb2e(src *proto.OemAppCustomRecord) *OemAppCustomRecordEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OemAppCustomRecordEntitys{
		Id:          src.Id,
		AppId:       src.AppId,
		Version:     src.Version,
		PkgUrl:      src.PkgUrl,
		PkgMd5:      src.PkgMd5,
		Os:          src.Os,
		Status:      src.Status,
		Description: src.Description,
		CreatedBy:   src.CreatedBy,
		CreatedAt:   src.CreatedAt.AsTime().Unix(),
		UpdatedBy:   src.UpdatedBy,
		UpdatedAt:   src.UpdatedAt.AsTime().Unix(),
		RemindMode: src.RemindMode,
		RemindDesc: src.RemindDesc,
		RemindDescEn: src.RemindDescEn,
	}
	//LaunchMarkets []*LaunchMarket `json:"launchMarkets"`
	if src.LaunchMarkets != "" {
		json.Unmarshal([]byte(src.LaunchMarkets), &entitysObj.LaunchMarkets)
	}
	return &entitysObj
}

// 生成plist文件结构体
type TemplatePlistEntitys struct {
	Title            string `json:"title"`            // app名称
	Version          string `json:"version"`          // app版本
	BundleIdentifier string `json:"bundleIdentifier"` // app包名
	DisplayImage     string `json:"displayImage"`     // 57x57图标
	FullSizeImage    string `json:"fullSizeImage"`    // 512x512图标
	SoftwarePackage  string `json:"softwarePackage"`  // ipa安装包存放链接
}
