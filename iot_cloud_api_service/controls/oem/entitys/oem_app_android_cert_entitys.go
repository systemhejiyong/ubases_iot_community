// Code generated by sgen.exe,2022-06-02 11:15:11. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
)

type OemAppAndroidCertSaveReq struct {
	AppId      string `json:"appId"`
	Resign     int32  `json:"resign"` // 重签名，1支持，2不支持
	CertSha256 string `json:"sha256"` // 用户输入的SHA256，多组逗号分隔
	Version    string `json:"version"`
}

type OemAppAndroidCertDetailRes struct {
	AppId          string `json:"appId"`
	KsMd5          string `json:"ksMd5"`          // md5
	KsSha1         string `json:"ksSha1"`         // sha1
	KsSha256       string `json:"ksSha256"`       // sha256
	Resign         int32  `json:"resign"`         // 重签名，1支持，2不支持
	CertSha256     string `json:"sha256"`         // 用户输入的SHA256，多组逗号分隔
	HwSignCert     string `json:"hwSignCert"`     // 华为签名证书
	GoogleSignCert string `json:"googleSignCert"` // google签名证书
	Version        string `json:"version"`
	Id             string `json:"id"`
}

// 增、删、改及查询返回
type OemAppAndroidCertEntitys struct {
	Id             int64  `json:"id,omitempty"`
	AppId          int64  `json:"appId,omitempty"`
	Version        string `json:"version,omitempty"`
	Resign         int32  `json:"resign,omitempty"`
	CertSha256     string `json:"sha256,omitempty"`
	Keypass        string `json:"keypass,omitempty"`
	Storepass      string `json:"storepass,omitempty"`
	AliasKeytool   string `json:"aliasKeytool,omitempty"`
	Keystore       string `json:"keystore,omitempty"`
	KsMd5          string `json:"ksMd5,omitempty"`
	KsSha1         string `json:"ksSha1,omitempty"`
	KsSha256       string `json:"ksSha256,omitempty"`
	HwSignCert     string `json:"hwSignCert"`     // 华为签名证书
	GoogleSignCert string `json:"googleSignCert"` // google签名证书
}

// 新增参数非空检查
func (s *OemAppAndroidCertEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OemAppAndroidCertEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OemAppAndroidCertQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OemAppAndroidCertQuery struct {
	Page      uint64                   `json:"page,omitempty"`
	Limit     uint64                   `json:"limit,omitempty"`
	Sort      string                   `json:"sort,omitempty"`
	SortField string                   `json:"sortField,omitempty"`
	SearchKey string                   `json:"searchKey,omitempty"`
	Query     *OemAppAndroidCertFilter `json:"query,omitempty"`
}

// OemAppAndroidCertFilter，查询条件，字段请根据需要自行增减
type OemAppAndroidCertFilter struct {
	Id           int64  `json:"id,omitempty"`
	AppId        int64  `json:"appId,omitempty"`
	Version      string `json:"version,omitempty"`
	Resign       int32  `json:"resign,omitempty"`
	CertSha256   string `json:"sha256,omitempty"`
	Keypass      string `json:"keypass,omitempty"`
	Storepass    string `json:"storepass,omitempty"`
	AliasKeytool string `json:"aliasKeytool,omitempty"`
	Keystore     string `json:"keystore,omitempty"`
	KsMd5        string `json:"ksMd5,omitempty"`
	KsSha1       string `json:"ksSha1,omitempty"`
	KsSha256     string `json:"ksSha256,omitempty"`
}

// 实体转pb对象
func OemAppAndroidCert_e2pb(src *OemAppAndroidCertEntitys) *proto.OemAppAndroidCert {
	if src == nil {
		return nil
	}
	pbObj := proto.OemAppAndroidCert{
		Id:             src.Id,
		AppId:          src.AppId,
		Version:        src.Version,
		Resign:         src.Resign,
		CertSha256:     src.CertSha256,
		Keypass:        src.Keypass,
		Storepass:      src.Storepass,
		AliasKeytool:   src.AliasKeytool,
		Keystore:       src.Keystore,
		KsMd5:          src.KsMd5,
		KsSha1:         src.KsSha1,
		KsSha256:       src.KsSha256,
		HwSignCert:     src.HwSignCert,
		GoogleSignCert: src.GoogleSignCert,
	}
	return &pbObj
}

// pb对象转实体
func OemAppAndroidCert_pb2e(src *proto.OemAppAndroidCert) *OemAppAndroidCertEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OemAppAndroidCertEntitys{
		Id:             src.Id,
		AppId:          src.AppId,
		Version:        src.Version,
		Resign:         src.Resign,
		CertSha256:     src.CertSha256,
		Keypass:        src.Keypass,
		Storepass:      src.Storepass,
		AliasKeytool:   src.AliasKeytool,
		Keystore:       src.Keystore,
		KsMd5:          src.KsMd5,
		KsSha1:         src.KsSha1,
		KsSha256:       src.KsSha256,
		HwSignCert:     src.HwSignCert,
		GoogleSignCert: src.GoogleSignCert,
	}
	return &entitysObj
}
