// Code generated by sgen.exe,2022-05-31 16:29:04. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 新增入参
type OemAppEntitysAddReq struct {
	Name               string `json:"name"`
	IosPkgName         string `json:"iosName"`
	IosTeamId          string `json:"iosTeamId"`
	AndroidPkgName     string `json:"androidName"`
	Channel            string `json:"channelName"`
	Region             int32  `json:"region"`
	AppType            int32  `json:"appType"` //APP类型
	AppTemplateId      string `json:"appTemplateId"`
	AppTemplateVersion string `json:"appTemplateVersion"`
	AppDevType         int32  `json:"appDevType"` //APP开发类型
	AppIconUrl         string `json:"appIconUrl"`
}

// 修改名称入参
type OemAppChangeNameReq struct {
	Id         string `json:"appId"`
	Name       string `json:"name"`
	NameEn     string `json:"nameEn"`
	AppIconUrl string `json:"appIconUrl"`
}

// 修改名称入参
type OemAppUpdateTemplateReq struct {
	Id                 string `json:"appId"`
	AppType            int32  `json:"appType"`
	AppTemplateId      string `json:"appTemplateId"`
	AppTemplateVersion string `json:"appTemplateVersion"`
}

// 修改名称入参
type OemAppChangeCurrentStepReq struct {
	Id                 string                 `json:"appId"`
	CurrentStep        int32                  `json:"currentStep"`
	LastBuildTime      *timestamppb.Timestamp `json:"lastBuildTime"`
	LastCertUpdateTime *timestamppb.Timestamp `json:"lastCertUpdateTime"`
}

type OemAppBuildReq struct {
	AppId   string   `json:"appId"`
	Version string   `json:"version"`
	Os      []string `json:"os"`
	BuildId string   `json:"buildId"`
}

type OemAppBuildPackage struct {
	Cause       string `json:"cause"`       // 失败的原因
	Os          int32  `json:"os"`          // ios,android,androidWorld
	Status      int64  `json:"status"`      // 1 未构建, 2 构建中, 3构建成功,4 构建失败
	Message     string `json:"message"`     // 构建结果描述
	TimeSurplus int64  `json:"timeSurplus"` // 构建剩余时间(单位分钟)
	Url         string `json:"url"`         // 测试包下载地址
	UrlMd5      string `json:"urlMd5"`      // 测试包下载地址
	UrlAab      string `json:"urlAab"`      //海外安卓的aab安卓包
	UrlExt      string `json:"urlExt"`      //url的后缀名
	UrlAabExt   string `json:"urlAabExt"`   //urlaab的后缀名
	UrlValidity int64  `json:"urlValidity"` //url有效期
	QrCodeUrl   string `json:"qrCodeUrl"`   //二维码链接
	UrlIos      string `json:"urlIos"`      //url正式包

	SignCerts    []*SignCertItems `json:"signCerts"`    //签名证书集合
	BuildId      string           `json:"buildId"`      //构建Id
	HasUpdate    bool             `json:"hasUpdate"`    //是否有改动
	ShowBuildBtn bool             `json:"showBuildBtn"` // 是否显示构建按钮
}

type SignCertItems struct {
	Type        int32  `json:"type"`        //签名证书类型
	SignCertUrl string `json:"signCertUrl"` //签名证书
}

// 列表对象
type OemAppEntityListRes struct {
	Id                  string `json:"id"`
	Name                string `json:"name"`
	Version             string `json:"version"`
	Status              int32  `json:"status"`
	CurrentStep         int32  `json:"currentStep"`
	TenantId            string `json:"tenantId"`
	CreatedAt           int64  `json:"createdAt"`
	UpdatedAt           int64  `json:"updatedAt"`
	IocnUrl             string `json:"iocnUrl"`
	AppKey              string `json:"appKey"`
	AppType             int32  `json:"appType"` //APP类型
	AppTemplateId       string `json:"appTemplateId"`
	AppTemplateVersion  string `json:"appTemplateVersion"`
	AppDevType          int32  `json:"appDevType"`
	AppIconUrl          string `json:"appIconUrl"`
	IosVersion          string `json:"iosVersion"`
	AndroidInterVersion string `json:"androidInterVersion"`
	AndroidOuterVersion string `json:"androidOuterVersion"`
	IsDefault           int32  `json:"isDefault"`
}

// pb对象转实体
func OemApp_pb2eList(src *proto.OemApp) *OemAppEntityListRes {
	if src == nil {
		return nil
	}
	entitysObj := OemAppEntityListRes{
		Id:                  iotutil.ToString(src.Id),
		Name:                src.Name,
		Version:             src.Version,
		Status:              src.Status,
		CurrentStep:         src.CurrentStep,
		TenantId:            src.TenantId,
		CreatedAt:           src.CreatedAt.AsTime().Unix(),
		UpdatedAt:           src.UpdatedAt.AsTime().Unix(),
		AppKey:              src.AppKey,
		AppType:             src.AppType,
		AppTemplateId:       iotutil.ToString(src.AppTemplateId),
		AppTemplateVersion:  src.AppTemplateVersion,
		AppDevType:          src.AppDevType,
		AppIconUrl:          src.AppIconUrl,
		IosVersion:          src.IosVersion,
		AndroidInterVersion: src.AndroidInterVersion,
		AndroidOuterVersion: src.AndroidOuterVersion,
		IsDefault:           src.IsDefault,
	}
	return &entitysObj
}

// 详细
type OemAppEntityDetailRes struct {
	Id                        string    `json:"appId"`
	Name                      string    `json:"name"`
	Version                   string    `json:"version"`
	Status                    int32     `json:"status"` //1.配置中  2.构建中  3.构建完成  4.上架中  5.已上架
	CurrentStep               int32     `json:"currentStep"`
	IosPkgName                string    `json:"iosPkgName"`
	IosTeamId                 string    `json:"iosTeamId"`
	AndroidPkgName            string    `json:"androidPkgName"`
	Channel                   string    `json:"channel"`
	IconUrl                   string    `json:"iconUrl"`
	AppKey                    string    `json:"appKey"`
	TenantId                  string    `json:"tenantId"`
	CreatedAt                 int64     `json:"createdAt"`
	UpdatedAt                 int64     `json:"updatedAt"`
	BuildStatus               int32     `json:"buildStatus"` //构建状态[1 未构建, 2 构建中, 3 构建完成] 检查构建表的逻辑.决定此字段的数据(暂时弃用)
	NameEn                    string    `json:"nameEn"`
	AppType                   int32     `json:"appType"` //APP类型
	AppTemplateId             string    `json:"appTemplateId"`
	AppTemplateVersion        string    `json:"appTemplateVersion"`
	AppDevType                int32     `json:"appDevType"`
	AppIconUrl                string    `json:"appIconUrl"`
	IosVersion                string    `json:"iosVersion"`
	AndroidInterVersion       string    `json:"androidInterVersion"`
	AndroidOuterVersion       string    `json:"androidOuterVersion"`
	LastBuildTime             time.Time `json:"lastBuildTime,omitempty"`
	LastAndroidCertUpdateTime time.Time `json:"lastAndroidCertUpdateTime,omitempty"` //最后Android证书配置时间
	LastIosCertUpdateTime     time.Time `json:"lastIosCertUpdateTime,omitempty"`     //最后ios证书配置时间
	ThemeJson                 string    `json:"themeJson"`
	IsDefault                 int32     `json:"isDefault"`
}

// pb对象转实体
func OemApp_pb2eDetail(src *proto.OemApp) *OemAppEntityDetailRes {
	if src == nil {
		return nil
	}
	entitysObj := OemAppEntityDetailRes{
		Id:                        iotutil.ToString(src.Id),
		Name:                      src.Name,
		Version:                   src.Version,
		Status:                    src.Status,
		CurrentStep:               src.CurrentStep,
		AndroidPkgName:            src.AndroidPkgName,
		IosPkgName:                src.IosPkgName,
		IosTeamId:                 src.IosTeamId,
		Channel:                   src.Channel,
		AppKey:                    src.AppKey,
		TenantId:                  src.TenantId,
		CreatedAt:                 src.CreatedAt.AsTime().Unix(),
		UpdatedAt:                 src.UpdatedAt.AsTime().Unix(),
		NameEn:                    src.NameEn,
		AppType:                   src.AppType,
		AppTemplateId:             iotutil.ToString(src.AppTemplateId),
		AppTemplateVersion:        src.AppTemplateVersion,
		AppDevType:                src.AppDevType,
		AppIconUrl:                src.AppIconUrl,
		IosVersion:                src.IosVersion,
		AndroidInterVersion:       src.AndroidInterVersion,
		AndroidOuterVersion:       src.AndroidOuterVersion,
		ThemeJson:                 src.ThemeJson,
		LastBuildTime:             src.LastBuildTime.AsTime(),
		LastAndroidCertUpdateTime: src.LastAndroidCertUpdateTime.AsTime(),
		LastIosCertUpdateTime:     src.LastIosCertUpdateTime.AsTime(),
		IsDefault:                 src.IsDefault,
	}
	return &entitysObj
}

// 增、删、改及查询返回
type OemAppEntitys struct {
	Id                 int64     `json:"id,omitempty"`
	AppKey             string    `json:"appKey,omitempty"`
	AppSecret          string    `json:"appSecret,omitempty"`
	Name               string    `json:"name,omitempty"`
	Version            string    `json:"version,omitempty"`
	IosPkgName         string    `json:"iosPkgName,omitempty"`
	IosTeamId          string    `json:"iosTeamId"`
	AndroidPkgName     string    `json:"androidPkgName,omitempty"`
	Channel            string    `json:"channel,omitempty"`
	Status             int32     `json:"status,omitempty"`
	AmapKey            string    `json:"amapKey,omitempty"`
	GooglemapKey       string    `json:"googlemapKey,omitempty"`
	Region             int32     `json:"region,omitempty"`
	CurrentStep        int32     `json:"currentStep,omitempty"`
	TenantId           string    `json:"tenantId,omitempty"`
	CreatedBy          int64     `json:"createdBy,omitempty"`
	UpdatedBy          int64     `json:"updatedBy,omitempty"`
	CreatedAt          time.Time `json:"createdAt,omitempty"`
	UpdatedAt          time.Time `json:"updatedAt,omitempty"`
	DeletedAt          time.Time `json:"deletedAt,omitempty"`
	NameEn             string    `json:"nameEn,omitempty"`
	AppType            int32     `json:"appType"` //APP类型
	AppTemplateId      string    `json:"appTemplateId"`
	AppTemplateVersion string    `json:"appTemplateVersion"`
}

// 新增参数非空检查
func (s *OemAppEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OemAppEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OemAppQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OemAppQuery struct {
	Page       int64  `json:"pageNum" form:"pageNum"`
	Limit      int64  `json:"pageSize" form:"pageSize"`
	Status     int32  `json:"status" form:"status"`
	TenantId   string `json:"tenantId" form:"tenantId"`
	AppDevType int32  `json:"appDevType" form:"appDevType"`
	IsDefault  int32  `json:"isDefault" form:"isDefault"`
}

// OemAppFilter，查询条件，字段请根据需要自行增减
type OemAppFilter struct {
	Id                 int64     `json:"id,omitempty"`
	AppKey             string    `json:"appKey,omitempty"`
	AppSecret          string    `json:"appSecret,omitempty"`
	Name               string    `json:"name,omitempty"`
	Version            string    `json:"version,omitempty"`
	IosPkgName         string    `json:"iosPkgName,omitempty"`
	IosTeamId          string    `json:"iosTeamId"`
	AndroidPkgName     string    `json:"androidPkgName,omitempty"`
	Channel            string    `json:"channel,omitempty"`
	Status             int32     `json:"status,omitempty"`
	AmapKey            string    `json:"amapKey,omitempty"`
	GooglemapKey       string    `json:"googlemapKey,omitempty"`
	Region             int32     `json:"region,omitempty"`
	CurrentStep        int32     `json:"currentStep,omitempty"`
	TenantId           string    `json:"tenantId,omitempty"`
	CreatedBy          int64     `json:"createdBy,omitempty"`
	UpdatedBy          int64     `json:"updatedBy,omitempty"`
	CreatedAt          time.Time `json:"createdAt,omitempty"`
	UpdatedAt          time.Time `json:"updatedAt,omitempty"`
	DeletedAt          time.Time `json:"deletedAt,omitempty"`
	AppType            int32     `json:"appType"` //APP类型
	AppTemplateId      string    `json:"appTemplateId"`
	AppTemplateVersion string    `json:"appTemplateVersion"`
}

// 实体转pb对象
func OemApp_e2pb(src *OemAppEntitys) *proto.OemApp {
	if src == nil {
		return nil
	}
	pbObj := proto.OemApp{
		Id:                 src.Id,
		AppKey:             src.AppKey,
		AppSecret:          src.AppSecret,
		Name:               src.Name,
		Version:            src.Version,
		IosPkgName:         src.IosPkgName,
		IosTeamId:          src.IosTeamId,
		AndroidPkgName:     src.AndroidPkgName,
		Channel:            src.Channel,
		Status:             src.Status,
		AmapKey:            src.AmapKey,
		GooglemapKey:       src.GooglemapKey,
		Region:             src.Region,
		CurrentStep:        src.CurrentStep,
		TenantId:           src.TenantId,
		CreatedBy:          src.CreatedBy,
		UpdatedBy:          src.UpdatedBy,
		CreatedAt:          timestamppb.New(src.CreatedAt),
		UpdatedAt:          timestamppb.New(src.UpdatedAt),
		NameEn:             src.NameEn,
		AppType:            src.AppType,
		AppTemplateId:      iotutil.ToInt64(src.AppTemplateId),
		AppTemplateVersion: src.AppTemplateVersion,
	}
	return &pbObj
}

// pb对象转实体
func OemApp_pb2e(src *proto.OemApp) *OemAppEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OemAppEntitys{
		Id:                 src.Id,
		AppKey:             src.AppKey,
		AppSecret:          src.AppSecret,
		Name:               src.Name,
		Version:            src.Version,
		IosPkgName:         src.IosPkgName,
		AndroidPkgName:     src.AndroidPkgName,
		Channel:            src.Channel,
		Status:             src.Status,
		AmapKey:            src.AmapKey,
		GooglemapKey:       src.GooglemapKey,
		Region:             src.Region,
		CurrentStep:        src.CurrentStep,
		TenantId:           src.TenantId,
		CreatedBy:          src.CreatedBy,
		UpdatedBy:          src.UpdatedBy,
		CreatedAt:          src.CreatedAt.AsTime(),
		UpdatedAt:          src.UpdatedAt.AsTime(),
		NameEn:             src.NameEn,
		AppType:            src.AppType,
		AppTemplateId:      iotutil.ToString(src.AppTemplateId),
		AppTemplateVersion: src.AppTemplateVersion,
	}
	return &entitysObj
}
