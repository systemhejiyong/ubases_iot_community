// Code generated by sgen.exe,2022-11-16 16:26:52. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 文档列表
type OmeAppDocListRes struct {
	Id             string          `json:"id"`
	Name           string          `json:"name"`
	Apps           []OemAppDocApp  `json:"apps"`
	Langs          []OemAppDocLang `json:"langs"`
	AnswerCount    int64           `json:"answerCount"`
	IsPub          int             `json:"isPub"` // 1  是公版, 2 不是公版
	HelpCenterName string          `json:"helpCenterName"`
	Version        string          `json:"version"`
}

// 文档创建请求参数
type OemAppDocSaveReq struct {
	Id              string          `json:"id"`
	Name            string          `json:"name"`
	Apps            []OemAppDocApp  `json:"apps"`
	Langs           []OemAppDocLang `json:"langs"`
	RemainLang      string          `json:"remainLang"`      //兜底的语种编码
	IsSucceedPUbDoc int             `json:"isSucceedPUbDoc"` //是否继承公版文档
	SucceedPubDoc   []OemAppDocLang `json:"succeedPubDoc"`   //继承公版的语种(json字符串) 可以空
	HelpCenterName  string          `json:"helpCenterName"`
	Version         string          `json:"version,omitempty"`
}

type OemAppDocApp struct {
	AppId              string `json:"appId"`
	AppName            string `json:"appName"`
	AppKey             string `json:"appkey"`
	AppTemplateId      int64  `json:"appTemplateId"`      //APP模板Id
	AppTemplateType    int32  `json:"appTemplateType"`    //APP模板类型
	AppTemplateVersion string `json:"appTemplateVersion"` //APP模板版本
}

type OemAppDocLang struct {
	Lang     string `json:"lang"`
	LangName string `json:"langName"`
}

// 增、删、改及查询返回
type OemAppDocEntitys struct {
	Id              int64     `json:"id,omitempty"`
	Name            string    `json:"name,omitempty"`
	Apps            string    `json:"apps,omitempty"`
	Langs           string    `json:"langs,omitempty"`
	RemainLang      string    `json:"remainLang,omitempty"`
	IsSucceedPubDoc int32     `json:"isSucceedPubDoc,omitempty"`
	SucceedPubDoc   string    `json:"succeedPubDoc,omitempty"`
	TenantId        string    `json:"tenantId,omitempty"`
	CreatedBy       int64     `json:"createdBy,omitempty"`
	CreatedAt       time.Time `json:"createdAt,omitempty"`
	UpdatedBy       int64     `json:"updatedBy,omitempty"`
	UpdatedAt       time.Time `json:"updatedAt,omitempty"`
	DeletedAt       time.Time `json:"deletedAt,omitempty"`
	HelpCenterName  string    `json:"helpCenterName,omitempty"`
	Version         string    `json:"version,omitempty"`
}

// 新增参数非空检查
func (s *OemAppDocEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OemAppDocEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OemAppDocQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OemAppDocQuery struct {
	Page      uint64           `json:"page,omitempty"`
	Limit     uint64           `json:"limit,omitempty"`
	Sort      string           `json:"sort,omitempty"`
	SortField string           `json:"sortField,omitempty"`
	SearchKey string           `json:"searchKey,omitempty"`
	Query     *OemAppDocFilter `json:"query,omitempty"`
}

// OemAppDocFilter，查询条件，字段请根据需要自行增减
type OemAppDocFilter struct {
	Id              int64     `json:"id,omitempty"`
	Name            string    `json:"name,omitempty"`
	Apps            string    `json:"apps,omitempty"`
	Langs           string    `json:"langs,omitempty"`
	RemainLang      string    `json:"remainLang,omitempty"`
	IsSucceedPubDoc int32     `json:"isSucceedPubDoc,omitempty"`
	SucceedPubDoc   string    `json:"succeedPubDoc,omitempty"`
	TenantId        string    `json:"tenantId,omitempty"`
	CreatedBy       int64     `json:"createdBy,omitempty"`
	CreatedAt       time.Time `json:"createdAt,omitempty"`
	UpdatedBy       int64     `json:"updatedBy,omitempty"`
	UpdatedAt       time.Time `json:"updatedAt,omitempty"`
	DeletedAt       time.Time `json:"deletedAt,omitempty"`
	HelpId          int64     `json:"helpId,string,omitempty"`
	Version         string    `json:"version,omitempty"`
}

// 实体转pb对象
func OemAppDoc_e2pb(src *OemAppDocEntitys) *proto.OemAppDoc {
	if src == nil {
		return nil
	}
	pbObj := proto.OemAppDoc{
		Id:              src.Id,
		Name:            src.Name,
		Apps:            src.Apps,
		Langs:           src.Langs,
		RemainLang:      src.RemainLang,
		IsSucceedPubDoc: src.IsSucceedPubDoc,
		SucceedPubDoc:   src.SucceedPubDoc,
		TenantId:        src.TenantId,
		CreatedBy:       src.CreatedBy,
		CreatedAt:       timestamppb.New(src.CreatedAt),
		UpdatedBy:       src.UpdatedBy,
		UpdatedAt:       timestamppb.New(src.UpdatedAt),
		HelpCenterName:  src.HelpCenterName,
		Version:         src.Version,
	}
	return &pbObj
}

// pb对象转实体
func OemAppDoc_pb2e(src *proto.OemAppDoc) *OemAppDocSaveReq {
	if src == nil {
		return nil
	}
	var rs = OemAppDocSaveReq{}
	rs.Id = iotutil.ToString(src.Id)
	rs.Name = src.Name
	rs.RemainLang = src.RemainLang
	rs.IsSucceedPUbDoc = int(src.IsSucceedPubDoc)

	apps := make([]OemAppDocApp, 0)
	iotutil.JsonToStruct(src.Apps, &apps)
	rs.Apps = apps

	langs := make([]OemAppDocLang, 0)
	iotutil.JsonToStruct(src.Langs, &langs)
	rs.Langs = langs

	pubLangs := make([]OemAppDocLang, 0)
	iotutil.JsonToStruct(src.SucceedPubDoc, &pubLangs)
	rs.SucceedPubDoc = pubLangs
	rs.HelpCenterName = src.HelpCenterName
	rs.Version = src.Version

	return &rs
}

// pb对象转实体
func OemAppDoc_pb2eList(src *proto.OemAppDoc) *OmeAppDocListRes {
	if src == nil {
		return nil
	}
	var rs = OmeAppDocListRes{}
	rs.Id = iotutil.ToString(src.Id)
	rs.Name = src.Name
	//rs.RemainLang = src.RemainLang
	// rs.IsSucceedPUbDoc = int(src.IsSucceedPubDoc)

	apps := make([]OemAppDocApp, 0)
	iotutil.JsonToStruct(src.Apps, &apps)
	rs.Apps = apps

	langs := make([]OemAppDocLang, 0)
	iotutil.JsonToStruct(src.Langs, &langs)
	rs.Langs = langs

	//pubLangs := make([]OemAppDocLang,0)
	//iotutil.JsonToStruct(src.SucceedPubDoc,&pubLangs)
	//rs.SucceedPubDoc = pubLangs
	rs.HelpCenterName = src.HelpCenterName
	rs.Version = src.Version
	return &rs
}
