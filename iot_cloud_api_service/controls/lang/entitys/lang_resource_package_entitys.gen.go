// Code generated by sgen.exe,2022-05-31 13:46:36. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	services "cloud_platform/iot_cloud_api_service/controls/global"
	"cloud_platform/iot_common/iotconst"
	proto "cloud_platform/iot_proto/protos/protosService"
	"strings"
)

// 增、删、改及查询返回
type LangResourcePackageEntitys struct {
	Id                 int64  `json:"id,string"`
	BelongType         int32  `json:"belongType"`
	PackageName        string `json:"packageName"`          //APP包名称
	AppTemplateId      int64  `json:"appTemplateId,string"` //APP模板Id
	AppTemplateType    int32  `json:"appTemplateType"`      //APP模板类型
	AppTemplateVersion string `json:"appTemplateVersion"`
	FileName           string `json:"fileName"`
	FileSize           int64  `json:"fileSize"`
	LangsDesc          string `json:"langsDesc"`
	CreatedBy          int64  `json:"createdBy"`
	UpdatedBy          int64  `json:"updatedBy"`
	CreatedAt          int64  `json:"createdAt"`
	UpdatedAt          int64  `json:"updatedAt"`
	UploadUser         string `json:"uploadUser"`
}

// 新增参数非空检查
func (s *LangResourcePackageEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *LangResourcePackageEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*LangResourcePackageQuery) QueryCheck() error {
	return nil
}

// 查询条件
type LangResourcePackageQuery struct {
	Page      uint64                     `json:"page,omitempty"`
	Limit     uint64                     `json:"limit,omitempty"`
	Sort      string                     `json:"sort,omitempty"`
	SortField string                     `json:"sortField,omitempty"`
	SearchKey string                     `json:"searchKey,omitempty"`
	Query     *LangResourcePackageFilter `json:"query,omitempty"`
}

// LangResourcePackageFilter，查询条件，字段请根据需要自行增减
type LangResourcePackageFilter struct {
	Id              int64  `json:"id,string,omitempty"`
	BelongType      int32  `json:"belongType,omitempty"`
	PackageName     string `json:"packageName,omitempty"`
	AppTemplateId   int64  `json:"appTemplateId,string,omitempty"`
	AppTemplateType int32  `json:"appTemplateType,omitempty"`
}

// 实体转pb对象
func LangResourcePackage_e2pb(src *LangResourcePackageEntitys) *proto.LangResourcePackage {
	if src == nil {
		return nil
	}
	pbObj := proto.LangResourcePackage{
		Id:              src.Id,
		BelongType:      src.BelongType,
		PackageName:     src.PackageName,
		FileSize:        src.FileSize,
		FileName:        src.FileName,
		AppTemplateType: src.AppTemplateType,
		AppTemplateId:   src.AppTemplateId,
	}
	return &pbObj
}

// pb对象转实体
func LangResourcePackage_pb2e(src *proto.LangResourcePackage) *LangResourcePackageEntitys {
	if src == nil {
		return nil
	}
	entitysObj := LangResourcePackageEntitys{
		Id:                 src.Id,
		BelongType:         src.BelongType,
		PackageName:        src.PackageName,
		CreatedBy:          src.CreatedBy,
		UpdatedBy:          src.UpdatedBy,
		AppTemplateType:    src.AppTemplateType,
		AppTemplateId:      src.AppTemplateId,
		AppTemplateVersion: src.AppTemplateVersion,
		FileSize:           src.FileSize,
		FileName:           src.FileName,
		CreatedAt:          src.CreatedAt.AsTime().Unix(),
		UpdatedAt:          src.UpdatedAt.AsTime().Unix(),
	}

	//语言翻译
	if src.Langs != nil {
		langsDesc := []string{}
		languageType, _ := new(services.DictTempData).GetDictByCode(iotconst.Dict_language_type)
		for _, lang := range src.Langs {
			langsDesc = append(langsDesc, languageType.ValueStr(lang))
		}
		entitysObj.LangsDesc = strings.Join(langsDesc, ",")
	}
	//处理上传人转换
	//userCached := services.UserCachedData{}
	//user, err := userCached.GetByUserId(iotutil.ToString(entitysObj.UpdatedBy))
	//if err == nil && user != nil {
	//	entitysObj.UploadUser = user.UserNickname
	//}
	return &entitysObj
}
