// Code generated by sgen.exe,2022-05-20 13:36:04. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type SceneIntelligenceTaskEntitys struct {
	Id             int64  `json:"id,string,omitempty"`
	IntelligenceId int64  `json:"intelligenceId,string,omitempty"`
	TaskImg        string `json:"taskImg,omitempty"`
	TaskDesc       string `json:"taskDesc,omitempty"`
	TaskType       int32  `json:"taskType,omitempty"`
	ObjectId       string `json:"objectId,omitempty"`
	ObjectDesc     string `json:"objectDesc,omitempty"`
	FuncKey        string `json:"funcKey,omitempty"`
	FuncDesc       string `json:"funcDesc,omitempty"`
	FuncValue      string `json:"funcValue,omitempty"`

	ProductKey string `json:"productKey"`
	ProductId  int64  `json:"productId"`
}

// 新增参数非空检查
func (s *SceneIntelligenceTaskEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *SceneIntelligenceTaskEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*SceneIntelligenceTaskQuery) QueryCheck() error {
	return nil
}

// 查询条件
type SceneIntelligenceTaskQuery struct {
	Page      uint64                       `json:"page,omitempty"`
	Limit     uint64                       `json:"limit,omitempty"`
	Sort      string                       `json:"sort,omitempty"`
	SortField string                       `json:"sortField,omitempty"`
	SearchKey string                       `json:"searchKey,omitempty"`
	Query     *SceneIntelligenceTaskFilter `json:"query,omitempty"`
}

// SceneIntelligenceTaskFilter，查询条件，字段请根据需要自行增减
type SceneIntelligenceTaskFilter struct {
	Id             int64  `json:"id,string,omitempty"`
	IntelligenceId int64  `json:"intelligenceId,string,omitempty"`
	TaskImg        string `json:"taskImg,omitempty"`
	TaskDesc       string `json:"taskDesc,omitempty"`
	TaskType       int32  `json:"taskType,omitempty"`
	ObjectId       string `json:"objectId,omitempty"`
	ObjectDesc     string `json:"objectDesc,omitempty"`
	FuncKey        string `json:"funcKey,omitempty"`
	FuncDesc       string `json:"funcDesc,omitempty"`
	FuncValue      string `json:"funcValue,omitempty"`

	ProductKey string `json:"productKey"`
	ProductId  int64  `json:"productId"`
}

// 实体转pb对象
func SceneIntelligenceTask_e2pb(src *SceneIntelligenceTaskEntitys) *proto.SceneIntelligenceTask {
	if src == nil {
		return nil
	}
	pbObj := proto.SceneIntelligenceTask{
		Id:             src.Id,
		IntelligenceId: src.IntelligenceId,
		TaskImg:        src.TaskImg,
		TaskDesc:       src.TaskDesc,
		TaskType:       src.TaskType,
		ObjectId:       src.ObjectId,
		ObjectDesc:     src.ObjectDesc,
		FuncKey:        src.FuncKey,
		FuncDesc:       src.FuncDesc,
		FuncValue:      src.FuncValue,

		ProductId:  src.ProductId,
		ProductKey: src.ProductKey,
	}
	return &pbObj
}

// pb对象转实体
func SceneIntelligenceTask_pb2e(src *proto.SceneIntelligenceTask) *SceneIntelligenceTaskEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SceneIntelligenceTaskEntitys{
		Id:             src.Id,
		IntelligenceId: src.IntelligenceId,
		TaskImg:        src.TaskImg,
		TaskDesc:       src.TaskDesc,
		TaskType:       src.TaskType,
		ObjectId:       src.ObjectId,
		ObjectDesc:     src.ObjectDesc,
		FuncKey:        src.FuncKey,
		FuncDesc:       src.FuncDesc,
		FuncValue:      src.FuncValue,

		ProductId:  src.ProductId,
		ProductKey: src.ProductKey,
	}
	return &entitysObj
}
