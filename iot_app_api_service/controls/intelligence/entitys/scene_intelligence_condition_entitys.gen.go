// Code generated by sgen.exe,2022-05-20 13:36:03. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type SceneIntelligenceConditionEntitys struct {
	Id                int64  `json:"id,string,omitempty"`
	IntelligenceId    int64  `json:"intelligenceId,string,omitempty"`
	ConditionType     int32  `json:"conditionType,omitempty"`
	Desc              string `json:"desc,omitempty"`
	WeatherCountry    string `json:"weatherCountry,omitempty"`
	WeatherCity       string `json:"weatherCity,omitempty"`
	WeatherArea       string `json:"weatherArea,omitempty"`
	WeatherType       int32  `json:"weatherType,omitempty"`
	WeatherValue      string `json:"weatherValue,omitempty"`
	WeatherCompare    int32  `json:"weatherCompare,omitempty"`
	TimerWeeks        string `json:"timerWeeks,omitempty"`
	TimerValue        string `json:"timerValue,omitempty"`
	DeviceDid         string `json:"deviceDid,omitempty"`
	DevicePropKey     string `json:"devicePropKey,omitempty"`
	DevicePropCompare int32  `json:"devicePropCompare,omitempty"`
	DevicePropValue   string `json:"devicePropValue,omitempty"`

	ProductKey string `json:"productKey"`
	ProductId  int64  `json:"productId"`
}

// 新增参数非空检查
func (s *SceneIntelligenceConditionEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *SceneIntelligenceConditionEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*SceneIntelligenceConditionQuery) QueryCheck() error {
	return nil
}

// 查询条件
type SceneIntelligenceConditionQuery struct {
	Page      uint64                            `json:"page,omitempty"`
	Limit     uint64                            `json:"limit,omitempty"`
	Sort      string                            `json:"sort,omitempty"`
	SortField string                            `json:"sortField,omitempty"`
	SearchKey string                            `json:"searchKey,omitempty"`
	Query     *SceneIntelligenceConditionFilter `json:"query,omitempty"`
}

// SceneIntelligenceConditionFilter，查询条件，字段请根据需要自行增减
type SceneIntelligenceConditionFilter struct {
	Id                int64  `json:"id,string,omitempty"`
	IntelligenceId    int64  `json:"intelligenceId,string,omitempty"`
	ConditionType     int32  `json:"conditionType,omitempty"`
	Desc              string `json:"desc,omitempty"`
	WeatherCountry    string `json:"weatherCountry,omitempty"`
	WeatherCity       string `json:"weatherCity,omitempty"`
	WeatherArea       string `json:"weatherArea,omitempty"`
	WeatherType       int32  `json:"weatherType,omitempty"`
	WeatherValue      string `json:"weatherValue,omitempty"`
	WeatherCompare    int32  `json:"weatherCompare,omitempty"`
	TimerWeeks        string `json:"timerWeeks,omitempty"`
	TimerValue        string `json:"timerValue,omitempty"`
	DeviceDid         string `json:"deviceDid,omitempty"`
	DevicePropKey     string `json:"devicePropKey,omitempty"`
	DevicePropCompare int32  `json:"devicePropCompare,omitempty"`
	DevicePropValue   string `json:"devicePropValue,omitempty"`

	ProductKey string `json:"productKey"`
	ProductId  int64  `json:"productId"`
}

// 实体转pb对象
func SceneIntelligenceCondition_e2pb(src *SceneIntelligenceConditionEntitys) *proto.SceneIntelligenceCondition {
	if src == nil {
		return nil
	}
	pbObj := proto.SceneIntelligenceCondition{
		Id:                src.Id,
		IntelligenceId:    src.IntelligenceId,
		ConditionType:     src.ConditionType,
		Desc:              src.Desc,
		WeatherCountry:    src.WeatherCountry,
		WeatherCity:       src.WeatherCity,
		WeatherArea:       src.WeatherArea,
		WeatherType:       src.WeatherType,
		WeatherValue:      src.WeatherValue,
		WeatherCompare:    src.WeatherCompare,
		TimerWeeks:        src.TimerWeeks,
		TimerValue:        src.TimerValue,
		DeviceDid:         src.DeviceDid,
		DevicePropKey:     src.DevicePropKey,
		DevicePropCompare: src.DevicePropCompare,
		DevicePropValue:   src.DevicePropValue,
		ProductId:         src.ProductId,
		ProductKey:        src.ProductKey,
	}
	return &pbObj
}

// pb对象转实体
func SceneIntelligenceCondition_pb2e(src *proto.SceneIntelligenceCondition) *SceneIntelligenceConditionEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SceneIntelligenceConditionEntitys{
		Id:                src.Id,
		IntelligenceId:    src.IntelligenceId,
		ConditionType:     src.ConditionType,
		Desc:              src.Desc,
		WeatherCountry:    src.WeatherCountry,
		WeatherCity:       src.WeatherCity,
		WeatherArea:       src.WeatherArea,
		WeatherType:       src.WeatherType,
		WeatherValue:      src.WeatherValue,
		WeatherCompare:    src.WeatherCompare,
		TimerWeeks:        src.TimerWeeks,
		TimerValue:        src.TimerValue,
		DeviceDid:         src.DeviceDid,
		DevicePropKey:     src.DevicePropKey,
		DevicePropCompare: src.DevicePropCompare,
		DevicePropValue:   src.DevicePropValue,
		ProductId:         src.ProductId,
		ProductKey:        src.ProductKey,
	}
	return &entitysObj
}
