// Code generated by sgen.exe,2022-05-20 13:36:03. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type SceneIntelligenceLogEntitys struct {
	Id        int64  `json:"id,string"`
	ObjectId  int64  `json:"objectId,string"`
	HomeId    int64  `json:"homeId,string,omitempty"`
	UserId    int64  `json:"userId,string,omitempty"`
	Name      string `json:"name"`
	Content   string `json:"content"`
	ResultId  int64  `json:"resultId,string"`
	IsSuccess int32  `json:"isSuccess"`
	SceneType int32  `json:"sceneType"`
	CreatedAt int64  `json:"createdAt,omitempty"`
}

// 新增参数非空检查
func (s *SceneIntelligenceLogEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *SceneIntelligenceLogEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*SceneIntelligenceLogQuery) QueryCheck() error {
	return nil
}

// 查询条件
type SceneIntelligenceLogQuery struct {
	Page      uint64                      `json:"page,omitempty"`
	Limit     uint64                      `json:"limit,omitempty"`
	Sort      string                      `json:"sort,omitempty"`
	SortField string                      `json:"sortField,omitempty"`
	SearchKey string                      `json:"searchKey,omitempty"`
	Query     *SceneIntelligenceLogFilter `json:"query,omitempty"`
}

// SceneIntelligenceLogFilter，查询条件，字段请根据需要自行增减
type SceneIntelligenceLogFilter struct {
	Id        int64     `json:"id,omitempty"`
	ObjectId  int64     `json:"objectId,omitempty"`
	HomeId    int64     `json:"homeId,omitempty"`
	UserId    int64     `json:"userId,omitempty"`
	Content   string    `json:"content,omitempty"`
	ResultId  int64     `json:"resultId,omitempty"`
	IsSuccess int32     `json:"isSuccess,omitempty"`
	SceneType int32     `json:"sceneType,omitempty"`
	CreatedAt time.Time `json:"createdAt,omitempty"`
}

// 实体转pb对象
func SceneIntelligenceLog_e2pb(src *SceneIntelligenceLogEntitys) *proto.SceneIntelligenceLog {
	if src == nil {
		return nil
	}
	pbObj := proto.SceneIntelligenceLog{
		Id:        src.Id,
		ObjectId:  src.ObjectId,
		HomeId:    src.HomeId,
		UserId:    src.UserId,
		Content:   src.Content,
		ResultId:  src.ResultId,
		IsSuccess: src.IsSuccess,
		SceneType: src.SceneType,
		CreatedAt: timestamppb.New(time.Unix(src.CreatedAt, 0)),
	}
	return &pbObj
}

// pb对象转实体
func SceneIntelligenceLog_pb2e(src *proto.SceneIntelligenceLog) *SceneIntelligenceLogEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SceneIntelligenceLogEntitys{
		Id:        src.Id,
		ObjectId:  src.ObjectId,
		HomeId:    src.HomeId,
		UserId:    src.UserId,
		Name:      src.Name,
		Content:   src.Content,
		ResultId:  src.ResultId,
		IsSuccess: src.IsSuccess,
		SceneType: src.SceneType,
		CreatedAt: src.CreatedAt.AsTime().Unix(),
	}
	return &entitysObj
}
