// Code generated by sgen.exe,2022-05-20 13:36:03. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type SceneIntelligenceResultEntitys struct {
	Id             int64     `json:"id,string,omitempty"`
	RunTime        time.Time `json:"runTime,omitempty"`
	IntelligenceId int64     `json:"intelligenceId,omitempty"`
	RunStatus      int32     `json:"runStatus,omitempty"`
}

// 新增参数非空检查
func (s *SceneIntelligenceResultEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *SceneIntelligenceResultEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*SceneIntelligenceResultQuery) QueryCheck() error {
	return nil
}

// 查询条件
type SceneIntelligenceResultQuery struct {
	Page      uint64                         `json:"page,omitempty"`
	Limit     uint64                         `json:"limit,omitempty"`
	Sort      string                         `json:"sort,omitempty"`
	SortField string                         `json:"sortField,omitempty"`
	SearchKey string                         `json:"searchKey,omitempty"`
	Query     *SceneIntelligenceResultFilter `json:"query,omitempty"`
}

// SceneIntelligenceResultFilter，查询条件，字段请根据需要自行增减
type SceneIntelligenceResultFilter struct {
	Id             int64     `json:"id,omitempty"`
	RunTime        time.Time `json:"runTime,omitempty"`
	IntelligenceId int64     `json:"intelligenceId,omitempty"`
	RunStatus      int32     `json:"runStatus,omitempty"`
}

// 实体转pb对象
func SceneIntelligenceResult_e2pb(src *SceneIntelligenceResultEntitys) *proto.SceneIntelligenceResult {
	if src == nil {
		return nil
	}
	pbObj := proto.SceneIntelligenceResult{
		Id:             src.Id,
		RunTime:        timestamppb.New(src.RunTime),
		IntelligenceId: src.IntelligenceId,
		RunStatus:      src.RunStatus,
	}
	return &pbObj
}

// pb对象转实体
func SceneIntelligenceResult_pb2e(src *proto.SceneIntelligenceResult) *SceneIntelligenceResultEntitys {
	if src == nil {
		return nil
	}
	entitysObj := SceneIntelligenceResultEntitys{
		Id:             src.Id,
		RunTime:        src.RunTime.AsTime(),
		IntelligenceId: src.IntelligenceId,
		RunStatus:      src.RunStatus,
	}
	return &entitysObj
}
