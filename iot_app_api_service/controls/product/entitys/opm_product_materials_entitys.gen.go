// Code generated by sgen.exe,2022-11-11 10:46:48. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type OpmProductMaterialsEntitys struct {
	Id              int64    `json:"id,string,omitempty"`
	TenantId        string   `json:"tenantId,omitempty"`
	Name            string   `json:"name,omitempty"`
	Type            string   `json:"type,omitempty"`
	SuitableProduct []string `json:"suitableProduct,omitempty"`
	ImageUrl        string   `json:"imageUrl,omitempty"`
	ProductPage     string   `json:"productPage,omitempty"`
	Count           int64    `json:"count"`
	BrandCode       string   `json:"brandCode,omitempty"`
	BrandName       string   `json:"brandName,omitempty"`
	FragranceCode   string   `json:"fragranceCode,omitempty"`
	FragranceName   string   `json:"fragranceName,omitempty"`
	ProductAddress  string   `json:"productAddress,omitempty"`
	Variety         string   `json:"variety,omitempty"`
	Ingredient      string   `json:"ingredient,omitempty"`
	Effect          string   `json:"effect,omitempty"`
	Description     string   `json:"description,omitempty"`
	CreatedBy       int64    `json:"createdBy,string,omitempty"`
	CreatedAt       int64    `json:"createdAt,omitempty"`
	UpdatedBy       int64    `json:"updatedBy,string,omitempty"`
	UpdatedAt       int64    `json:"updatedAt,omitempty"`
}

// 新增参数非空检查
func (s *OpmProductMaterialsEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *OpmProductMaterialsEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*OpmProductMaterialsQuery) QueryCheck() error {
	return nil
}

// 查询条件
type OpmProductMaterialsQuery struct {
	Page      uint64                        `json:"page,omitempty"`
	Limit     uint64                        `json:"limit,omitempty"`
	Sort      string                        `json:"sort,omitempty"`
	SortField string                        `json:"sortField,omitempty"`
	SearchKey string                        `json:"searchKey,omitempty"`
	Query     *OpmProductMaterialsFilterObj `json:"query,omitempty"`
}

// OpmProductMaterialsFilter，查询条件，字段请根据需要自行增减
type OpmProductMaterialsFilterObj struct {
	Name      string `json:"name,omitempty"`
	Type      string `json:"type,omitempty"`
	ProductId string `json:"productId,omitempty"`
}

// OpmProductMaterialsFilter，查询条件，字段请根据需要自行增减
type OpmProductMaterialsFilter struct {
	Id              int64    `json:"id,string,omitempty"`
	TenantId        string   `json:"tenantId,omitempty"`
	Name            string   `json:"name,omitempty"`
	Type            string   `json:"type,omitempty"`
	SuitableProduct []string `json:"suitableProduct,omitempty"`
	ImageUrl        string   `json:"imageUrl,omitempty"`
	ProductPage     string   `json:"productPage,omitempty"`
	Count           int64    `json:"count,string,omitempty"`
	BrandCode       string   `json:"brandCode,omitempty"`
	BrandName       string   `json:"brandName,omitempty"`
	FragranceCode   string   `json:"fragranceCode,omitempty"`
	FragranceName   string   `json:"fragranceName,omitempty"`
	ProductAddress  string   `json:"productAddress,omitempty"`
	Variety         string   `json:"variety,omitempty"`
	Ingredient      string   `json:"ingredient,omitempty"`
	Effect          string   `json:"effect,omitempty"`
	Description     string   `json:"description,omitempty"`
	CreatedBy       int64    `json:"createdBy,string,omitempty"`
	CreatedAt       int64    `json:"createdAt,omitempty"`
	UpdatedBy       int64    `json:"updatedBy,string,omitempty"`
	UpdatedAt       int64    `json:"updatedAt,omitempty"`
}

// 实体转pb对象
func OpmProductMaterials_e2pb(src *OpmProductMaterialsEntitys) *proto.OpmProductMaterials {
	if src == nil {
		return nil
	}
	pbObj := proto.OpmProductMaterials{
		Id:             src.Id,
		TenantId:       src.TenantId,
		Name:           src.Name,
		Type:           src.Type,
		ImageUrl:       src.ImageUrl,
		ProductPage:    src.ProductPage,
		Count:          src.Count,
		BrandCode:      src.BrandCode,
		BrandName:      src.BrandName,
		FragranceCode:  src.FragranceCode,
		FragranceName:  src.FragranceName,
		ProductAddress: src.ProductAddress,
		Variety:        src.Variety,
		Ingredient:     src.Ingredient,
		Effect:         src.Effect,
		Description:    src.Description,
		CreatedBy:      src.CreatedBy,
		UpdatedBy:      src.UpdatedBy,
	}
	return &pbObj
}

// pb对象转实体
func OpmProductMaterials_pb2e(src *proto.OpmProductMaterials) *OpmProductMaterialsEntitys {
	if src == nil {
		return nil
	}
	entitysObj := OpmProductMaterialsEntitys{
		Id:             src.Id,
		TenantId:       src.TenantId,
		Name:           src.Name,
		Type:           src.Type,
		ImageUrl:       src.ImageUrl,
		ProductPage:    src.ProductPage,
		Count:          src.Count,
		BrandCode:      src.BrandCode,
		BrandName:      src.BrandName,
		FragranceCode:  src.FragranceCode,
		FragranceName:  src.FragranceName,
		ProductAddress: src.ProductAddress,
		Variety:        src.Variety,
		Ingredient:     src.Ingredient,
		Effect:         src.Effect,
		Description:    src.Description,
		CreatedBy:      src.CreatedBy,
		CreatedAt:      src.CreatedAt.AsTime().Unix(),
		UpdatedBy:      src.UpdatedBy,
		UpdatedAt:      src.UpdatedAt.AsTime().Unix(),
	}
	return &entitysObj
}
