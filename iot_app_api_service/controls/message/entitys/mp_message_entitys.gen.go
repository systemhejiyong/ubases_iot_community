// Code generated by sgen.exe,2022-05-22 07:25:56. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// 增、删、改及查询返回
type MpMessageEntitys struct {
	Id          int64     `json:"id,omitempty"`
	PushType    int32     `json:"pushType,omitempty"`
	MessageType int32     `json:"messageType,omitempty"`
	PushTo      string    `json:"pushTo,omitempty"`
	PushMode    int32     `json:"pushMode,omitempty"`
	PushStatus  int32     `json:"pushStatus,omitempty"`
	AgentType   int32     `json:"agentType,omitempty"`
	PushTime    time.Time `json:"pushTime,omitempty"`
	ExpireHour  int32     `json:"expireHour,omitempty"`
	ActionType  int32     `json:"actionType,omitempty"`
	TplCode     string    `json:"tplCode,omitempty"`
	PushParams  string    `json:"pushParams,omitempty"`
	TargetIds   string    `json:"targetIds,omitempty"`
	Did         string    `json:"did,omitempty"`
	ProductKey  string    `json:"productKey,omitempty"`
	Content     string    `json:"content,omitempty"`
	CreatedBy   int64     `json:"createdBy,omitempty"`
	CreatedAt   time.Time `json:"createdAt,omitempty"`
}

// 新增参数非空检查
func (s *MpMessageEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *MpMessageEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*MpMessageQuery) QueryCheck() error {
	return nil
}

// 查询条件
type MpMessageQuery struct {
	Page      uint64           `json:"page,omitempty"`
	Limit     uint64           `json:"limit,omitempty"`
	Sort      string           `json:"sort,omitempty"`
	SortField string           `json:"sortField,omitempty"`
	SearchKey string           `json:"searchKey,omitempty"`
	Query     *MpMessageFilter `json:"query,omitempty"`
}

// MpMessageFilter，查询条件，字段请根据需要自行增减
type MpMessageFilter struct {
	Id          int64     `json:"id,omitempty"`
	PushType    int32     `json:"pushType,omitempty"`
	MessageType int32     `json:"messageType,omitempty"`
	PushTo      string    `json:"pushTo,omitempty"`
	PushMode    int32     `json:"pushMode,omitempty"`
	PushStatus  int32     `json:"pushStatus,omitempty"`
	AgentType   int32     `json:"agentType,omitempty"`
	PushTime    time.Time `json:"pushTime,omitempty"`
	ExpireHour  int32     `json:"expireHour,omitempty"`
	ActionType  int32     `json:"actionType,omitempty"`
	TplCode     string    `json:"tplCode,omitempty"`
	PushParams  string    `json:"pushParams,omitempty"`
	TargetIds   string    `json:"targetIds,omitempty"`
	Did         string    `json:"did,omitempty"`
	ProductKey  string    `json:"productKey,omitempty"`
	Content     string    `json:"content,omitempty"`
	CreatedBy   int64     `json:"createdBy,omitempty"`
	CreatedAt   time.Time `json:"createdAt,omitempty"`
}

// 实体转pb对象
func MpMessage_e2pb(src *MpMessageEntitys) *proto.MpMessage {
	if src == nil {
		return nil
	}
	pbObj := proto.MpMessage{
		Id:          src.Id,
		PushType:    src.PushType,
		MessageType: src.MessageType,
		PushTo:      src.PushTo,
		PushMode:    src.PushMode,
		PushStatus:  src.PushStatus,
		AgentType:   src.AgentType,
		PushTime:    timestamppb.New(src.PushTime),
		ExpireHour:  src.ExpireHour,
		ActionType:  src.ActionType,
		TplCode:     src.TplCode,
		PushParams:  src.PushParams,
		TargetIds:   src.TargetIds,
		Did:         src.Did,
		ProductKey:  src.ProductKey,
		Content:     src.Content,
		CreatedBy:   src.CreatedBy,
		CreatedAt:   timestamppb.New(src.CreatedAt),
	}
	return &pbObj
}

// pb对象转实体
func MpMessage_pb2e(src *proto.MpMessage) *MpMessageEntitys {
	if src == nil {
		return nil
	}
	entitysObj := MpMessageEntitys{
		Id:          src.Id,
		PushType:    src.PushType,
		MessageType: src.MessageType,
		PushTo:      src.PushTo,
		PushMode:    src.PushMode,
		PushStatus:  src.PushStatus,
		AgentType:   src.AgentType,
		PushTime:    src.PushTime.AsTime(),
		ExpireHour:  src.ExpireHour,
		ActionType:  src.ActionType,
		TplCode:     src.TplCode,
		PushParams:  src.PushParams,
		TargetIds:   src.TargetIds,
		Did:         src.Did,
		ProductKey:  src.ProductKey,
		Content:     src.Content,
		CreatedBy:   src.CreatedBy,
		CreatedAt:   src.CreatedAt.AsTime(),
	}
	return &entitysObj
}
