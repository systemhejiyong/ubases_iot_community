// Code generated by sgen.exe,2022-05-22 07:25:57. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type MpMessageUserOutEntitys struct {
	Id                   int64  `json:"id,string,omitempty"`
	Lang                 string `json:"lang,omitempty"`
	MessageType          int32  `json:"messageType,omitempty"`
	ActionType           int32  `json:"actionType,omitempty"`
	PushMode             int32  `json:"pushMode,omitempty"`
	TplCode              string `json:"tplCode,omitempty"`
	MessageId            int64  `json:"messageId,string,omitempty"`
	Did                  string `json:"did,omitempty"`
	UserId               int64  `json:"userId,string,omitempty"`
	LinkType             int32  `json:"linkType,omitempty"`
	LinkFunctionCode     string `json:"linkFunctionCode,omitempty"`
	LinkUrl              string `json:"linkUrl,omitempty"`
	Dynamic              string `json:"dynamic,omitempty"`
	PushTitle            string `json:"pushTitle,omitempty"`
	PushContent          string `json:"pushContent,omitempty"`
	ExternalId           string `json:"externalId,omitempty"`
	ExternalStatus       int32  `json:"externalStatus,omitempty"`
	ExternalErrorMessage string `json:"externalErrorMessage,omitempty"`
	CreatedBy            int64  `json:"createdBy,omitempty"`
	UpdatedBy            int64  `json:"updatedBy,omitempty"`
}

// 新增参数非空检查
func (s *MpMessageUserOutEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *MpMessageUserOutEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*MpMessageUserOutQuery) QueryCheck() error {
	return nil
}

// 查询条件
type MpMessageUserOutQuery struct {
	Page      int64                   `json:"page,omitempty"`
	Limit     int64                   `json:"limit,omitempty"`
	Sort      string                  `json:"sort,omitempty"`
	SortField string                  `json:"sortField,omitempty"`
	SearchKey string                  `json:"searchKey,omitempty"`
	Query     *MpMessageUserOutFilter `json:"query,omitempty"`
}

// MpMessageUserOutFilter，查询条件，字段请根据需要自行增减
type MpMessageUserOutFilter struct {
	Id                   int64  `json:"id,string,omitempty"`
	Lang                 string `json:"lang,omitempty"`
	MessageType          int32  `json:"messageType,omitempty"`
	ActionType           int32  `json:"actionType,omitempty"`
	PushMode             int32  `json:"pushMode,omitempty"`
	TplCode              string `json:"tplCode,omitempty"`
	MessageId            int64  `json:"messageId,string,omitempty"`
	Did                  string `json:"did,omitempty"`
	UserId               int64  `json:"userId,string,omitempty"`
	LinkType             int32  `json:"linkType,omitempty"`
	LinkFunctionCode     string `json:"linkFunctionCode,omitempty"`
	LinkUrl              string `json:"linkUrl,omitempty"`
	Dynamic              string `json:"dynamic,omitempty"`
	PushTitle            string `json:"pushTitle,omitempty"`
	PushContent          string `json:"pushContent,omitempty"`
	ExternalId           string `json:"externalId,omitempty"`
	ExternalStatus       int32  `json:"externalStatus,omitempty"`
	ExternalErrorMessage string `json:"externalErrorMessage,omitempty"`
	CreatedBy            int64  `json:"createdBy,omitempty"`
	UpdatedBy            int64  `json:"updatedBy,omitempty"`
}

// 实体转pb对象
func MpMessageUserOut_e2pb(src *MpMessageUserOutEntitys) *proto.MpMessageUserOut {
	if src == nil {
		return nil
	}
	pbObj := proto.MpMessageUserOut{
		Id:                   src.Id,
		Lang:                 src.Lang,
		MessageType:          src.MessageType,
		ActionType:           src.ActionType,
		PushMode:             src.PushMode,
		TplCode:              src.TplCode,
		MessageId:            src.MessageId,
		Did:                  src.Did,
		UserId:               src.UserId,
		LinkType:             src.LinkType,
		LinkFunctionCode:     src.LinkFunctionCode,
		LinkUrl:              src.LinkUrl,
		Dynamic:              src.Dynamic,
		PushTitle:            src.PushTitle,
		PushContent:          src.PushContent,
		ExternalId:           src.ExternalId,
		ExternalStatus:       src.ExternalStatus,
		ExternalErrorMessage: src.ExternalErrorMessage,
		CreatedBy:            src.CreatedBy,
		UpdatedBy:            src.UpdatedBy,
	}
	return &pbObj
}

// pb对象转实体
func MpMessageUserOut_pb2e(src *proto.MpMessageUserOut) *MpMessageUserOutEntitys {
	if src == nil {
		return nil
	}
	entitysObj := MpMessageUserOutEntitys{
		Id:                   src.Id,
		Lang:                 src.Lang,
		MessageType:          src.MessageType,
		ActionType:           src.ActionType,
		PushMode:             src.PushMode,
		TplCode:              src.TplCode,
		MessageId:            src.MessageId,
		Did:                  src.Did,
		UserId:               src.UserId,
		LinkType:             src.LinkType,
		LinkFunctionCode:     src.LinkFunctionCode,
		LinkUrl:              src.LinkUrl,
		Dynamic:              src.Dynamic,
		PushTitle:            src.PushTitle,
		PushContent:          src.PushContent,
		ExternalId:           src.ExternalId,
		ExternalStatus:       src.ExternalStatus,
		ExternalErrorMessage: src.ExternalErrorMessage,
		CreatedBy:            src.CreatedBy,
		UpdatedBy:            src.UpdatedBy,
	}
	return &entitysObj
}

type MpMessageUserOutGroupItem struct {
	Date string                     `json:"date,omitempty"`
	Data []*MpMessageUserOutEntitys `json:"data,omitempty"`
}
