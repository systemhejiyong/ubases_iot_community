// Code generated by sgen.exe,2022-05-22 07:39:34. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	"cloud_platform/iot_common/iotutil"
	proto "cloud_platform/iot_proto/protos/protosService"
)

// 增、删、改及查询返回
type MpMessageRedDotEntitys struct {
	//Id          int64 `json:"id,omitempty"`
	//UserId      int64 `json:"userId"`
	HomeMsg     bool                     `json:"homeMsg"`
	SystemMsg   bool                     `json:"systemMsg"`
	MessageId   int64                    `json:"messageId,string"` //消息编号
	DeviceMsg   bool                     `json:"deviceMsg"`
	PublicMsg   bool                     `json:"publicMsg"`
	FeedbackMsg bool                     `json:"feedbackMsg"`
	TotalCount  int32                    `json:"totalCount"`
	DeviceList  []*MpMessageRedDotDevice `json:"deviceList"`
}

// 新增参数非空检查
func (s *MpMessageRedDotEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *MpMessageRedDotEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*MpMessageRedDotQuery) QueryCheck() error {
	return nil
}

// 查询条件
type MpMessageRedDotQuery struct {
	Page      uint64                 `json:"page,omitempty"`
	Limit     uint64                 `json:"limit,omitempty"`
	Sort      string                 `json:"sort,omitempty"`
	SortField string                 `json:"sortField,omitempty"`
	SearchKey string                 `json:"searchKey,omitempty"`
	Query     *MpMessageRedDotFilter `json:"query,omitempty"`
}

// MpMessageRedDotFilter，查询条件，字段请根据需要自行增减
type MpMessageRedDotFilter struct {
	Id          int64 `json:"id,omitempty"`
	UserId      int64 `json:"userId,omitempty"`
	HomeMsg     int32 `json:"homeMsg,omitempty"`
	SystemMsg   int32 `json:"systemMsg,omitempty"`
	DeviceMsg   int32 `json:"deviceMsg,omitempty"`
	PublicMsg   int64 `json:"publicMsg,omitempty"`
	FeedbackMsg int32 `json:"feedbackMsg,omitempty"`
}

// pb对象转实体
func MpMessageRedDot_pb2e(src *proto.MpMessageRedDot, devIdList []string) *MpMessageRedDotEntitys {
	if src == nil {
		return nil
	}
	obj := MpMessageRedDotEntitys{
		//Id:          src.Id,
		//UserId:      src.UserId,
		HomeMsg:   src.HomeMsg > 0,
		SystemMsg: src.SystemMsg > 0,
		//DeviceMsg:   src.DeviceMsg > 0,
		PublicMsg:   src.PublicMsg > 0,
		FeedbackMsg: src.FeedbackMsg > 0,
		MessageId:   src.SystemMsgId,
		TotalCount:  0,
	}

	deviceMessageRedDot := false
	//转换设备列表数据
	if src.DeviceList != nil {
		deviceList := []*MpMessageRedDotDevice{}
		for _, device := range src.DeviceList {
			if !iotutil.ArraysExistsString(devIdList, device.Did) {
				continue
			}
			deviceList = append(deviceList, &MpMessageRedDotDevice{
				Did:       device.Did,
				IsNew:     device.IsNew,
				Content:   device.Content,
				Title:     device.Title,
				CreatedAt: device.CreatedAt,
			})
			if device.IsNew {
				deviceMessageRedDot = true
			}
		}
		obj.DeviceList = deviceList
	}
	obj.DeviceMsg = deviceMessageRedDot
	//消息总数处理
	if obj.HomeMsg || obj.SystemMsg || obj.PublicMsg || obj.DeviceMsg {
		obj.TotalCount = src.HomeMsgNum + src.SystemMsgNum + src.PublicMsgNum + src.DeviceMsgNum
		//如果没有统计到总数不需要显示红点
		if obj.TotalCount == 0 {
			src.HomeMsg = 0
			src.SystemMsg = 0
			src.PublicMsg = 0
			src.DeviceMsg = 0
		}
		//兼容处理，如果总消息数量未0，则不需要显示消息红点
		//if obj.TotalCount == 0 {
		//	obj.HomeMsg = false
		//	obj.SystemMsg = false
		//	obj.PublicMsg = false
		//	obj.FeedbackMsg = false
		//}
	}
	return &obj
}

type MpMessageRedDotDevice struct {
	Did       string `json:"did"`
	IsNew     bool   `json:"isNew"`
	Content   string `json:"content,omitempty"`
	CreatedAt int64  `json:"createdAt,omitempty"`
	Title     string `json:"title,omitempty"`
}

type MpMessageRedDotOld struct {
	//HomeId    int64  `json:"homeid"`
	//UserId    int64  `json:"userId"`
	IsRead    bool   `json:"isread"`
	Type      string `json:"homeMsg"`
	ObjectId  string `json:"systemMsg"`
	CreatedAt string `json:"createdAt"`
}

func (s *MpMessageRedDotOld) Set(msgType string, objectId string, createdAt string, isRead bool) *MpMessageRedDotOld {
	s.Type = msgType
	s.IsRead = isRead
	s.ObjectId = objectId
	s.CreatedAt = createdAt
	return s
}
