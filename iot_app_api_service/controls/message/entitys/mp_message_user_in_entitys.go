// Code generated by sgen.exe,2022-05-22 07:25:57. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"time"
)

// 增、删、改及查询返回
type MpMessageUserInEntitys struct {
	Id          int64  `json:"id,string"`
	Lang        string `json:"lang,omitempty"`
	MessageType int32  `json:"messageType"`
	ChildType   string `json:"childType"`
	ActionType  int32  `json:"actionType"`
	PushMode    int32  `json:"pushMode"`
	TplCode     string `json:"tplCode"`
	MessageId   int64  `json:"messageId,string"`
	IsPublic    int32  `json:"isPublic"`
	Did         string `json:"did"`
	ProductKey  string `json:"productKey"`
	UserId      int64  `json:"userId,string"`
	HomeId      int64  `json:"homeId,string"`
	MsgTag      string `json:"msgTag"`
	IconUrl     string `json:"iconUrl"`
	PushTitle   string `json:"pushTitle"`
	PushContent string `json:"pushContent"`
	ReadFlag    int32  `json:"readFlag"`
	UnSetExpire int32  `json:"unSetExpire"`
	CreatedBy   int64  `json:"createdBy"`
	CreatedAt   int64  `json:"createdAt"`
	SourceTable string `json:"sourceTable"`
	SourceRowId string `json:"sourceRowId"`
	Url         string `json:"url"`
}

// 新增参数非空检查
func (s *MpMessageUserInEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *MpMessageUserInEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*MpMessageUserInQuery) QueryCheck() error {
	return nil
}

// 查询条件
type MpMessageUserInQuery struct {
	Page      uint64                 `json:"page,omitempty"`
	Limit     uint64                 `json:"limit,omitempty"`
	Sort      string                 `json:"sort,omitempty"`
	SortField string                 `json:"sortField,omitempty"`
	SearchKey string                 `json:"searchKey,omitempty"`
	Query     *MpMessageUserInFilter `json:"query,omitempty"`
}

// MpMessageUserInFilter，查询条件，字段请根据需要自行增减
type MpMessageUserInFilter struct {
	Id          int64     `json:"id,string,omitempty"`
	Lang        string    `json:"lang,omitempty"`
	MessageType int32     `json:"messageType,omitempty"`
	ChildType   string    `json:"childType,omitempty"`
	ActionType  int32     `json:"actionType,omitempty"`
	PushMode    int32     `json:"pushMode,omitempty"`
	TplCode     string    `json:"tplCode,omitempty"`
	MessageId   int64     `json:"messageId,string,omitempty"`
	IsPublic    int32     `json:"isPublic,omitempty"`
	Did         string    `json:"did,omitempty"`
	ProductKey  string    `json:"productKey,omitempty"`
	UserId      int64     `json:"userId,string,omitempty"`
	HomeId      int64     `json:"homeId,string,omitempty"`
	MsgTag      string    `json:"msgTag,omitempty"`
	IconUrl     string    `json:"iconUrl,omitempty"`
	PushTitle   string    `json:"pushTitle,omitempty"`
	PushContent string    `json:"pushContent,omitempty"`
	ReadFlag    int32     `json:"readFlag,omitempty"`
	UnSetExpire int32     `json:"unSetExpire,omitempty"`
	CreatedBy   int64     `json:"createdBy,omitempty"`
	CreatedAt   time.Time `json:"createdAt,omitempty"`
	SourceTable string    `json:"sourceTable,omitempty"`
	SourceRowId int64     `json:"sourceRowId,omitempty"`
	Url         string    `json:"url,omitempty"`
}

// 实体转pb对象
func MpMessageUserIn_e2pb(src *MpMessageUserInEntitys) *proto.MpMessageUserIn {
	if src == nil {
		return nil
	}
	pbObj := proto.MpMessageUserIn{
		Id:          src.Id,
		Lang:        src.Lang,
		MessageType: src.MessageType,
		ChildType:   src.ChildType,
		ActionType:  src.ActionType,
		PushMode:    src.PushMode,
		TplCode:     src.TplCode,
		MessageId:   src.MessageId,
		IsPublic:    src.IsPublic,
		Did:         src.Did,
		ProductKey:  src.ProductKey,
		UserId:      src.UserId,
		HomeId:      src.HomeId,
		MsgTag:      src.MsgTag,
		IconUrl:     src.IconUrl,
		PushTitle:   src.PushTitle,
		PushContent: src.PushContent,
		ReadFlag:    src.ReadFlag,
		UnSetExpire: src.UnSetExpire,
		SourceTable: src.SourceTable,
		SourceRowId: src.SourceRowId,
		Url:         src.Url,
	}
	return &pbObj
}

// pb对象转实体
func MpMessageUserIn_pb2e(src *proto.MpMessageUserIn) *MpMessageUserInEntitys {
	if src == nil {
		return nil
	}
	entitysObj := MpMessageUserInEntitys{
		Id:          src.Id,
		Lang:        src.Lang,
		MessageType: src.MessageType,
		ChildType:   src.ChildType,
		ActionType:  src.ActionType,
		PushMode:    src.PushMode,
		TplCode:     src.TplCode,
		MessageId:   src.MessageId,
		IsPublic:    src.IsPublic,
		Did:         src.Did,
		ProductKey:  src.ProductKey,
		UserId:      src.UserId,
		HomeId:      src.HomeId,
		MsgTag:      src.MsgTag,
		IconUrl:     src.IconUrl,
		PushTitle:   src.PushTitle,
		PushContent: src.PushContent,
		ReadFlag:    src.ReadFlag,
		UnSetExpire: src.UnSetExpire,
		CreatedBy:   src.CreatedBy,
		CreatedAt:   src.CreatedAt.AsTime().Unix(),
		SourceTable: src.SourceTable,
		SourceRowId: src.SourceRowId,
		Url:         src.Url,
	}
	return &entitysObj
}

type MpMessageUserInGroupItem struct {
	Date string                    `json:"date,omitempty"`
	Data []*MpMessageUserInEntitys `json:"data,omitempty"`
}
