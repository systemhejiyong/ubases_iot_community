// Code generated by sgen.exe,2022-05-04 16:39:29. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"google.golang.org/protobuf/types/known/timestamppb"
	"time"
)

// 增、删、改及查询返回
type UcHomeUserEntitys struct {
	Id        int64     `json:"id,omitempty"`
	HomeId    int64     `json:"homeId,omitempty"`
	UserId    int64     `json:"userId,omitempty"`
	RoleType  int32     `json:"roleType,omitempty"`
	BindTime  time.Time `json:"bindTime,omitempty"`
	Shared    int32     `json:"shared,omitempty"`
	CreatedBy int64     `json:"createdBy,omitempty"`
	UpdatedBy int64     `json:"updatedBy,omitempty"`
	CreatedAt time.Time `json:"createdAt,omitempty"`
	UpdatedAt time.Time `json:"updatedAt,omitempty"`
	DeletedAt time.Time `json:"deletedAt,omitempty"`
}

// 查询条件
type UcHomeUserQuery struct {
	Page      uint64            `json:"page,omitempty"`
	Limit     uint64            `json:"limit,omitempty"`
	Sort      string            `json:"sort,omitempty"`
	SortField string            `json:"sortField,omitempty"`
	SearchKey string            `json:"searchKey,omitempty"`
	Query     *UcHomeUserFilter `json:"query,omitempty"`
}

// UcHomeUserFilter，查询条件，字段请根据需要自行增减
type UcHomeUserFilter struct {
	Id        int64     `json:"id,omitempty"`
	HomeId    int64     `json:"homeId,omitempty"`
	UserId    int64     `json:"userId,omitempty"`
	RoleType  int32     `json:"roleType,omitempty"`
	BindTime  time.Time `json:"bindTime,omitempty"`
	Shared    int32     `json:"shared,omitempty"`
	CreatedBy int64     `json:"createdBy,omitempty"`
	UpdatedBy int64     `json:"updatedBy,omitempty"`
	CreatedAt time.Time `json:"createdAt,omitempty"`
	UpdatedAt time.Time `json:"updatedAt,omitempty"`
	DeletedAt time.Time `json:"deletedAt,omitempty"`
}

// 实体转pb对象
func UcHomeUser_e2pb(src *UcHomeUserEntitys) *proto.UcHomeUser {
	if src == nil {
		return nil
	}
	pbObj := proto.UcHomeUser{
		Id:        src.Id,
		HomeId:    src.HomeId,
		UserId:    src.UserId,
		RoleType:  src.RoleType,
		BindTime:  timestamppb.New(src.BindTime),
		Shared:    src.Shared,
		CreatedBy: src.CreatedBy,
		UpdatedBy: src.UpdatedBy,
		CreatedAt: timestamppb.New(src.CreatedAt),
		UpdatedAt: timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

// pb对象转实体
func UcHomeUser_pb2e(src *proto.UcHomeUser) *UcHomeUserEntitys {
	if src == nil {
		return nil
	}
	entitysObj := UcHomeUserEntitys{
		Id:        src.Id,
		HomeId:    src.HomeId,
		UserId:    src.UserId,
		RoleType:  src.RoleType,
		BindTime:  src.BindTime.AsTime(),
		Shared:    src.Shared,
		CreatedBy: src.CreatedBy,
		UpdatedBy: src.UpdatedBy,
		CreatedAt: src.CreatedAt.AsTime(),
		UpdatedAt: src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
