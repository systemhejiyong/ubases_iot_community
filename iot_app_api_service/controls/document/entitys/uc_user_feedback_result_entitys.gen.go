// Code generated by sgen.exe,2022-05-18 23:26:55. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"google.golang.org/protobuf/types/known/timestamppb"
	"time"
)

// 增、删、改及查询返回
type UcUserFeedbackResultEntitys struct {
	Id            int64     `json:"id,omitempty"`
	FeedbackId    int64     `json:"feedbackId,omitempty"`
	HandleStatus  int32     `json:"handleStatus,omitempty"`
	HandleResult  string    `json:"handleResult,omitempty"`
	NotifyFlag    int32     `json:"notifyFlag,omitempty"`
	NotifyContent string    `json:"notifyContent,omitempty"`
	CreatedBy     int64     `json:"createdBy,omitempty"`
	UpdatedBy     int64     `json:"updatedBy,omitempty"`
	CreatedAt     time.Time `json:"createdAt,omitempty"`
	UpdatedAt     time.Time `json:"updatedAt,omitempty"`
	DeletedAt     time.Time `json:"deletedAt,omitempty"`
}

// 新增参数非空检查
func (s *UcUserFeedbackResultEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *UcUserFeedbackResultEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*UcUserFeedbackResultQuery) QueryCheck() error {
	return nil
}

// 查询条件
type UcUserFeedbackResultQuery struct {
	Page      uint64                      `json:"page,omitempty"`
	Limit     uint64                      `json:"limit,omitempty"`
	Sort      string                      `json:"sort,omitempty"`
	SortField string                      `json:"sortField,omitempty"`
	SearchKey string                      `json:"searchKey,omitempty"`
	Query     *UcUserFeedbackResultFilter `json:"query,omitempty"`
}

// UcUserFeedbackResultFilter，查询条件，字段请根据需要自行增减
type UcUserFeedbackResultFilter struct {
	Id            int64     `json:"id,omitempty"`
	FeedbackId    int64     `json:"feedbackId,omitempty"`
	HandleStatus  int32     `json:"handleStatus,omitempty"`
	HandleResult  string    `json:"handleResult,omitempty"`
	NotifyFlag    int32     `json:"notifyFlag,omitempty"`
	NotifyContent string    `json:"notifyContent,omitempty"`
	CreatedBy     int64     `json:"createdBy,omitempty"`
	UpdatedBy     int64     `json:"updatedBy,omitempty"`
	CreatedAt     time.Time `json:"createdAt,omitempty"`
	UpdatedAt     time.Time `json:"updatedAt,omitempty"`
	DeletedAt     time.Time `json:"deletedAt,omitempty"`
}

// 实体转pb对象
func UcUserFeedbackResult_e2pb(src *UcUserFeedbackResultEntitys) *proto.UcUserFeedbackResult {
	if src == nil {
		return nil
	}
	pbObj := proto.UcUserFeedbackResult{
		Id:            src.Id,
		FeedbackId:    src.FeedbackId,
		HandleStatus:  src.HandleStatus,
		HandleResult:  src.HandleResult,
		NotifyFlag:    src.NotifyFlag,
		NotifyContent: src.NotifyContent,
		CreatedBy:     src.CreatedBy,
		UpdatedBy:     src.UpdatedBy,
		CreatedAt:     timestamppb.New(src.CreatedAt),
		UpdatedAt:     timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

// pb对象转实体
func UcUserFeedbackResult_pb2e(src *proto.UcUserFeedbackResult) *UcUserFeedbackResultEntitys {
	if src == nil {
		return nil
	}
	entitysObj := UcUserFeedbackResultEntitys{
		Id:            src.Id,
		FeedbackId:    src.FeedbackId,
		HandleStatus:  src.HandleStatus,
		HandleResult:  src.HandleResult,
		NotifyFlag:    src.NotifyFlag,
		NotifyContent: src.NotifyContent,
		CreatedBy:     src.CreatedBy,
		UpdatedBy:     src.UpdatedBy,
		CreatedAt:     src.CreatedAt.AsTime(),
		UpdatedAt:     src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
