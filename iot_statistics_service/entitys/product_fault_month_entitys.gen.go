// Code generated by sgen.exe,2022-08-03 19:34:57. DO NOT EDIT.
// versions: v1.0.0
//  API结构体封装，请自行根据需要删减字段修改

package entitys

import (
	proto "cloud_platform/iot_proto/protos/protosService"
	"google.golang.org/protobuf/types/known/timestamppb"
	"time"
)

// 增、删、改及查询返回
type ProductFaultMonthEntitys struct {
	Id         int64     `json:"id,omitempty"`
	ProductKey string    `json:"productKey,omitempty"`
	Month      time.Time `json:"month,omitempty"`
	Total      int64     `json:"total,omitempty"`
	UpdatedAt  time.Time `json:"updatedAt,omitempty"`
}

// 新增参数非空检查
func (s *ProductFaultMonthEntitys) AddCheck() error {
	return nil
}

// 修改参数非空检查
func (s *ProductFaultMonthEntitys) UpdateCheck() error {
	return nil
}

// 查询参数必填检查
func (*ProductFaultMonthQuery) QueryCheck() error {
	return nil
}

// 查询条件
type ProductFaultMonthQuery struct {
	Page      uint64                   `json:"page,omitempty"`
	Limit     uint64                   `json:"limit,omitempty"`
	Sort      string                   `json:"sort,omitempty"`
	SortField string                   `json:"sortField,omitempty"`
	SearchKey string                   `json:"searchKey,omitempty"`
	Query     *ProductFaultMonthFilter `json:"query,omitempty"`
}

// ProductFaultMonthFilter，查询条件，字段请根据需要自行增减
type ProductFaultMonthFilter struct {
	Id         int64     `json:"id,omitempty"`
	ProductKey string    `json:"productKey,omitempty"`
	Month      time.Time `json:"month,omitempty"`
	Total      int64     `json:"total,omitempty"`
	UpdatedAt  time.Time `json:"updatedAt,omitempty"`
}

// 实体转pb对象
func ProductFaultMonth_e2pb(src *ProductFaultMonthEntitys) *proto.ProductFaultMonth {
	if src == nil {
		return nil
	}
	pbObj := proto.ProductFaultMonth{
		Id:         src.Id,
		ProductKey: src.ProductKey,
		Month:      timestamppb.New(src.Month),
		Total:      src.Total,
		UpdatedAt:  timestamppb.New(src.UpdatedAt),
	}
	return &pbObj
}

// pb对象转实体
func ProductFaultMonth_pb2e(src *proto.ProductFaultMonth) *ProductFaultMonthEntitys {
	if src == nil {
		return nil
	}
	entitysObj := ProductFaultMonthEntitys{
		Id:         src.Id,
		ProductKey: src.ProductKey,
		Month:      src.Month.AsTime(),
		Total:      src.Total,
		UpdatedAt:  src.UpdatedAt.AsTime(),
	}
	return &entitysObj
}
