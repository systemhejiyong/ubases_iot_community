// Code generated by sgen,2023-06-02 13:48:11. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

package service

import (
	"context"
	"errors"

	"go-micro.dev/v4/logger"
	"gorm.io/gen/field"

	iotmodel "cloud_platform/iot_model"
	"cloud_platform/iot_model/db_product/model"
	"cloud_platform/iot_model/db_product/orm"
	"cloud_platform/iot_product_service/convert"
	proto "cloud_platform/iot_proto/protos/protosService"
)

type OpmPanelStudioSvc struct {
	Ctx context.Context
}

// 创建OpmPanelStudio
func (s *OpmPanelStudioSvc) CreateOpmPanelStudio(req *proto.OpmPanelStudio) (*proto.OpmPanelStudio, error) {
	// fixme 请在这里校验参数
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	dbObj := convert.OpmPanelStudio_pb2db(req)
	err := do.Create(dbObj)
	if err != nil {
		logger.Errorf("CreateOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	return req, err
}

// 根据条件删除OpmPanelStudio
func (s *OpmPanelStudioSvc) DeleteOpmPanelStudio(req *proto.OpmPanelStudio) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	// fixme 请检查条件

	if req.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Id))
	}
	if req.PanelId != 0 { //整数
		do = do.Where(t.PanelId.Eq(req.PanelId))
	}
	if req.PageName != "" { //字符串
		do = do.Where(t.PageName.Eq(req.PageName))
	}
	if req.PageIdentify != "" { //字符串
		do = do.Where(t.PageIdentify.Eq(req.PageIdentify))
	}
	if req.JsonContent != "" { //字符串
		do = do.Where(t.JsonContent.Eq(req.JsonContent))
	}
	if req.VueContent != "" { //字符串
		do = do.Where(t.VueContent.Eq(req.VueContent))
	}
	if req.StyleContent != "" { //字符串
		do = do.Where(t.StyleContent.Eq(req.StyleContent))
	}
	if req.IsHome != 0 { //整数
		do = do.Where(t.IsHome.Eq(req.IsHome))
	}
	if req.Sort != 0 { //整数
		do = do.Where(t.Sort.Eq(req.Sort))
	}
	if req.UpdatedBy != 0 { //整数
		do = do.Where(t.UpdatedBy.Eq(req.UpdatedBy))
	}
	_, err := do.Delete()
	if err != nil {
		logger.Errorf("DeleteOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	return req, err
}

// 根据数据库表主键删除OpmPanelStudio
func (s *OpmPanelStudioSvc) DeleteByIdOpmPanelStudio(req *proto.OpmPanelStudio) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	// fixme 请检查条件

	if req.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Id))
	}
	_, err := do.Delete()
	if err != nil {
		logger.Errorf("DeleteByIdOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	return req, err
}

// 根据数据库表主键批量删除OpmPanelStudio
func (s *OpmPanelStudioSvc) DeleteByIdsOpmPanelStudio(req *proto.OpmPanelStudioBatchDeleteRequest) (*proto.OpmPanelStudioBatchDeleteRequest, error) {
	var err error
	for _, k := range req.Keys {
		t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
		do := t.WithContext(context.Background())

		do = do.Where(t.Id.Eq(k.Id))

		_, err = do.Delete()
		if err != nil {
			logger.Errorf("DeleteByIdsOpmPanelStudio error : %s", err.Error())
			break
		}
	}
	return req, err
}

// 根据主键更新OpmPanelStudio
func (s *OpmPanelStudioSvc) UpdateOpmPanelStudio(req *proto.OpmPanelStudio) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	// fixme 请检查条件和校验参数
	//要更新的字段,不包括主键
	var updateField []field.Expr

	if req.PanelId != 0 { //整数
		updateField = append(updateField, t.PanelId)
	}
	if req.PageName != "" { //字符串
		updateField = append(updateField, t.PageName)
	}
	if req.PageIdentify != "" { //字符串
		updateField = append(updateField, t.PageIdentify)
	}
	if req.JsonContent != "" { //字符串
		updateField = append(updateField, t.JsonContent)
	}
	if req.VueContent != "" { //字符串
		updateField = append(updateField, t.VueContent)
	}
	if req.StyleContent != "" { //字符串
		updateField = append(updateField, t.StyleContent)
	}
	if req.IsHome != 0 { //整数
		updateField = append(updateField, t.IsHome)
	}
	if req.Sort != 0 { //整数
		updateField = append(updateField, t.Sort)
	}
	if req.UpdatedBy != 0 { //整数
		updateField = append(updateField, t.UpdatedBy)
	}
	if req.PopupContent != "" {
		updateField = append(updateField, t.PopupContent)
	}
	if len(updateField) > 0 {
		do = do.Select(updateField...)
	}
	//主键条件
	HasPrimaryKey := false

	if req.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Id))
		HasPrimaryKey = true
	}

	if !HasPrimaryKey {
		logger.Error("UpdateOpmPanelStudio error : Missing condition")
		return nil, errors.New("Missing condition")
	}

	dbObj := convert.OpmPanelStudio_pb2db(req)
	_, err := do.Updates(dbObj)
	if err != nil {
		logger.Errorf("UpdateOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	return req, err
}

// //根据主键更新所有字段OpmPanelStudio
func (s *OpmPanelStudioSvc) UpdateAllOpmPanelStudio(req *proto.OpmPanelStudio) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	// fixme 请检查条件和校验参数
	//要更新的字段,不包括主键
	var updateField []field.Expr

	updateField = append(updateField, t.PanelId)
	updateField = append(updateField, t.PageName)
	updateField = append(updateField, t.PageIdentify)
	updateField = append(updateField, t.JsonContent)
	updateField = append(updateField, t.VueContent)
	updateField = append(updateField, t.StyleContent)
	updateField = append(updateField, t.IsHome)
	updateField = append(updateField, t.Sort)
	updateField = append(updateField, t.UpdatedBy)
	updateField = append(updateField, t.PopupContent)
	if len(updateField) > 0 {
		do = do.Select(updateField...)
	}
	//主键条件
	HasPrimaryKey := false
	if req.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Id))
		HasPrimaryKey = true
	}
	if !HasPrimaryKey {
		logger.Error("UpdateAllOpmPanelStudio error : Missing condition")
		return nil, errors.New("Missing condition")
	}
	dbObj := convert.OpmPanelStudio_pb2db(req)
	_, err := do.Updates(dbObj)
	if err != nil {
		logger.Errorf("UpdateAllOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	return req, err
}

func (s *OpmPanelStudioSvc) UpdateFieldsOpmPanelStudio(req *proto.OpmPanelStudioUpdateFieldsRequest) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())

	var updateField []field.Expr
	for _, v := range req.Fields {
		col, ok := t.GetFieldByName(v)
		if ok {
			updateField = append(updateField, col)
		}
	}
	if len(updateField) == 0 {
		err := errors.New("UpdateFieldsOpmPanelStudio error : missing updateField")
		logger.Error(err)
		return nil, err
	}
	do = do.Select(updateField...)

	//主键条件
	HasPrimaryKey := false
	if req.Data.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Data.Id))
		HasPrimaryKey = true
	}
	if !HasPrimaryKey {
		logger.Error("UpdateFieldsOpmPanelStudio error : Missing condition")
		return nil, errors.New("Missing condition")
	}
	dbObj := convert.OpmPanelStudio_pb2db(req.Data)
	_, err := do.Updates(dbObj)
	if err != nil {
		logger.Errorf("UpdateFieldsOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	return req.Data, nil
}

// 根据非空条件查找OpmPanelStudio
func (s *OpmPanelStudioSvc) FindOpmPanelStudio(req *proto.OpmPanelStudioFilter) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	// fixme 请检查条件和校验参数

	if req.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Id))
	}
	if req.PanelId != 0 { //整数
		do = do.Where(t.PanelId.Eq(req.PanelId))
	}
	if req.PageName != "" { //字符串
		do = do.Where(t.PageName.Eq(req.PageName))
	}
	if req.PageIdentify != "" { //字符串
		do = do.Where(t.PageIdentify.Eq(req.PageIdentify))
	}
	if req.JsonContent != "" { //字符串
		do = do.Where(t.JsonContent.Eq(req.JsonContent))
	}
	if req.VueContent != "" { //字符串
		do = do.Where(t.VueContent.Eq(req.VueContent))
	}
	if req.StyleContent != "" { //字符串
		do = do.Where(t.StyleContent.Eq(req.StyleContent))
	}
	if req.IsHome != 0 { //整数
		do = do.Where(t.IsHome.Eq(req.IsHome))
	}
	if req.Sort != 0 { //整数
		do = do.Where(t.Sort.Eq(req.Sort))
	}
	if req.UpdatedBy != 0 { //整数
		do = do.Where(t.UpdatedBy.Eq(req.UpdatedBy))
	}
	dbObj, err := do.First()
	if err != nil {
		logger.Errorf("FindOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	res := convert.OpmPanelStudio_db2pb(dbObj)
	return res, err
}

// 根据数据库表主键查找OpmPanelStudio
func (s *OpmPanelStudioSvc) FindByIdOpmPanelStudio(req *proto.OpmPanelStudioFilter) (*proto.OpmPanelStudio, error) {
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	// fixme 请检查条件和校验参数

	if req.Id != 0 { //整数
		do = do.Where(t.Id.Eq(req.Id))
	}
	dbObj, err := do.First()
	if err != nil {
		logger.Errorf("FindByIdOpmPanelStudio error : %s", err.Error())
		return nil, err
	}
	res := convert.OpmPanelStudio_db2pb(dbObj)
	return res, err
}

// 根据分页条件查找OpmPanelStudio,请确保req.Query的结构字段与数据表model结构体字段保持一致，否则会有编译问题
func (s *OpmPanelStudioSvc) GetListOpmPanelStudio(req *proto.OpmPanelStudioListRequest) ([]*proto.OpmPanelStudio, int64, error) {
	// fixme 请检查条件和校验参数
	var err error
	t := orm.Use(iotmodel.GetDB()).TOpmPanelStudio
	do := t.WithContext(context.Background())
	query := req.Query
	if query != nil {

		if query.Id != 0 { //整数
			do = do.Where(t.Id.Eq(query.Id))
		}
		if query.PanelId != 0 { //整数
			do = do.Where(t.PanelId.Eq(query.PanelId))
		}
		if query.PageName != "" { //字符串
			do = do.Where(t.PageName.Like("%" + query.PageName + "%"))
		}
		if query.PageIdentify != "" { //字符串
			do = do.Where(t.PageIdentify.Like("%" + query.PageIdentify + "%"))
		}
		if query.JsonContent != "" { //字符串
			do = do.Where(t.JsonContent.Like("%" + query.JsonContent + "%"))
		}
		if query.VueContent != "" { //字符串
			do = do.Where(t.VueContent.Like("%" + query.VueContent + "%"))
		}
		if query.StyleContent != "" { //字符串
			do = do.Where(t.StyleContent.Like("%" + query.StyleContent + "%"))
		}
		if query.IsHome != 0 { //整数
			do = do.Where(t.IsHome.Eq(query.IsHome))
		}
		if query.Sort != 0 { //整数
			do = do.Where(t.Sort.Eq(query.Sort))
		}
		if query.UpdatedBy != 0 { //整数
			do = do.Where(t.UpdatedBy.Eq(query.UpdatedBy))
		}
	}
	orderCol, ok := t.GetFieldByName(req.OrderKey)
	if !ok {
		orderCol = t.Id
	}
	if req.OrderDesc != "" {
		do = do.Order(orderCol.Desc())
	} else {
		do = do.Order(orderCol)
	}

	var list []*model.TOpmPanelStudio
	var total int64
	if req.PageSize > 0 {
		limit := req.PageSize
		if req.Page == 0 {
			req.Page = 1
		}
		offset := req.PageSize * (req.Page - 1)
		list, total, err = do.FindByPage(int(offset), int(limit))
	} else {
		list, err = do.Find()
		total = int64(len(list))
	}
	if err != nil {
		logger.Errorf("GetListOpmPanelStudio error : %s", err.Error())
		return nil, 0, err
	}
	if len(list) == 0 {
		return nil, total, nil
	}
	result := make([]*proto.OpmPanelStudio, len(list))
	for i, v := range list {
		result[i] = convert.OpmPanelStudio_db2pb(v)
	}
	return result, total, nil
}
