// Code generated by sgen,2023-05-30 11:01:33. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

package handler

/*
import (
	"context"

	"cloud_platform/iot_product_service/service"
	proto "cloud_platform/iot_proto/protos/protosService"
)

type OpmVoiceProductMapGoogleHandler struct{}

//创建
func (h *OpmVoiceProductMapGoogleHandler) Create(ctx context.Context, req *proto.OpmVoiceProductMapGoogle, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.CreateOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//匹配多条件删除
func (h *OpmVoiceProductMapGoogleHandler) Delete(ctx context.Context, req *proto.OpmVoiceProductMapGoogle, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.DeleteOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//匹配ID删除
func (h *OpmVoiceProductMapGoogleHandler) DeleteById(ctx context.Context, req *proto.OpmVoiceProductMapGoogle, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.DeleteByIdOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//根据主键批量删除
func (h *OpmVoiceProductMapGoogleHandler) DeleteByIds(ctx context.Context, req *proto.OpmVoiceProductMapGoogleBatchDeleteRequest, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.DeleteByIdsOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//更新
func (h *OpmVoiceProductMapGoogleHandler) Update(ctx context.Context, req *proto.OpmVoiceProductMapGoogle, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.UpdateOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//根据主键更新所有字段
func (h *OpmVoiceProductMapGoogleHandler) UpdateAll(ctx context.Context, req *proto.OpmVoiceProductMapGoogle, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.UpdateAllOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//根据主键更新指定列
func (h *OpmVoiceProductMapGoogleHandler) UpdateFields(ctx context.Context, req *proto.OpmVoiceProductMapGoogleUpdateFieldsRequest, resp *proto.Response) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	_, err := s.UpdateFieldsOpmVoiceProductMapGoogle(req)
	SetResponse(resp, err)
	return nil
}

//多条件查找，返回单条数据
func (h *OpmVoiceProductMapGoogleHandler) Find(ctx context.Context, req *proto.OpmVoiceProductMapGoogleFilter, resp *proto.OpmVoiceProductMapGoogleResponse) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	data, err := s.FindOpmVoiceProductMapGoogle(req)
	h.SetResponse(resp, data, err)
	return nil
}

//根据ID查找，返回单条数据
func (h *OpmVoiceProductMapGoogleHandler) FindById(ctx context.Context, req *proto.OpmVoiceProductMapGoogleFilter, resp *proto.OpmVoiceProductMapGoogleResponse) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	data, err := s.FindByIdOpmVoiceProductMapGoogle(req)
	h.SetResponse(resp, data, err)
	return nil
}

//查找，支持分页，可返回多条数据
func (h *OpmVoiceProductMapGoogleHandler) Lists(ctx context.Context, req *proto.OpmVoiceProductMapGoogleListRequest, resp *proto.OpmVoiceProductMapGoogleResponse) error {
	s := service.OpmVoiceProductMapGoogleSvc{Ctx: ctx}
	data, total, err := s.GetListOpmVoiceProductMapGoogle(req)
	h.SetPageResponse(resp, data, total, err)
	return nil
}

func (h *OpmVoiceProductMapGoogleHandler) SetResponse(resp *proto.OpmVoiceProductMapGoogleResponse, data *proto.OpmVoiceProductMapGoogle, err error) {
	if err != nil {
		resp.Code = ERROR
		resp.Message = err.Error()
		resp.Total = 0
	} else {
		resp.Code = SUCCESS
		resp.Message = "success"
		if data != nil {
			resp.Total = 1
			resp.Data = append(resp.Data, data)
		}
	}
}

func (h *OpmVoiceProductMapGoogleHandler) SetPageResponse(resp *proto.OpmVoiceProductMapGoogleResponse, list []*proto.OpmVoiceProductMapGoogle, total int64, err error) {
	if err != nil {
		resp.Code = ERROR
		resp.Message = err.Error()
	} else {
		resp.Code = SUCCESS
		resp.Message = "success"
		resp.Total = total
		resp.Data = list
	}
}
*/
