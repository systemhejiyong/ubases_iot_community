// Code generated by sgen,2024-06-07 15:17:22. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

package handler

import (
    "context"


    proto "cloud_platform/iot_proto/protos/protosService"
    "cloud_platform/iot_product_service/service"
)

type OpmProductAppRelationHandler struct{}

//创建
func (h *OpmProductAppRelationHandler) Create(ctx context.Context, req *proto.OpmProductAppRelation,resp *proto.Response)  error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.CreateOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//匹配多条件删除
func (h *OpmProductAppRelationHandler) Delete(ctx context.Context, req *proto.OpmProductAppRelation,resp *proto.Response) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.DeleteOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//匹配ID删除
func (h *OpmProductAppRelationHandler) DeleteById(ctx context.Context, req *proto.OpmProductAppRelation,resp *proto.Response) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.DeleteByIdOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//根据主键批量删除
func (h *OpmProductAppRelationHandler) DeleteByIds(ctx context.Context, req *proto.OpmProductAppRelationBatchDeleteRequest,resp *proto.Response) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.DeleteByIdsOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//更新
func (h *OpmProductAppRelationHandler) Update(ctx context.Context, req *proto.OpmProductAppRelation,resp *proto.Response) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.UpdateOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//根据主键更新所有字段
func (h *OpmProductAppRelationHandler) UpdateAll(ctx context.Context, req *proto.OpmProductAppRelation,resp *proto.Response) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.UpdateAllOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//根据主键更新指定列
func (h *OpmProductAppRelationHandler) UpdateFields(ctx context.Context, req *proto.OpmProductAppRelationUpdateFieldsRequest,resp *proto.Response) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	_, err := s.UpdateFieldsOpmProductAppRelation(req)
    SetResponse(resp, err)
	return nil
}

//多条件查找，返回单条数据
func (h *OpmProductAppRelationHandler) Find(ctx context.Context, req *proto.OpmProductAppRelationFilter,resp *proto.OpmProductAppRelationResponse)  error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	data, err := s.FindOpmProductAppRelation(req)
    h.SetResponse(resp, data, err)
	return nil
}

//根据ID查找，返回单条数据
func (h *OpmProductAppRelationHandler) FindById(ctx context.Context, req *proto.OpmProductAppRelationFilter,resp *proto.OpmProductAppRelationResponse) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
	data, err := s.FindByIdOpmProductAppRelation(req)
	h.SetResponse(resp, data, err)
	return nil
}

//查找，支持分页，可返回多条数据
func (h *OpmProductAppRelationHandler) Lists(ctx context.Context, req *proto.OpmProductAppRelationListRequest,resp *proto.OpmProductAppRelationResponse) error {
    s := service.OpmProductAppRelationSvc{Ctx: ctx}
    data, total, err := s.GetListOpmProductAppRelation(req)
    h.SetPageResponse(resp, data, total, err)
	return nil
}


func (h *OpmProductAppRelationHandler) SetResponse(resp *proto.OpmProductAppRelationResponse, data *proto.OpmProductAppRelation, err error) {
	if err != nil {
		resp.Code = ERROR
		resp.Message = err.Error()
		resp.Total = 0
	} else {
		resp.Code = SUCCESS
		resp.Message = "success"
		if data != nil {
			resp.Total = 1
			resp.Data = append(resp.Data, data)
		}
	}
}

func (h *OpmProductAppRelationHandler) SetPageResponse(resp *proto.OpmProductAppRelationResponse, list []*proto.OpmProductAppRelation, total int64, err error) {
	if err != nil {
		resp.Code = ERROR
		resp.Message = err.Error()
	} else {
		resp.Code = SUCCESS
		resp.Message = "success"
		resp.Total = total
		resp.Data = list
	}
}
