// Code generated by sgen,{{.CurrentTime}}. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

package convert

import (
	"{{.DBModelPackage}}"
	proto "{{.ProtoPackage}}"
    {{- $hasDateTimeA := true }}{{range $i, $v := .Fields}} {{if $hasDateTimeA}} {{if and (ne $v.ColumnName "deleted_at") ( eq $v.DataType "timestamp")}}
	"google.golang.org/protobuf/types/known/timestamppb"
	{{- $hasDateTimeA = false }}{{end}}{{end}}{{end}}
)

func {{.ModelName}}_pb2db(src *proto.{{.ModelName}}) *model.{{.TableModelName}} {
	if src == nil {
		return nil
	}
	dbObj := model.{{.TableModelName}}{ {{range $i, $v := .Fields}} {{if ne $v.ColumnName "deleted_at"}} {{if or (eq $v.DataType "time") (eq $v.DataType "datetime") (eq $v.DataType "date") (eq $v.DataType "timestamp") }}
         {{case2CamelAndUcfirst $v.ColumnName}}:src.{{case2CamelAndUcfirst $v.ColumnName}}.AsTime(),{{else}}
         {{case2CamelAndUcfirst $v.ColumnName}}:src.{{case2CamelAndUcfirst $v.ColumnName}},{{end}}{{end}}{{end}}
	}
	return &dbObj
}

func {{.ModelName}}_db2pb(src *model.{{.TableModelName}}) *proto.{{.ModelName}} {
	if src == nil {
		return nil
	}
	pbObj := proto.{{.ModelName}}{ {{range $i, $v := .Fields}} {{if ne $v.ColumnName "deleted_at"}} {{if or (eq $v.DataType "time") (eq $v.DataType "datetime") (eq $v.DataType "date") (eq $v.DataType "timestamp") }}
         {{case2CamelAndUcfirst $v.ColumnName}}:timestamppb.New(src.{{case2CamelAndUcfirst $v.ColumnName}}),{{else}}
         {{case2CamelAndUcfirst $v.ColumnName}}:src.{{case2CamelAndUcfirst $v.ColumnName}},{{end}}{{end}}{{end}}
	}
	return &pbObj
}
