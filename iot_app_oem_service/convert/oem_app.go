// Code generated by sgen.exe,2022-06-02 11:15:10. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

package convert

import (
	"cloud_platform/iot_model/db_app_oem/model"
	proto "cloud_platform/iot_proto/protos/protosService"

	"google.golang.org/protobuf/types/known/timestamppb"
)

func OemApp_pb2db(src *proto.OemApp) *model.TOemApp {
	if src == nil {
		return nil
	}
	dbObj := model.TOemApp{
		Id:                  src.Id,
		AppKey:              src.AppKey,
		AppSecret:           src.AppSecret,
		Name:                src.Name,
		Version:             src.Version,
		IosPkgName:          src.IosPkgName,
		IosTeamId:           src.IosTeamId,
		AndroidPkgName:      src.AndroidPkgName,
		Channel:             src.Channel,
		Status:              src.Status,
		AmapKey:             src.AmapKey,
		GooglemapKey:        src.GooglemapKey,
		Region:              src.Region,
		CurrentStep:         src.CurrentStep,
		TenantId:            src.TenantId,
		CreatedBy:           src.CreatedBy,
		UpdatedBy:           src.UpdatedBy,
		CreatedAt:           src.CreatedAt.AsTime(),
		UpdatedAt:           src.UpdatedAt.AsTime(),
		NameEn:              src.NameEn,
		AppTemplateId:       src.AppTemplateId,
		AppTemplateVersion:  src.AppTemplateVersion,
		AppType:             src.AppType,
		AppDevType:          src.AppDevType,
		AppIconUrl:          src.AppIconUrl,
		IosVersion:          src.IosVersion,
		AndroidInterVersion: src.AndroidInterVersion,
		AndroidOuterVersion: src.AndroidOuterVersion,
		AppBuildVersion:     src.AppBuildVersion,
		ThemeJson:           src.ThemeJson,
	}
	if src.LastIosCertUpdateTime != nil {
		dbObj.LastIosCertUpdateTime = src.LastIosCertUpdateTime.AsTime()
	}
	if src.LastAndroidCertUpdateTime != nil {
		dbObj.LastAndroidCertUpdateTime = src.LastAndroidCertUpdateTime.AsTime()
	}
	if src.LastUiUpdateTime != nil {
		dbObj.LastUiUpdateTime = src.LastUiUpdateTime.AsTime()
	}
	if src.LastBuildTime != nil {
		dbObj.LastBuildTime = src.LastBuildTime.AsTime()
	}
	return &dbObj
}

func OemApp_db2pb(src *model.TOemApp) *proto.OemApp {
	if src == nil {
		return nil
	}
	pbObj := proto.OemApp{
		Id:                  src.Id,
		AppKey:              src.AppKey,
		AppSecret:           src.AppSecret,
		Name:                src.Name,
		Version:             src.Version,
		IosPkgName:          src.IosPkgName,
		IosTeamId:           src.IosTeamId,
		AndroidPkgName:      src.AndroidPkgName,
		Channel:             src.Channel,
		Status:              src.Status,
		AmapKey:             src.AmapKey,
		GooglemapKey:        src.GooglemapKey,
		Region:              src.Region,
		CurrentStep:         src.CurrentStep,
		TenantId:            src.TenantId,
		CreatedBy:           src.CreatedBy,
		UpdatedBy:           src.UpdatedBy,
		CreatedAt:           timestamppb.New(src.CreatedAt),
		UpdatedAt:           timestamppb.New(src.UpdatedAt),
		NameEn:              src.NameEn,
		AppTemplateId:       src.AppTemplateId,
		AppTemplateVersion:  src.AppTemplateVersion,
		AppType:             src.AppType,
		AppDevType:          src.AppDevType,
		AppIconUrl:          src.AppIconUrl,
		IosVersion:          src.IosVersion,
		AndroidInterVersion: src.AndroidInterVersion,
		AndroidOuterVersion: src.AndroidOuterVersion,
		AppBuildVersion:     src.AppBuildVersion,
		ThemeJson:           src.ThemeJson,
		IsDefault:           src.IsDefault,
	}
	pbObj.LastIosCertUpdateTime = timestamppb.New(src.LastIosCertUpdateTime)
	pbObj.LastAndroidCertUpdateTime = timestamppb.New(src.LastAndroidCertUpdateTime)
	pbObj.LastBuildTime = timestamppb.New(src.LastBuildTime)
	pbObj.LastUiUpdateTime = timestamppb.New(src.LastUiUpdateTime)
	return &pbObj
}

// keytool -genkeypair -alias serverkey -keypass 111111 -storepass 111111 -dname "C=CN,ST=GD,L=SZ,O=vihoo,OU=dev,CN=vihoo.com" -keyalg RSA -keysize 2048 -validity 3650 -keystore server.keystore
// 生成keystore的参数
type KeyToolEntity struct {
	Storepass    string            // storepass keystore 文件存储密码
	Keypass      string            // keypass 私钥加解密密码
	Alias        string            // alias 实体别名(包括证书私钥)
	Dname        map[string]string // dname 证书个人信息 CN=公司名,OU=部门,O=公司名,L=市,ST=湖南,C=国籍(CN)
	Keyalt       string            // keyalt 采用公钥算法，默认是DSA
	Keysize      string            // keysize 密钥长度(DSA算法对应的默认算法是sha1withDSA，不支持2048长度，此时需指定RSA)
	Validity     string            // validity 有效期 18250 单位/天  默认50年
	KeystoreName string            // keystore 指定keystore文件文件名, 不带后缀
}

type BuildAppEntity struct {
	AndroidFolder struct { //Android文件夹
		LaunchScreen1080x1920 string //启动图
		LaunchScreen1080x2160 string //启动图
		LaunchScreen1080x2400 string //启动图
		AgconnectServices     string //agconnect-services.json
		AndroidKeystore       string // android.keystore
		GoogleServices        string //google-services.json
	}
	IosFolder struct {
		LaunchScreen640x960        string //启动图
		LaunchScreen1080x1920      string //启动图
		LaunchScreen1242x2688      string //启动图
		Distribution               string //distribution.p12
		IosMobileprovision         string //ios.mobileprovision
		IosMobileprovisionOfficial string //正式环境证书
		Push                       string //push.p12
	}
	HTML5Folder struct {
		Images struct {
			Avatar     string //avatar.png
			Background string //background.png
			Logo       string //logo.png
			NoData     string //noData.png
		}
		Lang         map[string]map[string]interface{} //语言包
		GlobalJs     map[string]interface{}            //global.js
		GlobalDarkJs map[string]interface{}            //global.js
		GlobalLess   map[string]interface{}            //global.less
	}
	CommonSh map[string]interface{} //common.sh
	Logo1024 string                 //1024.png
}

type BuildInfo struct {
	ID        string `json:"id"`        //构建编号
	OS        string `json:"os"`        //操作系统
	ZipUrl    string `json:"zipUrl"`    //zip下载地址
	ZipMd5    string `json:"zipMd5"`    //zip MD5校验码
	NotifUrl  string `json:"notifyUrl"` //打包回调接口地址
	Time      int64  `json:"time"`      //时间戳
	BuildType int32  `json:"buildType"` //编译类型 = 2 APP面板编译
	Type      int32  `json:"type"`      //方法类型 = 1 构建  =2 取消构建
}

// 入库的实体
type BuildRecordReq struct {
	Id      int64
	AppId   int64
	Version string
	Os      int32
	Region  int32
	Status  int32
	ResUrl  string
	ResMd5  string
}
