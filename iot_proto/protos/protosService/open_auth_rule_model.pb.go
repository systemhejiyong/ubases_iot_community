// Code generated by protoc,2022-04-28 10:53:43. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: open_auth_rule_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type OpenAuthRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"primary_key;AUTO_INCREMENT;default:;comment:;size:20;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"pid" gorm:"default:父ID;comment:父ID;size:20;"
	Pid int64 `protobuf:"varint,101,opt,name=pid,proto3" json:"pid,omitempty"`
	// @inject_tag: json:"name" gorm:"default:规则名称;comment:规则名称;size:100;"
	Name string `protobuf:"bytes,102,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"title" gorm:"default:规则名称;comment:规则名称;size:50;"
	Title string `protobuf:"bytes,103,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"icon" gorm:"default:图标;comment:图标;size:50;"
	Icon string `protobuf:"bytes,104,opt,name=icon,proto3" json:"icon,omitempty"`
	// @inject_tag: json:"condition" gorm:"default:条件;comment:条件;size:255;"
	Condition string `protobuf:"bytes,105,opt,name=condition,proto3" json:"condition,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:255;"
	Remark string `protobuf:"bytes,106,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"menuType" gorm:"default:类型 0目录 1菜单 2按钮;comment:类型 0目录 1菜单 2按钮;size:10;"
	MenuType int32 `protobuf:"varint,107,opt,name=menuType,proto3" json:"menuType,omitempty"`
	// @inject_tag: json:"weigh" gorm:"default:权重;comment:权重;size:10;"
	Weigh int32 `protobuf:"varint,108,opt,name=weigh,proto3" json:"weigh,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态;comment:状态;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"alwaysShow" gorm:"default:显示状态;comment:显示状态;size:10;"
	AlwaysShow int32 `protobuf:"varint,110,opt,name=alwaysShow,proto3" json:"alwaysShow,omitempty"`
	// @inject_tag: json:"path" gorm:"default:路由地址;comment:路由地址;size:100;"
	Path string `protobuf:"bytes,111,opt,name=path,proto3" json:"path,omitempty"`
	// @inject_tag: json:"jumpPath" gorm:"default:跳转路由;comment:跳转路由;size:100;"
	JumpPath string `protobuf:"bytes,112,opt,name=jumpPath,proto3" json:"jumpPath,omitempty"`
	// @inject_tag: json:"component" gorm:"default:组件路径;comment:组件路径;size:100;"
	Component string `protobuf:"bytes,113,opt,name=component,proto3" json:"component,omitempty"`
	// @inject_tag: json:"isFrame" gorm:"default:是否外链 1是 0否;comment:是否外链 1是 0否;size:10;"
	IsFrame int32 `protobuf:"varint,114,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	// @inject_tag: json:"moduleType" gorm:"default:所属模块;comment:所属模块;size:30;"
	ModuleType string `protobuf:"bytes,115,opt,name=moduleType,proto3" json:"moduleType,omitempty"`
	// @inject_tag: json:"modelId" gorm:"default:模型ID;comment:模型ID;size:20;"
	ModelId int64 `protobuf:"varint,116,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// @inject_tag: json:"isCache" gorm:"default:是否缓存(1 缓存, 2 不缓存);comment:是否缓存(1 缓存, 2 不缓存);size:10;"
	IsCache int32 `protobuf:"varint,117,opt,name=isCache,proto3" json:"isCache,omitempty"`
	// @inject_tag: json:"isHideChildMenu" gorm:"default:是否隐藏子菜单(1 隐藏, 2 不隐藏);comment:是否隐藏子菜单(1 隐藏, 2 不隐藏);size:10;"
	IsHideChildMenu int32 `protobuf:"varint,118,opt,name=isHideChildMenu,proto3" json:"isHideChildMenu,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建日期;comment:创建日期;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,119,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改日期;comment:修改日期;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,120,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除日期;comment:删除日期;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,121,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:;comment:;size:19;"
	CreatedBy int64 `protobuf:"varint,122,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:;comment:;size:19;"
	UpdatedBy int64 `protobuf:"varint,123,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *OpenAuthRule) Reset() {
	*x = OpenAuthRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRule) ProtoMessage() {}

func (x *OpenAuthRule) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRule.ProtoReflect.Descriptor instead.
func (*OpenAuthRule) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{0}
}

func (x *OpenAuthRule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenAuthRule) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *OpenAuthRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenAuthRule) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OpenAuthRule) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OpenAuthRule) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *OpenAuthRule) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OpenAuthRule) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *OpenAuthRule) GetWeigh() int32 {
	if x != nil {
		return x.Weigh
	}
	return 0
}

func (x *OpenAuthRule) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpenAuthRule) GetAlwaysShow() int32 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *OpenAuthRule) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenAuthRule) GetJumpPath() string {
	if x != nil {
		return x.JumpPath
	}
	return ""
}

func (x *OpenAuthRule) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *OpenAuthRule) GetIsFrame() int32 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *OpenAuthRule) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *OpenAuthRule) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpenAuthRule) GetIsCache() int32 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *OpenAuthRule) GetIsHideChildMenu() int32 {
	if x != nil {
		return x.IsHideChildMenu
	}
	return 0
}

func (x *OpenAuthRule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpenAuthRule) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpenAuthRule) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpenAuthRule) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpenAuthRule) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

type OpenAuthRuleFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"primary_key;AUTO_INCREMENT;default:;comment:;size:20;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"pid" gorm:"default:父ID;comment:父ID;size:20;"
	Pid int64 `protobuf:"varint,101,opt,name=pid,proto3" json:"pid,omitempty"`
	// @inject_tag: json:"name" gorm:"default:规则名称;comment:规则名称;size:100;"
	Name string `protobuf:"bytes,102,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"title" gorm:"default:规则名称;comment:规则名称;size:50;"
	Title string `protobuf:"bytes,103,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"icon" gorm:"default:图标;comment:图标;size:50;"
	Icon string `protobuf:"bytes,104,opt,name=icon,proto3" json:"icon,omitempty"`
	// @inject_tag: json:"condition" gorm:"default:条件;comment:条件;size:255;"
	Condition string `protobuf:"bytes,105,opt,name=condition,proto3" json:"condition,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:255;"
	Remark string `protobuf:"bytes,106,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"menuType" gorm:"default:类型 0目录 1菜单 2按钮;comment:类型 0目录 1菜单 2按钮;size:10;"
	MenuType int32 `protobuf:"varint,107,opt,name=menuType,proto3" json:"menuType,omitempty"`
	// @inject_tag: json:"weigh" gorm:"default:权重;comment:权重;size:10;"
	Weigh int32 `protobuf:"varint,108,opt,name=weigh,proto3" json:"weigh,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态;comment:状态;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"alwaysShow" gorm:"default:显示状态;comment:显示状态;size:10;"
	AlwaysShow int32 `protobuf:"varint,110,opt,name=alwaysShow,proto3" json:"alwaysShow,omitempty"`
	// @inject_tag: json:"path" gorm:"default:路由地址;comment:路由地址;size:100;"
	Path string `protobuf:"bytes,111,opt,name=path,proto3" json:"path,omitempty"`
	// @inject_tag: json:"jumpPath" gorm:"default:跳转路由;comment:跳转路由;size:100;"
	JumpPath string `protobuf:"bytes,112,opt,name=jumpPath,proto3" json:"jumpPath,omitempty"`
	// @inject_tag: json:"component" gorm:"default:组件路径;comment:组件路径;size:100;"
	Component string `protobuf:"bytes,113,opt,name=component,proto3" json:"component,omitempty"`
	// @inject_tag: json:"isFrame" gorm:"default:是否外链 1是 0否;comment:是否外链 1是 0否;size:10;"
	IsFrame int32 `protobuf:"varint,114,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	// @inject_tag: json:"moduleType" gorm:"default:所属模块;comment:所属模块;size:30;"
	ModuleType string `protobuf:"bytes,115,opt,name=moduleType,proto3" json:"moduleType,omitempty"`
	// @inject_tag: json:"modelId" gorm:"default:模型ID;comment:模型ID;size:20;"
	ModelId int64 `protobuf:"varint,116,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// @inject_tag: json:"isCache" gorm:"default:是否缓存(1 缓存, 2 不缓存);comment:是否缓存(1 缓存, 2 不缓存);size:10;"
	IsCache int32 `protobuf:"varint,117,opt,name=isCache,proto3" json:"isCache,omitempty"`
	// @inject_tag: json:"isHideChildMenu" gorm:"default:是否隐藏子菜单(1 隐藏, 2 不隐藏);comment:是否隐藏子菜单(1 隐藏, 2 不隐藏);size:10;"
	IsHideChildMenu int32 `protobuf:"varint,118,opt,name=isHideChildMenu,proto3" json:"isHideChildMenu,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建日期;comment:创建日期;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,119,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改日期;comment:修改日期;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,120,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除日期;comment:删除日期;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,121,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:;comment:;size:19;"
	CreatedBy int64 `protobuf:"varint,122,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:;comment:;size:19;"
	UpdatedBy int64 `protobuf:"varint,123,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *OpenAuthRuleFilter) Reset() {
	*x = OpenAuthRuleFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRuleFilter) ProtoMessage() {}

func (x *OpenAuthRuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRuleFilter.ProtoReflect.Descriptor instead.
func (*OpenAuthRuleFilter) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{1}
}

func (x *OpenAuthRuleFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetWeigh() int32 {
	if x != nil {
		return x.Weigh
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetAlwaysShow() int32 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetJumpPath() string {
	if x != nil {
		return x.JumpPath
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetIsFrame() int32 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *OpenAuthRuleFilter) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetIsCache() int32 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetIsHideChildMenu() int32 {
	if x != nil {
		return x.IsHideChildMenu
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpenAuthRuleFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpenAuthRuleFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpenAuthRuleFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpenAuthRuleFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

type OpenAuthRuleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *OpenAuthRule `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64         `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64         `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string        `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string        `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *OpenAuthRuleListRequest) Reset() {
	*x = OpenAuthRuleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRuleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRuleListRequest) ProtoMessage() {}

func (x *OpenAuthRuleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRuleListRequest.ProtoReflect.Descriptor instead.
func (*OpenAuthRuleListRequest) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{2}
}

func (x *OpenAuthRuleListRequest) GetQuery() *OpenAuthRule {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *OpenAuthRuleListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OpenAuthRuleListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OpenAuthRuleListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OpenAuthRuleListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type OpenAuthRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64           `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OpenAuthRule `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenAuthRuleResponse) Reset() {
	*x = OpenAuthRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRuleResponse) ProtoMessage() {}

func (x *OpenAuthRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRuleResponse.ProtoReflect.Descriptor instead.
func (*OpenAuthRuleResponse) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{3}
}

func (x *OpenAuthRuleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpenAuthRuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpenAuthRuleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpenAuthRuleResponse) GetData() []*OpenAuthRule {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpenAuthRuleUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string      `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *OpenAuthRule `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenAuthRuleUpdateFieldsRequest) Reset() {
	*x = OpenAuthRuleUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRuleUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRuleUpdateFieldsRequest) ProtoMessage() {}

func (x *OpenAuthRuleUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRuleUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*OpenAuthRuleUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{4}
}

func (x *OpenAuthRuleUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *OpenAuthRuleUpdateFieldsRequest) GetData() *OpenAuthRule {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type OpenAuthRulePrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpenAuthRulePrimarykey) Reset() {
	*x = OpenAuthRulePrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRulePrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRulePrimarykey) ProtoMessage() {}

func (x *OpenAuthRulePrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRulePrimarykey.ProtoReflect.Descriptor instead.
func (*OpenAuthRulePrimarykey) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{5}
}

func (x *OpenAuthRulePrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpenAuthRuleBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*OpenAuthRulePrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *OpenAuthRuleBatchDeleteRequest) Reset() {
	*x = OpenAuthRuleBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAuthRuleBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAuthRuleBatchDeleteRequest) ProtoMessage() {}

func (x *OpenAuthRuleBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAuthRuleBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpenAuthRuleBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{6}
}

func (x *OpenAuthRuleBatchDeleteRequest) GetKeys() []*OpenAuthRulePrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

//开放平台菜单树
type OpenMenuTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"primary_key;AUTO_INCREMENT;default:;comment:;size:20;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"pid" gorm:"default:父ID;comment:父ID;size:20;"
	Pid int64 `protobuf:"varint,101,opt,name=pid,proto3" json:"pid,omitempty"`
	// @inject_tag: json:"name" gorm:"default:规则名称;comment:规则名称;size:100;"
	Name string `protobuf:"bytes,102,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"title" gorm:"default:规则名称;comment:规则名称;size:50;"
	Title string `protobuf:"bytes,103,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"icon" gorm:"default:图标;comment:图标;size:50;"
	Icon string `protobuf:"bytes,104,opt,name=icon,proto3" json:"icon,omitempty"`
	// @inject_tag: json:"condition" gorm:"default:条件;comment:条件;size:255;"
	Condition string `protobuf:"bytes,105,opt,name=condition,proto3" json:"condition,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:255;"
	Remark string `protobuf:"bytes,106,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"menuType" gorm:"default:类型 0目录 1菜单 2按钮;comment:类型 0目录 1菜单 2按钮;size:10;"
	MenuType int32 `protobuf:"varint,107,opt,name=menuType,proto3" json:"menuType,omitempty"`
	// @inject_tag: json:"weigh" gorm:"default:权重;comment:权重;size:10;"
	Weigh int32 `protobuf:"varint,108,opt,name=weigh,proto3" json:"weigh,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态;comment:状态;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"alwaysShow" gorm:"default:显示状态;comment:显示状态;size:10;"
	AlwaysShow int32 `protobuf:"varint,110,opt,name=alwaysShow,proto3" json:"alwaysShow,omitempty"`
	// @inject_tag: json:"path" gorm:"default:路由地址;comment:路由地址;size:100;"
	Path string `protobuf:"bytes,111,opt,name=path,proto3" json:"path,omitempty"`
	// @inject_tag: json:"jumpPath" gorm:"default:跳转路由;comment:跳转路由;size:100;"
	JumpPath string `protobuf:"bytes,112,opt,name=jumpPath,proto3" json:"jumpPath,omitempty"`
	// @inject_tag: json:"component" gorm:"default:组件路径;comment:组件路径;size:100;"
	Component string `protobuf:"bytes,113,opt,name=component,proto3" json:"component,omitempty"`
	// @inject_tag: json:"isFrame" gorm:"default:是否外链 1是 0否;comment:是否外链 1是 0否;size:10;"
	IsFrame int32 `protobuf:"varint,114,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	// @inject_tag: json:"moduleType" gorm:"default:所属模块;comment:所属模块;size:30;"
	ModuleType string `protobuf:"bytes,115,opt,name=moduleType,proto3" json:"moduleType,omitempty"`
	// @inject_tag: json:"modelId" gorm:"default:模型ID;comment:模型ID;size:20;"
	ModelId int64 `protobuf:"varint,116,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// @inject_tag: json:"isCache" gorm:"default:是否缓存(1 缓存, 2 不缓存);comment:是否缓存(1 缓存, 2 不缓存);size:10;"
	IsCache int32 `protobuf:"varint,117,opt,name=isCache,proto3" json:"isCache,omitempty"`
	// @inject_tag: json:"isHideChildMenu" gorm:"default:是否隐藏子菜单(1 隐藏, 2 不隐藏);comment:是否隐藏子菜单(1 隐藏, 2 不隐藏);size:10;"
	IsHideChildMenu int32 `protobuf:"varint,118,opt,name=isHideChildMenu,proto3" json:"isHideChildMenu,omitempty"`
	//子菜单
	Children []*OpenMenuTree `protobuf:"bytes,119,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *OpenMenuTree) Reset() {
	*x = OpenMenuTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_auth_rule_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMenuTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMenuTree) ProtoMessage() {}

func (x *OpenMenuTree) ProtoReflect() protoreflect.Message {
	mi := &file_open_auth_rule_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMenuTree.ProtoReflect.Descriptor instead.
func (*OpenMenuTree) Descriptor() ([]byte, []int) {
	return file_open_auth_rule_model_proto_rawDescGZIP(), []int{7}
}

func (x *OpenMenuTree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenMenuTree) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *OpenMenuTree) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenMenuTree) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OpenMenuTree) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OpenMenuTree) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *OpenMenuTree) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OpenMenuTree) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *OpenMenuTree) GetWeigh() int32 {
	if x != nil {
		return x.Weigh
	}
	return 0
}

func (x *OpenMenuTree) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpenMenuTree) GetAlwaysShow() int32 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *OpenMenuTree) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenMenuTree) GetJumpPath() string {
	if x != nil {
		return x.JumpPath
	}
	return ""
}

func (x *OpenMenuTree) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *OpenMenuTree) GetIsFrame() int32 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *OpenMenuTree) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *OpenMenuTree) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpenMenuTree) GetIsCache() int32 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *OpenMenuTree) GetIsHideChildMenu() int32 {
	if x != nil {
		return x.IsHideChildMenu
	}
	return 0
}

func (x *OpenMenuTree) GetChildren() []*OpenMenuTree {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_open_auth_rule_model_proto protoreflect.FileDescriptor

var file_open_auth_rule_model_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x05, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79,
	0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x77,
	0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6a,
	0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x73, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x76, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x73,
	0x48, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x79,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xe4, 0x05, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x70,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x72, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73,
	0x48, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x76, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x7a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xb0,
	0x01, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x1f, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x28, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x1e, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x75, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x22, 0xa7, 0x04, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x65, 0x69, 0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x72, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x75,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x75,
	0x18, 0x76, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x73, 0x48, 0x69, 0x64, 0x65, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x77, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_open_auth_rule_model_proto_rawDescOnce sync.Once
	file_open_auth_rule_model_proto_rawDescData = file_open_auth_rule_model_proto_rawDesc
)

func file_open_auth_rule_model_proto_rawDescGZIP() []byte {
	file_open_auth_rule_model_proto_rawDescOnce.Do(func() {
		file_open_auth_rule_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_open_auth_rule_model_proto_rawDescData)
	})
	return file_open_auth_rule_model_proto_rawDescData
}

var file_open_auth_rule_model_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_open_auth_rule_model_proto_goTypes = []interface{}{
	(*OpenAuthRule)(nil),                    // 0: service.OpenAuthRule
	(*OpenAuthRuleFilter)(nil),              // 1: service.OpenAuthRuleFilter
	(*OpenAuthRuleListRequest)(nil),         // 2: service.OpenAuthRuleListRequest
	(*OpenAuthRuleResponse)(nil),            // 3: service.OpenAuthRuleResponse
	(*OpenAuthRuleUpdateFieldsRequest)(nil), // 4: service.OpenAuthRuleUpdateFieldsRequest
	(*OpenAuthRulePrimarykey)(nil),          // 5: service.OpenAuthRulePrimarykey
	(*OpenAuthRuleBatchDeleteRequest)(nil),  // 6: service.OpenAuthRuleBatchDeleteRequest
	(*OpenMenuTree)(nil),                    // 7: service.OpenMenuTree
	(*timestamppb.Timestamp)(nil),           // 8: google.protobuf.Timestamp
}
var file_open_auth_rule_model_proto_depIdxs = []int32{
	8,  // 0: service.OpenAuthRule.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 1: service.OpenAuthRule.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 2: service.OpenAuthRule.deletedAt:type_name -> google.protobuf.Timestamp
	8,  // 3: service.OpenAuthRuleFilter.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 4: service.OpenAuthRuleFilter.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 5: service.OpenAuthRuleFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.OpenAuthRuleListRequest.query:type_name -> service.OpenAuthRule
	0,  // 7: service.OpenAuthRuleResponse.data:type_name -> service.OpenAuthRule
	0,  // 8: service.OpenAuthRuleUpdateFieldsRequest.data:type_name -> service.OpenAuthRule
	5,  // 9: service.OpenAuthRuleBatchDeleteRequest.keys:type_name -> service.OpenAuthRulePrimarykey
	7,  // 10: service.OpenMenuTree.Children:type_name -> service.OpenMenuTree
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_open_auth_rule_model_proto_init() }
func file_open_auth_rule_model_proto_init() {
	if File_open_auth_rule_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_open_auth_rule_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRuleFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRuleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRuleUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRulePrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAuthRuleBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_auth_rule_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMenuTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_open_auth_rule_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_open_auth_rule_model_proto_goTypes,
		DependencyIndexes: file_open_auth_rule_model_proto_depIdxs,
		MessageInfos:      file_open_auth_rule_model_proto_msgTypes,
	}.Build()
	File_open_auth_rule_model_proto = out.File
	file_open_auth_rule_model_proto_rawDesc = nil
	file_open_auth_rule_model_proto_goTypes = nil
	file_open_auth_rule_model_proto_depIdxs = nil
}
