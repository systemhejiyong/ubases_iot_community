// Code generated by sgen.exe,2022-05-13 13:53:10. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: opm_ota_pkg_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type OpmOtaPkg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:开放平台产品ID（t_opm_product.id）;comment:开放平台产品ID（t_opm_product.id）;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:开放平台产品唯一标识（t_opm_product.product_key）;comment:开放平台产品唯一标识（t_opm_product.product_key）;size:16;"
	ProductKey string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"type" gorm:"default:包类型[0:固件];comment:包类型[0:固件];size:10;"
	Type int32 `protobuf:"varint,103,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"firmwareId" gorm:"default:;comment:;size:19;"
	FirmwareId int64 `protobuf:"varint,104,opt,name=firmwareId,proto3" json:"firmwareId,omitempty"`
	// @inject_tag: json:"firmwareFlag" gorm:"default:;comment:;size:50;"
	FirmwareFlag string `protobuf:"bytes,105,opt,name=firmwareFlag,proto3" json:"firmwareFlag,omitempty"`
	// @inject_tag: json:"firmwareType" gorm:"default:;comment:;size:50;"
	FirmwareType int32 `protobuf:"varint,106,opt,name=firmwareType,proto3" json:"firmwareType,omitempty"`
	// @inject_tag: json:"versionId" gorm:"default:版本号编号;comment:版本号编号;size:19;"
	VersionId int64 `protobuf:"varint,107,opt,name=versionId,proto3" json:"versionId,omitempty"`
	// @inject_tag: json:"version" gorm:"default:固件版本号;comment:固件版本号;size:20;"
	Version string `protobuf:"bytes,108,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"upgradeMode" gorm:"default:升级方式[0:静默,1:提醒,2:强制];comment:升级方式[0:静默,1:提醒,2:强制];size:10;"
	UpgradeMode int32 `protobuf:"varint,109,opt,name=upgradeMode,proto3" json:"upgradeMode,omitempty"`
	// @inject_tag: json:"url" gorm:"default:包路径;comment:包路径;size:200;"
	Url string `protobuf:"bytes,110,opt,name=url,proto3" json:"url,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[0:未验证,1:已验证,2:已发布,2:已暂停];comment:状态[0:未验证,1:已验证,2:已发布,2:已暂停];size:10;"
	Status int32 `protobuf:"varint,111,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"isAuto" gorm:"default:是否自动升级[0:否 1:是];comment:是否自动升级[0:否 1:是];"
	IsAuto int32 `protobuf:"varint,112,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	// @inject_tag: json:"upgradeDesc" gorm:"default:升级文案（中文）;comment:升级文案（中文）;size:300;"
	UpgradeDesc string `protobuf:"bytes,113,opt,name=upgradeDesc,proto3" json:"upgradeDesc,omitempty"`
	// @inject_tag: json:"upgradeDescEn" gorm:"default:升级文案（英文）;comment:升级文案（英文）;size:300;"
	UpgradeDescEn string `protobuf:"bytes,114,opt,name=upgradeDescEn,proto3" json:"upgradeDescEn,omitempty"`
	// @inject_tag: json:"autoStartAt" gorm:"default:自动升级开始时间;comment:自动升级开始时间;"
	AutoStartAt string `protobuf:"bytes,115,opt,name=autoStartAt,proto3" json:"autoStartAt,omitempty"`
	// @inject_tag: json:"autoEndAt" gorm:"default:自动升级结束时间;comment:自动升级结束时间;"
	AutoEndAt string `protobuf:"bytes,116,opt,name=autoEndAt,proto3" json:"autoEndAt,omitempty"`
	// @inject_tag: json:"specifiedVersionMode" gorm:"default:指定升级版本（模式选择 1全部版本 2指定版本）;comment:指定升级版本（模式选择 1全部版本 2指定版本）;size:20;"
	SpecifiedVersionMode int32 `protobuf:"varint,117,opt,name=specifiedVersionMode,proto3" json:"specifiedVersionMode,omitempty"`
	// @inject_tag: json:"specifiedVersion" gorm:"default:指定升级版本;comment:指定升级版本;size:20;"
	SpecifiedVersion string `protobuf:"bytes,118,opt,name=specifiedVersion,proto3" json:"specifiedVersion,omitempty"`
	// @inject_tag: json:"specifiedAreaMode" gorm:"default:指定升级区域（模式选择 1全部区域 2指定区域）;comment:指定升级区域（模式选择 1全部区域 2指定区域）;size:20;"
	SpecifiedAreaMode int32 `protobuf:"varint,119,opt,name=specifiedAreaMode,proto3" json:"specifiedAreaMode,omitempty"`
	// @inject_tag: json:"specifiedArea" gorm:"default:指定升级区域;comment:指定升级区域;size:20;"
	SpecifiedArea string `protobuf:"bytes,120,opt,name=specifiedArea,proto3" json:"specifiedArea,omitempty"`
	// @inject_tag: json:"md5" gorm:"default:包MD5值;comment:包MD5值;size:100;"
	Md5 string `protobuf:"bytes,121,opt,name=md5,proto3" json:"md5,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,122,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,123,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,124,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,125,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,126,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
	TenantId string `protobuf:"bytes,127,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// 固件名称
	FirmwareName      string         `protobuf:"bytes,128,opt,name=firmwareName,proto3" json:"firmwareName,omitempty"`
	ListPublishRecord *OpmOtaPublish `protobuf:"bytes,129,opt,name=listPublishRecord,proto3" json:"listPublishRecord,omitempty"`
	// 升级时间模式 =1 全天 =2 指定时间
	UpgradeTimeMode  int32 `protobuf:"varint,130,opt,name=upgradeTimeMode,proto3" json:"upgradeTimeMode,omitempty"`
	IsCustomFirmware int32 `protobuf:"varint,131,opt,name=isCustomFirmware,proto3" json:"isCustomFirmware,omitempty"` //是否自定义固件
	IsMustVersion    int32 `protobuf:"varint,132,opt,name=isMustVersion,proto3" json:"isMustVersion,omitempty"`
	//固件Key
	FirmwareKey string `protobuf:"bytes,133,opt,name=firmwareKey,proto3" json:"firmwareKey,omitempty"`
	//固件Url
	FirmwareUrl string `protobuf:"bytes,134,opt,name=firmwareUrl,proto3" json:"firmwareUrl,omitempty"`
}

func (x *OpmOtaPkg) Reset() {
	*x = OpmOtaPkg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkg) ProtoMessage() {}

func (x *OpmOtaPkg) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkg.ProtoReflect.Descriptor instead.
func (*OpmOtaPkg) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{0}
}

func (x *OpmOtaPkg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmOtaPkg) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmOtaPkg) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *OpmOtaPkg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OpmOtaPkg) GetFirmwareId() int64 {
	if x != nil {
		return x.FirmwareId
	}
	return 0
}

func (x *OpmOtaPkg) GetFirmwareFlag() string {
	if x != nil {
		return x.FirmwareFlag
	}
	return ""
}

func (x *OpmOtaPkg) GetFirmwareType() int32 {
	if x != nil {
		return x.FirmwareType
	}
	return 0
}

func (x *OpmOtaPkg) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *OpmOtaPkg) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpmOtaPkg) GetUpgradeMode() int32 {
	if x != nil {
		return x.UpgradeMode
	}
	return 0
}

func (x *OpmOtaPkg) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpmOtaPkg) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpmOtaPkg) GetIsAuto() int32 {
	if x != nil {
		return x.IsAuto
	}
	return 0
}

func (x *OpmOtaPkg) GetUpgradeDesc() string {
	if x != nil {
		return x.UpgradeDesc
	}
	return ""
}

func (x *OpmOtaPkg) GetUpgradeDescEn() string {
	if x != nil {
		return x.UpgradeDescEn
	}
	return ""
}

func (x *OpmOtaPkg) GetAutoStartAt() string {
	if x != nil {
		return x.AutoStartAt
	}
	return ""
}

func (x *OpmOtaPkg) GetAutoEndAt() string {
	if x != nil {
		return x.AutoEndAt
	}
	return ""
}

func (x *OpmOtaPkg) GetSpecifiedVersionMode() int32 {
	if x != nil {
		return x.SpecifiedVersionMode
	}
	return 0
}

func (x *OpmOtaPkg) GetSpecifiedVersion() string {
	if x != nil {
		return x.SpecifiedVersion
	}
	return ""
}

func (x *OpmOtaPkg) GetSpecifiedAreaMode() int32 {
	if x != nil {
		return x.SpecifiedAreaMode
	}
	return 0
}

func (x *OpmOtaPkg) GetSpecifiedArea() string {
	if x != nil {
		return x.SpecifiedArea
	}
	return ""
}

func (x *OpmOtaPkg) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *OpmOtaPkg) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmOtaPkg) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *OpmOtaPkg) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpmOtaPkg) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpmOtaPkg) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpmOtaPkg) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *OpmOtaPkg) GetFirmwareName() string {
	if x != nil {
		return x.FirmwareName
	}
	return ""
}

func (x *OpmOtaPkg) GetListPublishRecord() *OpmOtaPublish {
	if x != nil {
		return x.ListPublishRecord
	}
	return nil
}

func (x *OpmOtaPkg) GetUpgradeTimeMode() int32 {
	if x != nil {
		return x.UpgradeTimeMode
	}
	return 0
}

func (x *OpmOtaPkg) GetIsCustomFirmware() int32 {
	if x != nil {
		return x.IsCustomFirmware
	}
	return 0
}

func (x *OpmOtaPkg) GetIsMustVersion() int32 {
	if x != nil {
		return x.IsMustVersion
	}
	return 0
}

func (x *OpmOtaPkg) GetFirmwareKey() string {
	if x != nil {
		return x.FirmwareKey
	}
	return ""
}

func (x *OpmOtaPkg) GetFirmwareUrl() string {
	if x != nil {
		return x.FirmwareUrl
	}
	return ""
}

type OpmOtaPkgFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:开放平台产品ID（t_opm_product.id）;comment:开放平台产品ID（t_opm_product.id）;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:开放平台产品唯一标识（t_opm_product.product_key）;comment:开放平台产品唯一标识（t_opm_product.product_key）;size:16;"
	ProductKey string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"type" gorm:"default:包类型[0:固件];comment:包类型[0:固件];size:10;"
	Type int32 `protobuf:"varint,103,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"firmwareId" gorm:"default:;comment:;size:19;"
	FirmwareId int64 `protobuf:"varint,104,opt,name=firmwareId,proto3" json:"firmwareId,omitempty"`
	// @inject_tag: json:"firmwareFlag" gorm:"default:;comment:;size:50;"
	FirmwareFlag string `protobuf:"bytes,105,opt,name=firmwareFlag,proto3" json:"firmwareFlag,omitempty"`
	// @inject_tag: json:"firmwareType" gorm:"default:;comment:;size:50;"
	FirmwareType int32 `protobuf:"varint,106,opt,name=firmwareType,proto3" json:"firmwareType,omitempty"`
	// @inject_tag: json:"versionId" gorm:"default:版本号编号;comment:版本号编号;size:19;"
	VersionId int64 `protobuf:"varint,107,opt,name=versionId,proto3" json:"versionId,omitempty"`
	// @inject_tag: json:"version" gorm:"default:固件版本号;comment:固件版本号;size:20;"
	Version string `protobuf:"bytes,108,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"upgradeMode" gorm:"default:升级方式[0:静默,1:提醒,2:强制];comment:升级方式[0:静默,1:提醒,2:强制];size:10;"
	UpgradeMode int32 `protobuf:"varint,109,opt,name=upgradeMode,proto3" json:"upgradeMode,omitempty"`
	// @inject_tag: json:"url" gorm:"default:包路径;comment:包路径;size:200;"
	Url string `protobuf:"bytes,110,opt,name=url,proto3" json:"url,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[0:未验证,1:已验证,2:已发布,2:已暂停];comment:状态[0:未验证,1:已验证,2:已发布,2:已暂停];size:10;"
	Status int32 `protobuf:"varint,111,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"isAuto" gorm:"default:是否自动升级[0:否 1:是];comment:是否自动升级[0:否 1:是];"
	IsAuto int32 `protobuf:"varint,112,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	// @inject_tag: json:"upgradeDesc" gorm:"default:升级文案（中文）;comment:升级文案（中文）;size:300;"
	UpgradeDesc string `protobuf:"bytes,113,opt,name=upgradeDesc,proto3" json:"upgradeDesc,omitempty"`
	// @inject_tag: json:"upgradeDescEn" gorm:"default:升级文案（英文）;comment:升级文案（英文）;size:300;"
	UpgradeDescEn string `protobuf:"bytes,114,opt,name=upgradeDescEn,proto3" json:"upgradeDescEn,omitempty"`
	// @inject_tag: json:"autoStartAt" gorm:"default:自动升级开始时间;comment:自动升级开始时间;"
	AutoStartAt string `protobuf:"bytes,115,opt,name=autoStartAt,proto3" json:"autoStartAt,omitempty"`
	// @inject_tag: json:"autoEndAt" gorm:"default:自动升级结束时间;comment:自动升级结束时间;"
	AutoEndAt string `protobuf:"bytes,116,opt,name=autoEndAt,proto3" json:"autoEndAt,omitempty"`
	// @inject_tag: json:"specifiedVersionMode" gorm:"default:指定升级版本（模式选择 1全部版本 2指定版本）;comment:指定升级版本（模式选择 1全部版本 2指定版本）;size:20;"
	SpecifiedVersionMode int32 `protobuf:"varint,117,opt,name=specifiedVersionMode,proto3" json:"specifiedVersionMode,omitempty"`
	// @inject_tag: json:"specifiedVersion" gorm:"default:指定升级版本;comment:指定升级版本;size:20;"
	SpecifiedVersion string `protobuf:"bytes,118,opt,name=specifiedVersion,proto3" json:"specifiedVersion,omitempty"`
	// @inject_tag: json:"specifiedAreaMode" gorm:"default:指定升级区域（模式选择 1全部区域 2指定区域）;comment:指定升级区域（模式选择 1全部区域 2指定区域）;size:20;"
	SpecifiedAreaMode int32 `protobuf:"varint,119,opt,name=specifiedAreaMode,proto3" json:"specifiedAreaMode,omitempty"`
	// @inject_tag: json:"specifiedArea" gorm:"default:指定升级区域;comment:指定升级区域;size:20;"
	SpecifiedArea string `protobuf:"bytes,120,opt,name=specifiedArea,proto3" json:"specifiedArea,omitempty"`
	// @inject_tag: json:"md5" gorm:"default:包MD5值;comment:包MD5值;size:100;"
	Md5 string `protobuf:"bytes,121,opt,name=md5,proto3" json:"md5,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,122,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,123,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,124,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,125,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,126,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
	TenantId         string `protobuf:"bytes,127,opt,name=tenantId,proto3" json:"tenantId,omitempty"` // 固件名称
	FirmwareName     string `protobuf:"bytes,128,opt,name=firmwareName,proto3" json:"firmwareName,omitempty"`
	IsCustomFirmware int32  `protobuf:"varint,129,opt,name=isCustomFirmware,proto3" json:"isCustomFirmware,omitempty"` //是否自定义固件
}

func (x *OpmOtaPkgFilter) Reset() {
	*x = OpmOtaPkgFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkgFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkgFilter) ProtoMessage() {}

func (x *OpmOtaPkgFilter) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkgFilter.ProtoReflect.Descriptor instead.
func (*OpmOtaPkgFilter) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{1}
}

func (x *OpmOtaPkgFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetFirmwareId() int64 {
	if x != nil {
		return x.FirmwareId
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetFirmwareFlag() string {
	if x != nil {
		return x.FirmwareFlag
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetFirmwareType() int32 {
	if x != nil {
		return x.FirmwareType
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetUpgradeMode() int32 {
	if x != nil {
		return x.UpgradeMode
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetIsAuto() int32 {
	if x != nil {
		return x.IsAuto
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetUpgradeDesc() string {
	if x != nil {
		return x.UpgradeDesc
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetUpgradeDescEn() string {
	if x != nil {
		return x.UpgradeDescEn
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetAutoStartAt() string {
	if x != nil {
		return x.AutoStartAt
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetAutoEndAt() string {
	if x != nil {
		return x.AutoEndAt
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetSpecifiedVersionMode() int32 {
	if x != nil {
		return x.SpecifiedVersionMode
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetSpecifiedVersion() string {
	if x != nil {
		return x.SpecifiedVersion
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetSpecifiedAreaMode() int32 {
	if x != nil {
		return x.SpecifiedAreaMode
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetSpecifiedArea() string {
	if x != nil {
		return x.SpecifiedArea
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *OpmOtaPkgFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpmOtaPkgFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpmOtaPkgFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpmOtaPkgFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetFirmwareName() string {
	if x != nil {
		return x.FirmwareName
	}
	return ""
}

func (x *OpmOtaPkgFilter) GetIsCustomFirmware() int32 {
	if x != nil {
		return x.IsCustomFirmware
	}
	return 0
}

type OpmOtaPkgListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *OpmOtaPkg `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64      `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64      `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string     `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string     `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string     `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *OpmOtaPkgListRequest) Reset() {
	*x = OpmOtaPkgListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkgListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkgListRequest) ProtoMessage() {}

func (x *OpmOtaPkgListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkgListRequest.ProtoReflect.Descriptor instead.
func (*OpmOtaPkgListRequest) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{2}
}

func (x *OpmOtaPkgListRequest) GetQuery() *OpmOtaPkg {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *OpmOtaPkgListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OpmOtaPkgListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OpmOtaPkgListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OpmOtaPkgListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *OpmOtaPkgListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type OpmOtaPkgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64        `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OpmOtaPkg `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmOtaPkgResponse) Reset() {
	*x = OpmOtaPkgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkgResponse) ProtoMessage() {}

func (x *OpmOtaPkgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkgResponse.ProtoReflect.Descriptor instead.
func (*OpmOtaPkgResponse) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{3}
}

func (x *OpmOtaPkgResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpmOtaPkgResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpmOtaPkgResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpmOtaPkgResponse) GetData() []*OpmOtaPkg {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpmOtaPkgUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string   `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *OpmOtaPkg `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmOtaPkgUpdateFieldsRequest) Reset() {
	*x = OpmOtaPkgUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkgUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkgUpdateFieldsRequest) ProtoMessage() {}

func (x *OpmOtaPkgUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkgUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*OpmOtaPkgUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{4}
}

func (x *OpmOtaPkgUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *OpmOtaPkgUpdateFieldsRequest) GetData() *OpmOtaPkg {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type OpmOtaPkgPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpmOtaPkgPrimarykey) Reset() {
	*x = OpmOtaPkgPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkgPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkgPrimarykey) ProtoMessage() {}

func (x *OpmOtaPkgPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkgPrimarykey.ProtoReflect.Descriptor instead.
func (*OpmOtaPkgPrimarykey) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{5}
}

func (x *OpmOtaPkgPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpmOtaPkgBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*OpmOtaPkgPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *OpmOtaPkgBatchDeleteRequest) Reset() {
	*x = OpmOtaPkgBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmOtaPkgBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmOtaPkgBatchDeleteRequest) ProtoMessage() {}

func (x *OpmOtaPkgBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmOtaPkgBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpmOtaPkgBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{6}
}

func (x *OpmOtaPkgBatchDeleteRequest) GetKeys() []*OpmOtaPkgPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type SetOtaPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtaPkgId int64          `protobuf:"varint,101,opt,name=otaPkgId,proto3" json:"otaPkgId,omitempty"`
	Publish  *OpmOtaPublish `protobuf:"bytes,102,opt,name=publish,proto3" json:"publish,omitempty"`
}

func (x *SetOtaPublishRequest) Reset() {
	*x = SetOtaPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOtaPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOtaPublishRequest) ProtoMessage() {}

func (x *SetOtaPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOtaPublishRequest.ProtoReflect.Descriptor instead.
func (*SetOtaPublishRequest) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{7}
}

func (x *SetOtaPublishRequest) GetOtaPkgId() int64 {
	if x != nil {
		return x.OtaPkgId
	}
	return 0
}

func (x *SetOtaPublishRequest) GetPublish() *OpmOtaPublish {
	if x != nil {
		return x.Publish
	}
	return nil
}

type ProductOtaVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  int64  `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductKey string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	ModuleId   int64  `protobuf:"varint,103,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	FirmwareId int64  `protobuf:"varint,104,opt,name=firmwareId,proto3" json:"firmwareId,omitempty"`
}

func (x *ProductOtaVersionRequest) Reset() {
	*x = ProductOtaVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOtaVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOtaVersionRequest) ProtoMessage() {}

func (x *ProductOtaVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOtaVersionRequest.ProtoReflect.Descriptor instead.
func (*ProductOtaVersionRequest) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{8}
}

func (x *ProductOtaVersionRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductOtaVersionRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *ProductOtaVersionRequest) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *ProductOtaVersionRequest) GetFirmwareId() int64 {
	if x != nil {
		return x.FirmwareId
	}
	return 0
}

type ProductOtaVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message  string   `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Versions []string `protobuf:"bytes,103,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ProductOtaVersionResponse) Reset() {
	*x = ProductOtaVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOtaVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOtaVersionResponse) ProtoMessage() {}

func (x *ProductOtaVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOtaVersionResponse.ProtoReflect.Descriptor instead.
func (*ProductOtaVersionResponse) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{9}
}

func (x *ProductOtaVersionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductOtaVersionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProductOtaVersionResponse) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ProductOtaAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  int64  `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductKey string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	ModuleId   int64  `protobuf:"varint,103,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	FirmwareId int64  `protobuf:"varint,104,opt,name=firmwareId,proto3" json:"firmwareId,omitempty"`
}

func (x *ProductOtaAreaRequest) Reset() {
	*x = ProductOtaAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOtaAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOtaAreaRequest) ProtoMessage() {}

func (x *ProductOtaAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOtaAreaRequest.ProtoReflect.Descriptor instead.
func (*ProductOtaAreaRequest) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{10}
}

func (x *ProductOtaAreaRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductOtaAreaRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *ProductOtaAreaRequest) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *ProductOtaAreaRequest) GetFirmwareId() int64 {
	if x != nil {
		return x.FirmwareId
	}
	return 0
}

type ProductOtaAreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Areas   []*ProductOtaAreaItem `protobuf:"bytes,103,rep,name=areas,proto3" json:"areas,omitempty"`
}

func (x *ProductOtaAreaResponse) Reset() {
	*x = ProductOtaAreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOtaAreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOtaAreaResponse) ProtoMessage() {}

func (x *ProductOtaAreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOtaAreaResponse.ProtoReflect.Descriptor instead.
func (*ProductOtaAreaResponse) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{11}
}

func (x *ProductOtaAreaResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductOtaAreaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProductOtaAreaResponse) GetAreas() []*ProductOtaAreaItem {
	if x != nil {
		return x.Areas
	}
	return nil
}

type ProductOtaAreaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,101,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,102,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProductOtaAreaItem) Reset() {
	*x = ProductOtaAreaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_ota_pkg_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductOtaAreaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductOtaAreaItem) ProtoMessage() {}

func (x *ProductOtaAreaItem) ProtoReflect() protoreflect.Message {
	mi := &file_opm_ota_pkg_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductOtaAreaItem.ProtoReflect.Descriptor instead.
func (*ProductOtaAreaItem) Descriptor() ([]byte, []int) {
	return file_opm_ota_pkg_model_proto_rawDescGZIP(), []int{12}
}

func (x *ProductOtaAreaItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProductOtaAreaItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_opm_ota_pkg_model_proto protoreflect.FileDescriptor

var file_opm_ota_pkg_model_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6f, 0x70, 0x6d, 0x5f, 0x6f, 0x74, 0x61, 0x5f, 0x70, 0x6b, 0x67, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6f, 0x70, 0x6d, 0x5f, 0x6f, 0x74, 0x61, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x09, 0x0a, 0x09, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50,
	0x6b, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x70, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x45, 0x6e, 0x18, 0x72, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x45, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18,
	0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18,
	0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x41, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x41, 0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x79, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x7f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x80, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x45, 0x0a, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x82, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x10, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x12, 0x25, 0x0a, 0x0d, 0x69, 0x73, 0x4d, 0x75, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x75, 0x73, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x9d, 0x08,
	0x0a, 0x0f, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x6b, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49,
	0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x70, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x45, 0x6e, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x45, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x74,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x32, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x18, 0x78,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41,
	0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x7b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x7c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x7f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x80, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x10, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x73, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x22, 0xc8, 0x01,
	0x0a, 0x14, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x6b, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x6b, 0x67, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x7f, 0x0a, 0x11, 0x4f, 0x70, 0x6d, 0x4f,
	0x74, 0x61, 0x50, 0x6b, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61,
	0x50, 0x6b, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1c, 0x4f, 0x70, 0x6d,
	0x4f, 0x74, 0x61, 0x50, 0x6b, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61,
	0x50, 0x6b, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x13, 0x4f, 0x70, 0x6d,
	0x4f, 0x74, 0x61, 0x50, 0x6b, 0x67, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4f, 0x0a, 0x1b, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x6b, 0x67, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x6b,
	0x67, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0x64, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4f, 0x74, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x74, 0x61,
	0x50, 0x6b, 0x67, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x74, 0x61,
	0x50, 0x6b, 0x67, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x70, 0x6d, 0x4f, 0x74, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x07,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4f, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22, 0x65,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4f, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4f, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x61,
	0x72, 0x65, 0x61, 0x73, 0x22, 0x3c, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opm_ota_pkg_model_proto_rawDescOnce sync.Once
	file_opm_ota_pkg_model_proto_rawDescData = file_opm_ota_pkg_model_proto_rawDesc
)

func file_opm_ota_pkg_model_proto_rawDescGZIP() []byte {
	file_opm_ota_pkg_model_proto_rawDescOnce.Do(func() {
		file_opm_ota_pkg_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_opm_ota_pkg_model_proto_rawDescData)
	})
	return file_opm_ota_pkg_model_proto_rawDescData
}

var file_opm_ota_pkg_model_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_opm_ota_pkg_model_proto_goTypes = []interface{}{
	(*OpmOtaPkg)(nil),                    // 0: service.OpmOtaPkg
	(*OpmOtaPkgFilter)(nil),              // 1: service.OpmOtaPkgFilter
	(*OpmOtaPkgListRequest)(nil),         // 2: service.OpmOtaPkgListRequest
	(*OpmOtaPkgResponse)(nil),            // 3: service.OpmOtaPkgResponse
	(*OpmOtaPkgUpdateFieldsRequest)(nil), // 4: service.OpmOtaPkgUpdateFieldsRequest
	(*OpmOtaPkgPrimarykey)(nil),          // 5: service.OpmOtaPkgPrimarykey
	(*OpmOtaPkgBatchDeleteRequest)(nil),  // 6: service.OpmOtaPkgBatchDeleteRequest
	(*SetOtaPublishRequest)(nil),         // 7: service.SetOtaPublishRequest
	(*ProductOtaVersionRequest)(nil),     // 8: service.ProductOtaVersionRequest
	(*ProductOtaVersionResponse)(nil),    // 9: service.ProductOtaVersionResponse
	(*ProductOtaAreaRequest)(nil),        // 10: service.ProductOtaAreaRequest
	(*ProductOtaAreaResponse)(nil),       // 11: service.ProductOtaAreaResponse
	(*ProductOtaAreaItem)(nil),           // 12: service.ProductOtaAreaItem
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
	(*OpmOtaPublish)(nil),                // 14: service.OpmOtaPublish
}
var file_opm_ota_pkg_model_proto_depIdxs = []int32{
	13, // 0: service.OpmOtaPkg.createdAt:type_name -> google.protobuf.Timestamp
	13, // 1: service.OpmOtaPkg.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: service.OpmOtaPkg.deletedAt:type_name -> google.protobuf.Timestamp
	14, // 3: service.OpmOtaPkg.listPublishRecord:type_name -> service.OpmOtaPublish
	13, // 4: service.OpmOtaPkgFilter.createdAt:type_name -> google.protobuf.Timestamp
	13, // 5: service.OpmOtaPkgFilter.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 6: service.OpmOtaPkgFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: service.OpmOtaPkgListRequest.query:type_name -> service.OpmOtaPkg
	0,  // 8: service.OpmOtaPkgResponse.data:type_name -> service.OpmOtaPkg
	0,  // 9: service.OpmOtaPkgUpdateFieldsRequest.data:type_name -> service.OpmOtaPkg
	5,  // 10: service.OpmOtaPkgBatchDeleteRequest.keys:type_name -> service.OpmOtaPkgPrimarykey
	14, // 11: service.SetOtaPublishRequest.publish:type_name -> service.OpmOtaPublish
	12, // 12: service.ProductOtaAreaResponse.areas:type_name -> service.ProductOtaAreaItem
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_opm_ota_pkg_model_proto_init() }
func file_opm_ota_pkg_model_proto_init() {
	if File_opm_ota_pkg_model_proto != nil {
		return
	}
	file_opm_ota_publish_model_gen_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_opm_ota_pkg_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkgFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkgListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkgUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkgPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmOtaPkgBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOtaPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOtaVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOtaVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOtaAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOtaAreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_ota_pkg_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductOtaAreaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opm_ota_pkg_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opm_ota_pkg_model_proto_goTypes,
		DependencyIndexes: file_opm_ota_pkg_model_proto_depIdxs,
		MessageInfos:      file_opm_ota_pkg_model_proto_msgTypes,
	}.Build()
	File_opm_ota_pkg_model_proto = out.File
	file_opm_ota_pkg_model_proto_rawDesc = nil
	file_opm_ota_pkg_model_proto_goTypes = nil
	file_opm_ota_pkg_model_proto_depIdxs = nil
}
