// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: t_pm_thing_model.proto

package protosService

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for TPmThingModel service

func NewTPmThingModelEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for TPmThingModel service

type TPmThingModelService interface {
	UpdateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, opts ...client.CallOption) (*TPmThingModelResponse, error)
	DeleteTPmThingModel(ctx context.Context, in *TPmThingModelRequest, opts ...client.CallOption) (*TPmThingModelResponse, error)
	GetByIdTPmThingModel(ctx context.Context, in *TPmThingModelFilterById, opts ...client.CallOption) (*TPmThingModelResponseObject, error)
	GetTPmThingModel(ctx context.Context, in *TPmThingModelFilter, opts ...client.CallOption) (*TPmThingModelResponseObject, error)
	ListTPmThingModel(ctx context.Context, in *TPmThingModelFilterPage, opts ...client.CallOption) (*TPmThingModelResponseList, error)
	CreateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, opts ...client.CallOption) (*TPmThingModelResponse, error)
}

type tPmThingModelService struct {
	c    client.Client
	name string
}

func NewTPmThingModelService(name string, c client.Client) TPmThingModelService {
	return &tPmThingModelService{
		c:    c,
		name: name,
	}
}

func (c *tPmThingModelService) UpdateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, opts ...client.CallOption) (*TPmThingModelResponse, error) {
	req := c.c.NewRequest(c.name, "TPmThingModel.UpdateTPmThingModel", in)
	out := new(TPmThingModelResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tPmThingModelService) DeleteTPmThingModel(ctx context.Context, in *TPmThingModelRequest, opts ...client.CallOption) (*TPmThingModelResponse, error) {
	req := c.c.NewRequest(c.name, "TPmThingModel.DeleteTPmThingModel", in)
	out := new(TPmThingModelResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tPmThingModelService) GetByIdTPmThingModel(ctx context.Context, in *TPmThingModelFilterById, opts ...client.CallOption) (*TPmThingModelResponseObject, error) {
	req := c.c.NewRequest(c.name, "TPmThingModel.GetByIdTPmThingModel", in)
	out := new(TPmThingModelResponseObject)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tPmThingModelService) GetTPmThingModel(ctx context.Context, in *TPmThingModelFilter, opts ...client.CallOption) (*TPmThingModelResponseObject, error) {
	req := c.c.NewRequest(c.name, "TPmThingModel.GetTPmThingModel", in)
	out := new(TPmThingModelResponseObject)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tPmThingModelService) ListTPmThingModel(ctx context.Context, in *TPmThingModelFilterPage, opts ...client.CallOption) (*TPmThingModelResponseList, error) {
	req := c.c.NewRequest(c.name, "TPmThingModel.ListTPmThingModel", in)
	out := new(TPmThingModelResponseList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tPmThingModelService) CreateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, opts ...client.CallOption) (*TPmThingModelResponse, error) {
	req := c.c.NewRequest(c.name, "TPmThingModel.CreateTPmThingModel", in)
	out := new(TPmThingModelResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TPmThingModel service

type TPmThingModelHandler interface {
	UpdateTPmThingModel(context.Context, *TPmThingModelRequest, *TPmThingModelResponse) error
	DeleteTPmThingModel(context.Context, *TPmThingModelRequest, *TPmThingModelResponse) error
	GetByIdTPmThingModel(context.Context, *TPmThingModelFilterById, *TPmThingModelResponseObject) error
	GetTPmThingModel(context.Context, *TPmThingModelFilter, *TPmThingModelResponseObject) error
	ListTPmThingModel(context.Context, *TPmThingModelFilterPage, *TPmThingModelResponseList) error
	CreateTPmThingModel(context.Context, *TPmThingModelRequest, *TPmThingModelResponse) error
}

func RegisterTPmThingModelHandler(s server.Server, hdlr TPmThingModelHandler, opts ...server.HandlerOption) error {
	type tPmThingModel interface {
		UpdateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, out *TPmThingModelResponse) error
		DeleteTPmThingModel(ctx context.Context, in *TPmThingModelRequest, out *TPmThingModelResponse) error
		GetByIdTPmThingModel(ctx context.Context, in *TPmThingModelFilterById, out *TPmThingModelResponseObject) error
		GetTPmThingModel(ctx context.Context, in *TPmThingModelFilter, out *TPmThingModelResponseObject) error
		ListTPmThingModel(ctx context.Context, in *TPmThingModelFilterPage, out *TPmThingModelResponseList) error
		CreateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, out *TPmThingModelResponse) error
	}
	type TPmThingModel struct {
		tPmThingModel
	}
	h := &tPmThingModelHandler{hdlr}
	return s.Handle(s.NewHandler(&TPmThingModel{h}, opts...))
}

type tPmThingModelHandler struct {
	TPmThingModelHandler
}

func (h *tPmThingModelHandler) UpdateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, out *TPmThingModelResponse) error {
	return h.TPmThingModelHandler.UpdateTPmThingModel(ctx, in, out)
}

func (h *tPmThingModelHandler) DeleteTPmThingModel(ctx context.Context, in *TPmThingModelRequest, out *TPmThingModelResponse) error {
	return h.TPmThingModelHandler.DeleteTPmThingModel(ctx, in, out)
}

func (h *tPmThingModelHandler) GetByIdTPmThingModel(ctx context.Context, in *TPmThingModelFilterById, out *TPmThingModelResponseObject) error {
	return h.TPmThingModelHandler.GetByIdTPmThingModel(ctx, in, out)
}

func (h *tPmThingModelHandler) GetTPmThingModel(ctx context.Context, in *TPmThingModelFilter, out *TPmThingModelResponseObject) error {
	return h.TPmThingModelHandler.GetTPmThingModel(ctx, in, out)
}

func (h *tPmThingModelHandler) ListTPmThingModel(ctx context.Context, in *TPmThingModelFilterPage, out *TPmThingModelResponseList) error {
	return h.TPmThingModelHandler.ListTPmThingModel(ctx, in, out)
}

func (h *tPmThingModelHandler) CreateTPmThingModel(ctx context.Context, in *TPmThingModelRequest, out *TPmThingModelResponse) error {
	return h.TPmThingModelHandler.CreateTPmThingModel(ctx, in, out)
}
