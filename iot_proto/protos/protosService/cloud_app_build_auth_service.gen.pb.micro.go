// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: cloud_app_build_auth_service.gen.proto

package protosService

import (
	// _ "/api"
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for CloudAppBuildAuthService service

func NewCloudAppBuildAuthServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{
		{
			Name:    "CloudAppBuildAuthService.Create",
			Path:    []string{"/v1/cloudAppBuildAuth/create"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.Delete",
			Path:    []string{"/v1/cloudAppBuildAuth/delete"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.DeleteById",
			Path:    []string{"/v1/cloudAppBuildAuth/deleteById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.DeleteByIds",
			Path:    []string{"/v1/cloudAppBuildAuth/DeleteByIds"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.Update",
			Path:    []string{"/v1/cloudAppBuildAuth/update"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.UpdateAll",
			Path:    []string{"/v1/cloudAppBuildAuth/updateAll"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.UpdateFields",
			Path:    []string{"/v1/cloudAppBuildAuth/updateFields"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.FindById",
			Path:    []string{"/v1/cloudAppBuildAuth/findById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.Find",
			Path:    []string{"/v1/cloudAppBuildAuth/find"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "CloudAppBuildAuthService.Lists",
			Path:    []string{"/v1/cloudAppBuildAuth/lists"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
	}
}

// Client API for CloudAppBuildAuthService service

type CloudAppBuildAuthService interface {
	//创建
	Create(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error)
	//匹配多条件删除
	Delete(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error)
	//匹配主键删除,一般是Id
	DeleteById(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error)
	//匹配主键批量删除
	DeleteByIds(ctx context.Context, in *CloudAppBuildAuthBatchDeleteRequest, opts ...client.CallOption) (*Response, error)
	//根据主键更新非空字段
	Update(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error)
	//根据主键更新所有字段
	UpdateAll(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error)
	//根据主键更新指定列
	UpdateFields(ctx context.Context, in *CloudAppBuildAuthUpdateFieldsRequest, opts ...client.CallOption) (*Response, error)
	//根据主键查找,一般是Id,返回单条数据
	FindById(ctx context.Context, in *CloudAppBuildAuthFilter, opts ...client.CallOption) (*CloudAppBuildAuthResponse, error)
	//多条件查找，返回单条数据
	Find(ctx context.Context, in *CloudAppBuildAuthFilter, opts ...client.CallOption) (*CloudAppBuildAuthResponse, error)
	//查找，支持分页，可返回多条数据
	Lists(ctx context.Context, in *CloudAppBuildAuthListRequest, opts ...client.CallOption) (*CloudAppBuildAuthResponse, error)
}

type cloudAppBuildAuthService struct {
	c    client.Client
	name string
}

func NewCloudAppBuildAuthService(name string, c client.Client) CloudAppBuildAuthService {
	return &cloudAppBuildAuthService{
		c:    c,
		name: name,
	}
}

func (c *cloudAppBuildAuthService) Create(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) Delete(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) DeleteById(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.DeleteById", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) DeleteByIds(ctx context.Context, in *CloudAppBuildAuthBatchDeleteRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.DeleteByIds", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) Update(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) UpdateAll(ctx context.Context, in *CloudAppBuildAuth, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.UpdateAll", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) UpdateFields(ctx context.Context, in *CloudAppBuildAuthUpdateFieldsRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.UpdateFields", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) FindById(ctx context.Context, in *CloudAppBuildAuthFilter, opts ...client.CallOption) (*CloudAppBuildAuthResponse, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.FindById", in)
	out := new(CloudAppBuildAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) Find(ctx context.Context, in *CloudAppBuildAuthFilter, opts ...client.CallOption) (*CloudAppBuildAuthResponse, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.Find", in)
	out := new(CloudAppBuildAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudAppBuildAuthService) Lists(ctx context.Context, in *CloudAppBuildAuthListRequest, opts ...client.CallOption) (*CloudAppBuildAuthResponse, error) {
	req := c.c.NewRequest(c.name, "CloudAppBuildAuthService.Lists", in)
	out := new(CloudAppBuildAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CloudAppBuildAuthService service

type CloudAppBuildAuthServiceHandler interface {
	//创建
	Create(context.Context, *CloudAppBuildAuth, *Response) error
	//匹配多条件删除
	Delete(context.Context, *CloudAppBuildAuth, *Response) error
	//匹配主键删除,一般是Id
	DeleteById(context.Context, *CloudAppBuildAuth, *Response) error
	//匹配主键批量删除
	DeleteByIds(context.Context, *CloudAppBuildAuthBatchDeleteRequest, *Response) error
	//根据主键更新非空字段
	Update(context.Context, *CloudAppBuildAuth, *Response) error
	//根据主键更新所有字段
	UpdateAll(context.Context, *CloudAppBuildAuth, *Response) error
	//根据主键更新指定列
	UpdateFields(context.Context, *CloudAppBuildAuthUpdateFieldsRequest, *Response) error
	//根据主键查找,一般是Id,返回单条数据
	FindById(context.Context, *CloudAppBuildAuthFilter, *CloudAppBuildAuthResponse) error
	//多条件查找，返回单条数据
	Find(context.Context, *CloudAppBuildAuthFilter, *CloudAppBuildAuthResponse) error
	//查找，支持分页，可返回多条数据
	Lists(context.Context, *CloudAppBuildAuthListRequest, *CloudAppBuildAuthResponse) error
}

func RegisterCloudAppBuildAuthServiceHandler(s server.Server, hdlr CloudAppBuildAuthServiceHandler, opts ...server.HandlerOption) error {
	type cloudAppBuildAuthService interface {
		Create(ctx context.Context, in *CloudAppBuildAuth, out *Response) error
		Delete(ctx context.Context, in *CloudAppBuildAuth, out *Response) error
		DeleteById(ctx context.Context, in *CloudAppBuildAuth, out *Response) error
		DeleteByIds(ctx context.Context, in *CloudAppBuildAuthBatchDeleteRequest, out *Response) error
		Update(ctx context.Context, in *CloudAppBuildAuth, out *Response) error
		UpdateAll(ctx context.Context, in *CloudAppBuildAuth, out *Response) error
		UpdateFields(ctx context.Context, in *CloudAppBuildAuthUpdateFieldsRequest, out *Response) error
		FindById(ctx context.Context, in *CloudAppBuildAuthFilter, out *CloudAppBuildAuthResponse) error
		Find(ctx context.Context, in *CloudAppBuildAuthFilter, out *CloudAppBuildAuthResponse) error
		Lists(ctx context.Context, in *CloudAppBuildAuthListRequest, out *CloudAppBuildAuthResponse) error
	}
	type CloudAppBuildAuthService struct {
		cloudAppBuildAuthService
	}
	h := &cloudAppBuildAuthServiceHandler{hdlr}
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.Create",
		Path:    []string{"/v1/cloudAppBuildAuth/create"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.Delete",
		Path:    []string{"/v1/cloudAppBuildAuth/delete"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.DeleteById",
		Path:    []string{"/v1/cloudAppBuildAuth/deleteById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.DeleteByIds",
		Path:    []string{"/v1/cloudAppBuildAuth/DeleteByIds"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.Update",
		Path:    []string{"/v1/cloudAppBuildAuth/update"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.UpdateAll",
		Path:    []string{"/v1/cloudAppBuildAuth/updateAll"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.UpdateFields",
		Path:    []string{"/v1/cloudAppBuildAuth/updateFields"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.FindById",
		Path:    []string{"/v1/cloudAppBuildAuth/findById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.Find",
		Path:    []string{"/v1/cloudAppBuildAuth/find"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "CloudAppBuildAuthService.Lists",
		Path:    []string{"/v1/cloudAppBuildAuth/lists"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	return s.Handle(s.NewHandler(&CloudAppBuildAuthService{h}, opts...))
}

type cloudAppBuildAuthServiceHandler struct {
	CloudAppBuildAuthServiceHandler
}

func (h *cloudAppBuildAuthServiceHandler) Create(ctx context.Context, in *CloudAppBuildAuth, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.Create(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) Delete(ctx context.Context, in *CloudAppBuildAuth, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.Delete(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) DeleteById(ctx context.Context, in *CloudAppBuildAuth, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.DeleteById(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) DeleteByIds(ctx context.Context, in *CloudAppBuildAuthBatchDeleteRequest, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.DeleteByIds(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) Update(ctx context.Context, in *CloudAppBuildAuth, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.Update(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) UpdateAll(ctx context.Context, in *CloudAppBuildAuth, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.UpdateAll(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) UpdateFields(ctx context.Context, in *CloudAppBuildAuthUpdateFieldsRequest, out *Response) error {
	return h.CloudAppBuildAuthServiceHandler.UpdateFields(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) FindById(ctx context.Context, in *CloudAppBuildAuthFilter, out *CloudAppBuildAuthResponse) error {
	return h.CloudAppBuildAuthServiceHandler.FindById(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) Find(ctx context.Context, in *CloudAppBuildAuthFilter, out *CloudAppBuildAuthResponse) error {
	return h.CloudAppBuildAuthServiceHandler.Find(ctx, in, out)
}

func (h *cloudAppBuildAuthServiceHandler) Lists(ctx context.Context, in *CloudAppBuildAuthListRequest, out *CloudAppBuildAuthResponse) error {
	return h.CloudAppBuildAuthServiceHandler.Lists(ctx, in, out)
}
