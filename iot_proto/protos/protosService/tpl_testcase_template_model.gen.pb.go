// Code generated by protoc,2022-05-05 19:30:44. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: tpl_testcase_template_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type TplTestcaseTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:测试用例模板主键ID;comment:测试用例模板主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:产品类型编号;comment:产品类型编号;size:19;"
	ProductTypeId int64 `protobuf:"varint,101,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品品类编号;comment:产品品类编号;size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:10;"
	Lang string `protobuf:"bytes,103,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"tplCode" gorm:"default:模板编码;comment:模板编码;size:50;"
	TplCode string `protobuf:"bytes,104,opt,name=tplCode,proto3" json:"tplCode,omitempty"`
	// @inject_tag: json:"tplName" gorm:"default:模板名称;comment:模板名称;size:50;"
	TplName string `protobuf:"bytes,105,opt,name=tplName,proto3" json:"tplName,omitempty"`
	// @inject_tag: json:"tplFile" gorm:"default:测试用例模板文件;comment:测试用例模板文件;size:255;"
	TplFile string `protobuf:"bytes,106,opt,name=tplFile,proto3" json:"tplFile,omitempty"`
	// @inject_tag: json:"tplDesc" gorm:"default:模板描述;comment:模板描述;size:255;"
	TplDesc string `protobuf:"bytes,107,opt,name=tplDesc,proto3" json:"tplDesc,omitempty"`
	// @inject_tag: json:"version" gorm:"default:版本号;comment:版本号;size:20;"
	Version string `protobuf:"bytes,108,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（1启用 0禁用）;comment:状态（1启用 0禁用）;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,110,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,111,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	//文件尺寸
	TplFileSize int32 `protobuf:"varint,115,opt,name=tplFileSize,proto3" json:"tplFileSize,omitempty"`
	//文件名称
	TplFileName string `protobuf:"bytes,116,opt,name=tplFileName,proto3" json:"tplFileName,omitempty"`
	//产品分类名称
	ProductTypeName string `protobuf:"bytes,117,opt,name=productTypeName,proto3" json:"productTypeName,omitempty"`
}

func (x *TplTestcaseTemplate) Reset() {
	*x = TplTestcaseTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplate) ProtoMessage() {}

func (x *TplTestcaseTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplate.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplate) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *TplTestcaseTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TplTestcaseTemplate) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *TplTestcaseTemplate) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *TplTestcaseTemplate) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *TplTestcaseTemplate) GetTplCode() string {
	if x != nil {
		return x.TplCode
	}
	return ""
}

func (x *TplTestcaseTemplate) GetTplName() string {
	if x != nil {
		return x.TplName
	}
	return ""
}

func (x *TplTestcaseTemplate) GetTplFile() string {
	if x != nil {
		return x.TplFile
	}
	return ""
}

func (x *TplTestcaseTemplate) GetTplDesc() string {
	if x != nil {
		return x.TplDesc
	}
	return ""
}

func (x *TplTestcaseTemplate) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TplTestcaseTemplate) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TplTestcaseTemplate) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TplTestcaseTemplate) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TplTestcaseTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TplTestcaseTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TplTestcaseTemplate) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *TplTestcaseTemplate) GetTplFileSize() int32 {
	if x != nil {
		return x.TplFileSize
	}
	return 0
}

func (x *TplTestcaseTemplate) GetTplFileName() string {
	if x != nil {
		return x.TplFileName
	}
	return ""
}

func (x *TplTestcaseTemplate) GetProductTypeName() string {
	if x != nil {
		return x.ProductTypeName
	}
	return ""
}

type TplTestcaseTemplateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:测试用例模板主键ID;comment:测试用例模板主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:产品类型编号;comment:产品类型编号;size:19;"
	ProductTypeId int64 `protobuf:"varint,101,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品品类编号;comment:产品品类编号;size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:10;"
	Lang string `protobuf:"bytes,103,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"tplCode" gorm:"default:模板编码;comment:模板编码;size:50;"
	TplCode string `protobuf:"bytes,104,opt,name=tplCode,proto3" json:"tplCode,omitempty"`
	// @inject_tag: json:"tplName" gorm:"default:模板名称;comment:模板名称;size:50;"
	TplName string `protobuf:"bytes,105,opt,name=tplName,proto3" json:"tplName,omitempty"`
	// @inject_tag: json:"tplFile" gorm:"default:测试用例模板文件;comment:测试用例模板文件;size:255;"
	TplFile string `protobuf:"bytes,106,opt,name=tplFile,proto3" json:"tplFile,omitempty"`
	// @inject_tag: json:"tplDesc" gorm:"default:模板描述;comment:模板描述;size:255;"
	TplDesc string `protobuf:"bytes,107,opt,name=tplDesc,proto3" json:"tplDesc,omitempty"`
	// @inject_tag: json:"version" gorm:"default:版本号;comment:版本号;size:20;"
	Version string `protobuf:"bytes,108,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（1启用 0禁用）;comment:状态（1启用 0禁用）;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,110,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,111,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *TplTestcaseTemplateFilter) Reset() {
	*x = TplTestcaseTemplateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplateFilter) ProtoMessage() {}

func (x *TplTestcaseTemplateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplateFilter.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplateFilter) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *TplTestcaseTemplateFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TplTestcaseTemplateFilter) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *TplTestcaseTemplateFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *TplTestcaseTemplateFilter) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *TplTestcaseTemplateFilter) GetTplCode() string {
	if x != nil {
		return x.TplCode
	}
	return ""
}

func (x *TplTestcaseTemplateFilter) GetTplName() string {
	if x != nil {
		return x.TplName
	}
	return ""
}

func (x *TplTestcaseTemplateFilter) GetTplFile() string {
	if x != nil {
		return x.TplFile
	}
	return ""
}

func (x *TplTestcaseTemplateFilter) GetTplDesc() string {
	if x != nil {
		return x.TplDesc
	}
	return ""
}

func (x *TplTestcaseTemplateFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TplTestcaseTemplateFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TplTestcaseTemplateFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TplTestcaseTemplateFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TplTestcaseTemplateFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TplTestcaseTemplateFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TplTestcaseTemplateFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type TplTestcaseTemplateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *TplTestcaseTemplate `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string               `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string               `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string               `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *TplTestcaseTemplateListRequest) Reset() {
	*x = TplTestcaseTemplateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplateListRequest) ProtoMessage() {}

func (x *TplTestcaseTemplateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplateListRequest.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplateListRequest) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *TplTestcaseTemplateListRequest) GetQuery() *TplTestcaseTemplate {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *TplTestcaseTemplateListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TplTestcaseTemplateListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TplTestcaseTemplateListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *TplTestcaseTemplateListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *TplTestcaseTemplateListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type TplTestcaseTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                  `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*TplTestcaseTemplate `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TplTestcaseTemplateResponse) Reset() {
	*x = TplTestcaseTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplateResponse) ProtoMessage() {}

func (x *TplTestcaseTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplateResponse.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplateResponse) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *TplTestcaseTemplateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TplTestcaseTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TplTestcaseTemplateResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TplTestcaseTemplateResponse) GetData() []*TplTestcaseTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

type TplTestcaseTemplateUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string             `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *TplTestcaseTemplate `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TplTestcaseTemplateUpdateFieldsRequest) Reset() {
	*x = TplTestcaseTemplateUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplateUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplateUpdateFieldsRequest) ProtoMessage() {}

func (x *TplTestcaseTemplateUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplateUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplateUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *TplTestcaseTemplateUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *TplTestcaseTemplateUpdateFieldsRequest) GetData() *TplTestcaseTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type TplTestcaseTemplatePrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TplTestcaseTemplatePrimarykey) Reset() {
	*x = TplTestcaseTemplatePrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplatePrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplatePrimarykey) ProtoMessage() {}

func (x *TplTestcaseTemplatePrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplatePrimarykey.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplatePrimarykey) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *TplTestcaseTemplatePrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TplTestcaseTemplateBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*TplTestcaseTemplatePrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *TplTestcaseTemplateBatchDeleteRequest) Reset() {
	*x = TplTestcaseTemplateBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TplTestcaseTemplateBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TplTestcaseTemplateBatchDeleteRequest) ProtoMessage() {}

func (x *TplTestcaseTemplateBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tpl_testcase_template_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TplTestcaseTemplateBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*TplTestcaseTemplateBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tpl_testcase_template_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *TplTestcaseTemplateBatchDeleteRequest) GetKeys() []*TplTestcaseTemplatePrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_tpl_testcase_template_model_gen_proto protoreflect.FileDescriptor

var file_tpl_testcase_template_model_gen_proto_rawDesc = []byte{
	0x0a, 0x25, 0x74, 0x70, 0x6c, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xef, 0x04, 0x0a, 0x13, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x70, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x70, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x70, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x70, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x70,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x75, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x87, 0x04, 0x0a, 0x19, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x70, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x70, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdc, 0x01,
	0x0a, 0x1e, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x93, 0x01, 0x0a,
	0x1b, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x72, 0x0a, 0x26, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x70, 0x6c,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x1d, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x25, 0x54, 0x70, 0x6c, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f,
	0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tpl_testcase_template_model_gen_proto_rawDescOnce sync.Once
	file_tpl_testcase_template_model_gen_proto_rawDescData = file_tpl_testcase_template_model_gen_proto_rawDesc
)

func file_tpl_testcase_template_model_gen_proto_rawDescGZIP() []byte {
	file_tpl_testcase_template_model_gen_proto_rawDescOnce.Do(func() {
		file_tpl_testcase_template_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_tpl_testcase_template_model_gen_proto_rawDescData)
	})
	return file_tpl_testcase_template_model_gen_proto_rawDescData
}

var file_tpl_testcase_template_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tpl_testcase_template_model_gen_proto_goTypes = []interface{}{
	(*TplTestcaseTemplate)(nil),                    // 0: service.TplTestcaseTemplate
	(*TplTestcaseTemplateFilter)(nil),              // 1: service.TplTestcaseTemplateFilter
	(*TplTestcaseTemplateListRequest)(nil),         // 2: service.TplTestcaseTemplateListRequest
	(*TplTestcaseTemplateResponse)(nil),            // 3: service.TplTestcaseTemplateResponse
	(*TplTestcaseTemplateUpdateFieldsRequest)(nil), // 4: service.TplTestcaseTemplateUpdateFieldsRequest
	(*TplTestcaseTemplatePrimarykey)(nil),          // 5: service.TplTestcaseTemplatePrimarykey
	(*TplTestcaseTemplateBatchDeleteRequest)(nil),  // 6: service.TplTestcaseTemplateBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),                  // 7: google.protobuf.Timestamp
}
var file_tpl_testcase_template_model_gen_proto_depIdxs = []int32{
	7,  // 0: service.TplTestcaseTemplate.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 1: service.TplTestcaseTemplate.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.TplTestcaseTemplate.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.TplTestcaseTemplateFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.TplTestcaseTemplateFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 5: service.TplTestcaseTemplateFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.TplTestcaseTemplateListRequest.query:type_name -> service.TplTestcaseTemplate
	0,  // 7: service.TplTestcaseTemplateResponse.data:type_name -> service.TplTestcaseTemplate
	0,  // 8: service.TplTestcaseTemplateUpdateFieldsRequest.data:type_name -> service.TplTestcaseTemplate
	5,  // 9: service.TplTestcaseTemplateBatchDeleteRequest.keys:type_name -> service.TplTestcaseTemplatePrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_tpl_testcase_template_model_gen_proto_init() }
func file_tpl_testcase_template_model_gen_proto_init() {
	if File_tpl_testcase_template_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tpl_testcase_template_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpl_testcase_template_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpl_testcase_template_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpl_testcase_template_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpl_testcase_template_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplateUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpl_testcase_template_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplatePrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpl_testcase_template_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TplTestcaseTemplateBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tpl_testcase_template_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tpl_testcase_template_model_gen_proto_goTypes,
		DependencyIndexes: file_tpl_testcase_template_model_gen_proto_depIdxs,
		MessageInfos:      file_tpl_testcase_template_model_gen_proto_msgTypes,
	}.Build()
	File_tpl_testcase_template_model_gen_proto = out.File
	file_tpl_testcase_template_model_gen_proto_rawDesc = nil
	file_tpl_testcase_template_model_gen_proto_goTypes = nil
	file_tpl_testcase_template_model_gen_proto_depIdxs = nil
}
