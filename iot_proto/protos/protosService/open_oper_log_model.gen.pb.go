// Code generated by protoc,2022-04-28 10:53:44. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: open_oper_log_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type OpenOperLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"operId" gorm:"primary_key;AUTO_INCREMENT;default:日志主键;comment:日志主键;size:20;"
	OperId int64 `protobuf:"varint,100,opt,name=operId,proto3" json:"operId,omitempty"`
	// @inject_tag: json:"title" gorm:"default:模块标题;comment:模块标题;size:50;"
	Title string `protobuf:"bytes,101,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"businessType" gorm:"default:业务类型（0其它 1新增 2修改 3删除）;comment:业务类型（0其它 1新增 2修改 3删除）;size:10;"
	BusinessType int32 `protobuf:"varint,102,opt,name=businessType,proto3" json:"businessType,omitempty"`
	// @inject_tag: json:"method" gorm:"default:方法名称;comment:方法名称;size:100;"
	Method string `protobuf:"bytes,103,opt,name=method,proto3" json:"method,omitempty"`
	// @inject_tag: json:"requestMethod" gorm:"default:请求方式;comment:请求方式;size:10;"
	RequestMethod string `protobuf:"bytes,104,opt,name=requestMethod,proto3" json:"requestMethod,omitempty"`
	// @inject_tag: json:"operatorType" gorm:"default:操作类别（0其它 1后台用户 2手机端用户）;comment:操作类别（0其它 1后台用户 2手机端用户）;size:10;"
	OperatorType int32 `protobuf:"varint,105,opt,name=operatorType,proto3" json:"operatorType,omitempty"`
	// @inject_tag: json:"operName" gorm:"default:操作人员;comment:操作人员;size:50;"
	OperName string `protobuf:"bytes,106,opt,name=operName,proto3" json:"operName,omitempty"`
	// @inject_tag: json:"deptName" gorm:"default:部门名称;comment:部门名称;size:50;"
	DeptName string `protobuf:"bytes,107,opt,name=deptName,proto3" json:"deptName,omitempty"`
	// @inject_tag: json:"operUrl" gorm:"default:请求URL;comment:请求URL;size:500;"
	OperUrl string `protobuf:"bytes,108,opt,name=operUrl,proto3" json:"operUrl,omitempty"`
	// @inject_tag: json:"operIp" gorm:"default:主机地址;comment:主机地址;size:50;"
	OperIp string `protobuf:"bytes,109,opt,name=operIp,proto3" json:"operIp,omitempty"`
	// @inject_tag: json:"operLocation" gorm:"default:操作地点;comment:操作地点;size:255;"
	OperLocation string `protobuf:"bytes,110,opt,name=operLocation,proto3" json:"operLocation,omitempty"`
	// @inject_tag: json:"operParam" gorm:"default:请求参数;comment:请求参数;"
	OperParam string `protobuf:"bytes,111,opt,name=operParam,proto3" json:"operParam,omitempty"`
	// @inject_tag: json:"jsonResult" gorm:"default:返回参数;comment:返回参数;"
	JsonResult string `protobuf:"bytes,112,opt,name=jsonResult,proto3" json:"jsonResult,omitempty"`
	// @inject_tag: json:"status" gorm:"default:操作状态（0正常 1异常）;comment:操作状态（0正常 1异常）;size:10;"
	Status int32 `protobuf:"varint,113,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"errorMsg" gorm:"default:错误消息;comment:错误消息;size:2000;"
	ErrorMsg string `protobuf:"bytes,114,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	// @inject_tag: json:"operTime" gorm:"default:操作时间;comment:操作时间;"
	OperTime *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=operTime,proto3" json:"operTime,omitempty"`
}

func (x *OpenOperLog) Reset() {
	*x = OpenOperLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLog) ProtoMessage() {}

func (x *OpenOperLog) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLog.ProtoReflect.Descriptor instead.
func (*OpenOperLog) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *OpenOperLog) GetOperId() int64 {
	if x != nil {
		return x.OperId
	}
	return 0
}

func (x *OpenOperLog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OpenOperLog) GetBusinessType() int32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OpenOperLog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *OpenOperLog) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OpenOperLog) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *OpenOperLog) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OpenOperLog) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *OpenOperLog) GetOperUrl() string {
	if x != nil {
		return x.OperUrl
	}
	return ""
}

func (x *OpenOperLog) GetOperIp() string {
	if x != nil {
		return x.OperIp
	}
	return ""
}

func (x *OpenOperLog) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OpenOperLog) GetOperParam() string {
	if x != nil {
		return x.OperParam
	}
	return ""
}

func (x *OpenOperLog) GetJsonResult() string {
	if x != nil {
		return x.JsonResult
	}
	return ""
}

func (x *OpenOperLog) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpenOperLog) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *OpenOperLog) GetOperTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OperTime
	}
	return nil
}

type OpenOperLogFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"operId" gorm:"primary_key;AUTO_INCREMENT;default:日志主键;comment:日志主键;size:20;"
	OperId int64 `protobuf:"varint,100,opt,name=operId,proto3" json:"operId,omitempty"`
	// @inject_tag: json:"title" gorm:"default:模块标题;comment:模块标题;size:50;"
	Title string `protobuf:"bytes,101,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"businessType" gorm:"default:业务类型（0其它 1新增 2修改 3删除）;comment:业务类型（0其它 1新增 2修改 3删除）;size:10;"
	BusinessType int32 `protobuf:"varint,102,opt,name=businessType,proto3" json:"businessType,omitempty"`
	// @inject_tag: json:"method" gorm:"default:方法名称;comment:方法名称;size:100;"
	Method string `protobuf:"bytes,103,opt,name=method,proto3" json:"method,omitempty"`
	// @inject_tag: json:"requestMethod" gorm:"default:请求方式;comment:请求方式;size:10;"
	RequestMethod string `protobuf:"bytes,104,opt,name=requestMethod,proto3" json:"requestMethod,omitempty"`
	// @inject_tag: json:"operatorType" gorm:"default:操作类别（0其它 1后台用户 2手机端用户）;comment:操作类别（0其它 1后台用户 2手机端用户）;size:10;"
	OperatorType int32 `protobuf:"varint,105,opt,name=operatorType,proto3" json:"operatorType,omitempty"`
	// @inject_tag: json:"operName" gorm:"default:操作人员;comment:操作人员;size:50;"
	OperName string `protobuf:"bytes,106,opt,name=operName,proto3" json:"operName,omitempty"`
	// @inject_tag: json:"deptName" gorm:"default:部门名称;comment:部门名称;size:50;"
	DeptName string `protobuf:"bytes,107,opt,name=deptName,proto3" json:"deptName,omitempty"`
	// @inject_tag: json:"operUrl" gorm:"default:请求URL;comment:请求URL;size:500;"
	OperUrl string `protobuf:"bytes,108,opt,name=operUrl,proto3" json:"operUrl,omitempty"`
	// @inject_tag: json:"operIp" gorm:"default:主机地址;comment:主机地址;size:50;"
	OperIp string `protobuf:"bytes,109,opt,name=operIp,proto3" json:"operIp,omitempty"`
	// @inject_tag: json:"operLocation" gorm:"default:操作地点;comment:操作地点;size:255;"
	OperLocation string `protobuf:"bytes,110,opt,name=operLocation,proto3" json:"operLocation,omitempty"`
	// @inject_tag: json:"operParam" gorm:"default:请求参数;comment:请求参数;"
	OperParam string `protobuf:"bytes,111,opt,name=operParam,proto3" json:"operParam,omitempty"`
	// @inject_tag: json:"jsonResult" gorm:"default:返回参数;comment:返回参数;"
	JsonResult string `protobuf:"bytes,112,opt,name=jsonResult,proto3" json:"jsonResult,omitempty"`
	// @inject_tag: json:"status" gorm:"default:操作状态（0正常 1异常）;comment:操作状态（0正常 1异常）;size:10;"
	Status int32 `protobuf:"varint,113,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"errorMsg" gorm:"default:错误消息;comment:错误消息;size:2000;"
	ErrorMsg string `protobuf:"bytes,114,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	// @inject_tag: json:"operTime" gorm:"default:操作时间;comment:操作时间;"
	OperTime *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=operTime,proto3" json:"operTime,omitempty"`
}

func (x *OpenOperLogFilter) Reset() {
	*x = OpenOperLogFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLogFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLogFilter) ProtoMessage() {}

func (x *OpenOperLogFilter) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLogFilter.ProtoReflect.Descriptor instead.
func (*OpenOperLogFilter) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *OpenOperLogFilter) GetOperId() int64 {
	if x != nil {
		return x.OperId
	}
	return 0
}

func (x *OpenOperLogFilter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OpenOperLogFilter) GetBusinessType() int32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OpenOperLogFilter) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *OpenOperLogFilter) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OpenOperLogFilter) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *OpenOperLogFilter) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OpenOperLogFilter) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *OpenOperLogFilter) GetOperUrl() string {
	if x != nil {
		return x.OperUrl
	}
	return ""
}

func (x *OpenOperLogFilter) GetOperIp() string {
	if x != nil {
		return x.OperIp
	}
	return ""
}

func (x *OpenOperLogFilter) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OpenOperLogFilter) GetOperParam() string {
	if x != nil {
		return x.OperParam
	}
	return ""
}

func (x *OpenOperLogFilter) GetJsonResult() string {
	if x != nil {
		return x.JsonResult
	}
	return ""
}

func (x *OpenOperLogFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpenOperLogFilter) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *OpenOperLogFilter) GetOperTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OperTime
	}
	return nil
}

type OpenOperLogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *OpenOperLog `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64        `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64        `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string       `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string       `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *OpenOperLogListRequest) Reset() {
	*x = OpenOperLogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLogListRequest) ProtoMessage() {}

func (x *OpenOperLogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLogListRequest.ProtoReflect.Descriptor instead.
func (*OpenOperLogListRequest) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *OpenOperLogListRequest) GetQuery() *OpenOperLog {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *OpenOperLogListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OpenOperLogListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OpenOperLogListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OpenOperLogListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type OpenOperLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32          `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64          `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OpenOperLog `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenOperLogResponse) Reset() {
	*x = OpenOperLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLogResponse) ProtoMessage() {}

func (x *OpenOperLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLogResponse.ProtoReflect.Descriptor instead.
func (*OpenOperLogResponse) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *OpenOperLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpenOperLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpenOperLogResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpenOperLogResponse) GetData() []*OpenOperLog {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpenOperLogUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string     `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *OpenOperLog `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenOperLogUpdateFieldsRequest) Reset() {
	*x = OpenOperLogUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLogUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLogUpdateFieldsRequest) ProtoMessage() {}

func (x *OpenOperLogUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLogUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*OpenOperLogUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *OpenOperLogUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *OpenOperLogUpdateFieldsRequest) GetData() *OpenOperLog {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type OpenOperLogPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperId int64 `protobuf:"varint,100,opt,name=operId,proto3" json:"operId,omitempty"`
}

func (x *OpenOperLogPrimarykey) Reset() {
	*x = OpenOperLogPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLogPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLogPrimarykey) ProtoMessage() {}

func (x *OpenOperLogPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLogPrimarykey.ProtoReflect.Descriptor instead.
func (*OpenOperLogPrimarykey) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *OpenOperLogPrimarykey) GetOperId() int64 {
	if x != nil {
		return x.OperId
	}
	return 0
}

type OpenOperLogBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*OpenOperLogPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *OpenOperLogBatchDeleteRequest) Reset() {
	*x = OpenOperLogBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_oper_log_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperLogBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperLogBatchDeleteRequest) ProtoMessage() {}

func (x *OpenOperLogBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_open_oper_log_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperLogBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpenOperLogBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_open_oper_log_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *OpenOperLogBatchDeleteRequest) GetKeys() []*OpenOperLogPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_open_oper_log_model_gen_proto protoreflect.FileDescriptor

var file_open_oper_log_model_gen_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x03, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xff, 0x03, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x18, 0x6d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6a,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x36, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62,
	0x0a, 0x1e, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x2f, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1d, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b,
	0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_open_oper_log_model_gen_proto_rawDescOnce sync.Once
	file_open_oper_log_model_gen_proto_rawDescData = file_open_oper_log_model_gen_proto_rawDesc
)

func file_open_oper_log_model_gen_proto_rawDescGZIP() []byte {
	file_open_oper_log_model_gen_proto_rawDescOnce.Do(func() {
		file_open_oper_log_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_open_oper_log_model_gen_proto_rawDescData)
	})
	return file_open_oper_log_model_gen_proto_rawDescData
}

var file_open_oper_log_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_open_oper_log_model_gen_proto_goTypes = []interface{}{
	(*OpenOperLog)(nil),                    // 0: service.OpenOperLog
	(*OpenOperLogFilter)(nil),              // 1: service.OpenOperLogFilter
	(*OpenOperLogListRequest)(nil),         // 2: service.OpenOperLogListRequest
	(*OpenOperLogResponse)(nil),            // 3: service.OpenOperLogResponse
	(*OpenOperLogUpdateFieldsRequest)(nil), // 4: service.OpenOperLogUpdateFieldsRequest
	(*OpenOperLogPrimarykey)(nil),          // 5: service.OpenOperLogPrimarykey
	(*OpenOperLogBatchDeleteRequest)(nil),  // 6: service.OpenOperLogBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),          // 7: google.protobuf.Timestamp
}
var file_open_oper_log_model_gen_proto_depIdxs = []int32{
	7, // 0: service.OpenOperLog.operTime:type_name -> google.protobuf.Timestamp
	7, // 1: service.OpenOperLogFilter.operTime:type_name -> google.protobuf.Timestamp
	0, // 2: service.OpenOperLogListRequest.query:type_name -> service.OpenOperLog
	0, // 3: service.OpenOperLogResponse.data:type_name -> service.OpenOperLog
	0, // 4: service.OpenOperLogUpdateFieldsRequest.data:type_name -> service.OpenOperLog
	5, // 5: service.OpenOperLogBatchDeleteRequest.keys:type_name -> service.OpenOperLogPrimarykey
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_open_oper_log_model_gen_proto_init() }
func file_open_oper_log_model_gen_proto_init() {
	if File_open_oper_log_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_open_oper_log_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_oper_log_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLogFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_oper_log_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_oper_log_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_oper_log_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLogUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_oper_log_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLogPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_oper_log_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperLogBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_open_oper_log_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_open_oper_log_model_gen_proto_goTypes,
		DependencyIndexes: file_open_oper_log_model_gen_proto_depIdxs,
		MessageInfos:      file_open_oper_log_model_gen_proto_msgTypes,
	}.Build()
	File_open_oper_log_model_gen_proto = out.File
	file_open_oper_log_model_gen_proto_rawDesc = nil
	file_open_oper_log_model_gen_proto_goTypes = nil
	file_open_oper_log_model_gen_proto_depIdxs = nil
}
