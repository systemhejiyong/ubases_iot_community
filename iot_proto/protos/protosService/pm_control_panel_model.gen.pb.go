// Code generated by protoc,2022-04-20 16:14:44. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: pm_control_panel_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type PmControlPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID（t_pm_product.id）;comment:产品ID（t_pm_product.id）;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:品类ID（t_pm_product_type.id）;comment:品类ID（t_pm_product_type.id）;size:19;"
	ProductTypeId int64 `protobuf:"varint,102,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"name" gorm:"default:控制面板名称;comment:控制面板名称;size:128;"
	Name string `protobuf:"bytes,103,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:描述;comment:描述;size:200;"
	Desc string `protobuf:"bytes,104,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"tarUrl" gorm:"default:控制面板包地址;comment:控制面板包地址;size:200;"
	TarUrl string `protobuf:"bytes,105,opt,name=tarUrl,proto3" json:"tarUrl,omitempty"`
	// @inject_tag: json:"imageUrl" gorm:"default:预览图地址;comment:预览图地址;size:200;"
	ImageUrl string `protobuf:"bytes,106,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,107,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,109,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *PmControlPanel) Reset() {
	*x = PmControlPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanel) ProtoMessage() {}

func (x *PmControlPanel) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanel.ProtoReflect.Descriptor instead.
func (*PmControlPanel) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *PmControlPanel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmControlPanel) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *PmControlPanel) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *PmControlPanel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PmControlPanel) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PmControlPanel) GetTarUrl() string {
	if x != nil {
		return x.TarUrl
	}
	return ""
}

func (x *PmControlPanel) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PmControlPanel) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *PmControlPanel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmControlPanel) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmControlPanel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmControlPanel) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type PmControlPanelFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID（t_pm_product.id）;comment:产品ID（t_pm_product.id）;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:品类ID（t_pm_product_type.id）;comment:品类ID（t_pm_product_type.id）;size:19;"
	ProductTypeId int64 `protobuf:"varint,102,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"name" gorm:"default:控制面板名称;comment:控制面板名称;size:128;"
	Name string `protobuf:"bytes,103,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:描述;comment:描述;size:200;"
	Desc string `protobuf:"bytes,104,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"tarUrl" gorm:"default:控制面板包地址;comment:控制面板包地址;size:200;"
	TarUrl string `protobuf:"bytes,105,opt,name=tarUrl,proto3" json:"tarUrl,omitempty"`
	// @inject_tag: json:"imageUrl" gorm:"default:预览图地址;comment:预览图地址;size:200;"
	ImageUrl string `protobuf:"bytes,106,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,107,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,109,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *PmControlPanelFilter) Reset() {
	*x = PmControlPanelFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelFilter) ProtoMessage() {}

func (x *PmControlPanelFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelFilter.ProtoReflect.Descriptor instead.
func (*PmControlPanelFilter) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *PmControlPanelFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmControlPanelFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *PmControlPanelFilter) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *PmControlPanelFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PmControlPanelFilter) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PmControlPanelFilter) GetTarUrl() string {
	if x != nil {
		return x.TarUrl
	}
	return ""
}

func (x *PmControlPanelFilter) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PmControlPanelFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *PmControlPanelFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmControlPanelFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmControlPanelFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmControlPanelFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type PmControlPanelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *PmControlPanel `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64           `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64           `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string          `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string          `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *PmControlPanelListRequest) Reset() {
	*x = PmControlPanelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelListRequest) ProtoMessage() {}

func (x *PmControlPanelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelListRequest.ProtoReflect.Descriptor instead.
func (*PmControlPanelListRequest) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *PmControlPanelListRequest) GetQuery() *PmControlPanel {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PmControlPanelListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PmControlPanelListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PmControlPanelListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *PmControlPanelListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type PmControlPanelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64             `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*PmControlPanel `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PmControlPanelResponse) Reset() {
	*x = PmControlPanelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelResponse) ProtoMessage() {}

func (x *PmControlPanelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelResponse.ProtoReflect.Descriptor instead.
func (*PmControlPanelResponse) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *PmControlPanelResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PmControlPanelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PmControlPanelResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PmControlPanelResponse) GetData() []*PmControlPanel {
	if x != nil {
		return x.Data
	}
	return nil
}

type PmControlPanelUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *PmControlPanel `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PmControlPanelUpdateFieldsRequest) Reset() {
	*x = PmControlPanelUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelUpdateFieldsRequest) ProtoMessage() {}

func (x *PmControlPanelUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*PmControlPanelUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *PmControlPanelUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PmControlPanelUpdateFieldsRequest) GetData() *PmControlPanel {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type PmControlPanelPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PmControlPanelPrimarykey) Reset() {
	*x = PmControlPanelPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelPrimarykey) ProtoMessage() {}

func (x *PmControlPanelPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelPrimarykey.ProtoReflect.Descriptor instead.
func (*PmControlPanelPrimarykey) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *PmControlPanelPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PmControlPanelBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*PmControlPanelPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *PmControlPanelBatchDeleteRequest) Reset() {
	*x = PmControlPanelBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_control_panel_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelBatchDeleteRequest) ProtoMessage() {}

func (x *PmControlPanelBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_control_panel_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*PmControlPanelBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pm_control_panel_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *PmControlPanelBatchDeleteRequest) GetKeys() []*PmControlPanelPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_pm_control_panel_model_gen_proto protoreflect.FileDescriptor

var file_pm_control_panel_model_gen_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x6e,
	0x65, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x03, 0x0a,
	0x0e, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb0, 0x03, 0x0a, 0x14, 0x50, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb4, 0x01, 0x0a,
	0x19, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x68, 0x0a, 0x21, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x50, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x20, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pm_control_panel_model_gen_proto_rawDescOnce sync.Once
	file_pm_control_panel_model_gen_proto_rawDescData = file_pm_control_panel_model_gen_proto_rawDesc
)

func file_pm_control_panel_model_gen_proto_rawDescGZIP() []byte {
	file_pm_control_panel_model_gen_proto_rawDescOnce.Do(func() {
		file_pm_control_panel_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_pm_control_panel_model_gen_proto_rawDescData)
	})
	return file_pm_control_panel_model_gen_proto_rawDescData
}

var file_pm_control_panel_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pm_control_panel_model_gen_proto_goTypes = []interface{}{
	(*PmControlPanel)(nil),                    // 0: service.PmControlPanel
	(*PmControlPanelFilter)(nil),              // 1: service.PmControlPanelFilter
	(*PmControlPanelListRequest)(nil),         // 2: service.PmControlPanelListRequest
	(*PmControlPanelResponse)(nil),            // 3: service.PmControlPanelResponse
	(*PmControlPanelUpdateFieldsRequest)(nil), // 4: service.PmControlPanelUpdateFieldsRequest
	(*PmControlPanelPrimarykey)(nil),          // 5: service.PmControlPanelPrimarykey
	(*PmControlPanelBatchDeleteRequest)(nil),  // 6: service.PmControlPanelBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),             // 7: google.protobuf.Timestamp
}
var file_pm_control_panel_model_gen_proto_depIdxs = []int32{
	7,  // 0: service.PmControlPanel.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 1: service.PmControlPanel.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.PmControlPanel.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.PmControlPanelFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.PmControlPanelFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 5: service.PmControlPanelFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.PmControlPanelListRequest.query:type_name -> service.PmControlPanel
	0,  // 7: service.PmControlPanelResponse.data:type_name -> service.PmControlPanel
	0,  // 8: service.PmControlPanelUpdateFieldsRequest.data:type_name -> service.PmControlPanel
	5,  // 9: service.PmControlPanelBatchDeleteRequest.keys:type_name -> service.PmControlPanelPrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pm_control_panel_model_gen_proto_init() }
func file_pm_control_panel_model_gen_proto_init() {
	if File_pm_control_panel_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pm_control_panel_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_control_panel_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_control_panel_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_control_panel_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_control_panel_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_control_panel_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_control_panel_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pm_control_panel_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pm_control_panel_model_gen_proto_goTypes,
		DependencyIndexes: file_pm_control_panel_model_gen_proto_depIdxs,
		MessageInfos:      file_pm_control_panel_model_gen_proto_msgTypes,
	}.Build()
	File_pm_control_panel_model_gen_proto = out.File
	file_pm_control_panel_model_gen_proto_rawDesc = nil
	file_pm_control_panel_model_gen_proto_goTypes = nil
	file_pm_control_panel_model_gen_proto_depIdxs = nil
}
