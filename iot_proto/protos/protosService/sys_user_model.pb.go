// Code generated by protoc,2022-04-18 19:12:10. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sys_user_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type SysUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"primary_key;AUTO_INCREMENT;default:;comment:;size:20;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:60;"
	UserName string `protobuf:"bytes,101,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"mobile" gorm:"default:中国手机不带国家代码，国际手机号格式为：国家代码-手机号;comment:中国手机不带国家代码，国际手机号格式为：国家代码-手机号;size:20;"
	Mobile string `protobuf:"bytes,102,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// @inject_tag: json:"userNickname" gorm:"default:用户昵称;comment:用户昵称;size:50;"
	UserNickname string `protobuf:"bytes,103,opt,name=userNickname,proto3" json:"userNickname,omitempty"`
	// @inject_tag: json:"birthday" gorm:"default:生日;comment:生日;size:10;"
	Birthday int32 `protobuf:"varint,104,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// @inject_tag: json:"userPassword" gorm:"default:登录密码;cmf_password加密;comment:登录密码;cmf_password加密;size:255;"
	UserPassword string `protobuf:"bytes,105,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
	// @inject_tag: json:"userSalt" gorm:"default:加密盐;comment:加密盐;"
	UserSalt string `protobuf:"bytes,106,opt,name=userSalt,proto3" json:"userSalt,omitempty"`
	// @inject_tag: json:"userStatus" gorm:"default:用户状态;0:禁用,1:正常,2:未验证;comment:用户状态;0:禁用,1:正常,2:未验证;"
	UserStatus int32 `protobuf:"varint,107,opt,name=userStatus,proto3" json:"userStatus,omitempty"`
	// @inject_tag: json:"userEmail" gorm:"default:用户登录邮箱;comment:用户登录邮箱;size:100;"
	UserEmail string `protobuf:"bytes,108,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	// @inject_tag: json:"sex" gorm:"default:性别;0:保密,1:男,2:女;comment:性别;0:保密,1:男,2:女;"
	Sex int32 `protobuf:"varint,109,opt,name=sex,proto3" json:"sex,omitempty"`
	// @inject_tag: json:"avatar" gorm:"default:用户头像;comment:用户头像;size:255;"
	Avatar string `protobuf:"bytes,110,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// @inject_tag: json:"deptId" gorm:"default:部门id;comment:部门id;size:20;"
	DeptId int64 `protobuf:"varint,111,opt,name=deptId,proto3" json:"deptId,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:255;"
	Remark string `protobuf:"bytes,112,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"isAdmin" gorm:"default:是否后台管理员 1 是  0   否;comment:是否后台管理员 1 是  0   否;"
	IsAdmin int32 `protobuf:"varint,113,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	// @inject_tag: json:"address" gorm:"default:联系地址;comment:联系地址;size:255;"
	Address string `protobuf:"bytes,114,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"describe" gorm:"default: 描述信息;comment: 描述信息;size:255;"
	Describe string `protobuf:"bytes,115,opt,name=describe,proto3" json:"describe,omitempty"`
	// @inject_tag: json:"phoneNum" gorm:"default:联系电话;comment:联系电话;size:20;"
	PhoneNum string `protobuf:"bytes,116,opt,name=phoneNum,proto3" json:"phoneNum,omitempty"`
	// @inject_tag: json:"lastLoginIp" gorm:"default:最后登录ip;comment:最后登录ip;size:15;"
	LastLoginIp string `protobuf:"bytes,117,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	// @inject_tag: json:"lastLoginTime" gorm:"default:最后登录时间;comment:最后登录时间;"
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,118,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,119,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:更新时间;comment:更新时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,120,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,121,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"accountType" gorm:"default:账号类型（=1 平台用户 =2 开发者用户）;comment:账号类型（=1 平台用户 =2 开发者用户）;size:10;"
	AccountType int32 `protobuf:"varint,122,opt,name=accountType,proto3" json:"accountType,omitempty"`
	//职位编号
	PostId int64 `protobuf:"varint,123,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *SysUser) Reset() {
	*x = SysUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUser) ProtoMessage() {}

func (x *SysUser) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUser.ProtoReflect.Descriptor instead.
func (*SysUser) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{0}
}

func (x *SysUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysUser) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *SysUser) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *SysUser) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *SysUser) GetUserSalt() string {
	if x != nil {
		return x.UserSalt
	}
	return ""
}

func (x *SysUser) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *SysUser) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *SysUser) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SysUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUser) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUser) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUser) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *SysUser) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SysUser) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *SysUser) GetPhoneNum() string {
	if x != nil {
		return x.PhoneNum
	}
	return ""
}

func (x *SysUser) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *SysUser) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *SysUser) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysUser) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysUser) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *SysUser) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *SysUser) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type SysUserFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"primary_key;AUTO_INCREMENT;default:;comment:;size:20;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:60;"
	UserName string `protobuf:"bytes,101,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"mobile" gorm:"default:中国手机不带国家代码，国际手机号格式为：国家代码-手机号;comment:中国手机不带国家代码，国际手机号格式为：国家代码-手机号;size:20;"
	Mobile string `protobuf:"bytes,102,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// @inject_tag: json:"userNickname" gorm:"default:用户昵称;comment:用户昵称;size:50;"
	UserNickname string `protobuf:"bytes,103,opt,name=userNickname,proto3" json:"userNickname,omitempty"`
	// @inject_tag: json:"birthday" gorm:"default:生日;comment:生日;size:10;"
	Birthday int32 `protobuf:"varint,104,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// @inject_tag: json:"userPassword" gorm:"default:登录密码;cmf_password加密;comment:登录密码;cmf_password加密;size:255;"
	UserPassword string `protobuf:"bytes,105,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
	// @inject_tag: json:"userSalt" gorm:"default:加密盐;comment:加密盐;"
	UserSalt string `protobuf:"bytes,106,opt,name=userSalt,proto3" json:"userSalt,omitempty"`
	// @inject_tag: json:"userStatus" gorm:"default:用户状态;0:禁用,1:正常,2:未验证;comment:用户状态;0:禁用,1:正常,2:未验证;"
	UserStatus int32 `protobuf:"varint,107,opt,name=userStatus,proto3" json:"userStatus,omitempty"`
	// @inject_tag: json:"userEmail" gorm:"default:用户登录邮箱;comment:用户登录邮箱;size:100;"
	UserEmail string `protobuf:"bytes,108,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	// @inject_tag: json:"sex" gorm:"default:性别;0:保密,1:男,2:女;comment:性别;0:保密,1:男,2:女;"
	Sex int32 `protobuf:"varint,109,opt,name=sex,proto3" json:"sex,omitempty"`
	// @inject_tag: json:"avatar" gorm:"default:用户头像;comment:用户头像;size:255;"
	Avatar string `protobuf:"bytes,110,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// @inject_tag: json:"deptId" gorm:"default:部门id;comment:部门id;size:20;"
	DeptId int64 `protobuf:"varint,111,opt,name=deptId,proto3" json:"deptId,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:255;"
	Remark string `protobuf:"bytes,112,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"isAdmin" gorm:"default:是否后台管理员 1 是  0   否;comment:是否后台管理员 1 是  0   否;"
	IsAdmin int32 `protobuf:"varint,113,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	// @inject_tag: json:"address" gorm:"default:联系地址;comment:联系地址;size:255;"
	Address string `protobuf:"bytes,114,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"describe" gorm:"default: 描述信息;comment: 描述信息;size:255;"
	Describe string `protobuf:"bytes,115,opt,name=describe,proto3" json:"describe,omitempty"`
	// @inject_tag: json:"phoneNum" gorm:"default:联系电话;comment:联系电话;size:20;"
	PhoneNum string `protobuf:"bytes,116,opt,name=phoneNum,proto3" json:"phoneNum,omitempty"`
	// @inject_tag: json:"lastLoginIp" gorm:"default:最后登录ip;comment:最后登录ip;size:15;"
	LastLoginIp string `protobuf:"bytes,117,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	// @inject_tag: json:"lastLoginTime" gorm:"default:最后登录时间;comment:最后登录时间;"
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,118,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,119,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:更新时间;comment:更新时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,120,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,121,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"accountType" gorm:"default:账号类型（=1 平台用户 =2 开发者用户）;comment:账号类型（=1 平台用户 =2 开发者用户）;size:10;"
	AccountType int32 `protobuf:"varint,122,opt,name=accountType,proto3" json:"accountType,omitempty"`
}

func (x *SysUserFilter) Reset() {
	*x = SysUserFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserFilter) ProtoMessage() {}

func (x *SysUserFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserFilter.ProtoReflect.Descriptor instead.
func (*SysUserFilter) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{1}
}

func (x *SysUserFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUserFilter) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysUserFilter) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SysUserFilter) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *SysUserFilter) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *SysUserFilter) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *SysUserFilter) GetUserSalt() string {
	if x != nil {
		return x.UserSalt
	}
	return ""
}

func (x *SysUserFilter) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *SysUserFilter) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *SysUserFilter) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SysUserFilter) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUserFilter) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUserFilter) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUserFilter) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *SysUserFilter) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SysUserFilter) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *SysUserFilter) GetPhoneNum() string {
	if x != nil {
		return x.PhoneNum
	}
	return ""
}

func (x *SysUserFilter) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *SysUserFilter) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *SysUserFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysUserFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysUserFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *SysUserFilter) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

type SysUserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *SysUser `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64    `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64    `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string   `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string   `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string   `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	BeginTime string   `protobuf:"bytes,107,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime   string   `protobuf:"bytes,108,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *SysUserListRequest) Reset() {
	*x = SysUserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserListRequest) ProtoMessage() {}

func (x *SysUserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserListRequest.ProtoReflect.Descriptor instead.
func (*SysUserListRequest) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{2}
}

func (x *SysUserListRequest) GetQuery() *SysUser {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SysUserListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SysUserListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SysUserListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *SysUserListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *SysUserListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *SysUserListRequest) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *SysUserListRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type SysUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64      `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*SysUser `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SysUserResponse) Reset() {
	*x = SysUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserResponse) ProtoMessage() {}

func (x *SysUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserResponse.ProtoReflect.Descriptor instead.
func (*SysUserResponse) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{3}
}

func (x *SysUserResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysUserResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysUserResponse) GetData() []*SysUser {
	if x != nil {
		return x.Data
	}
	return nil
}

type SysUserUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *SysUser `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SysUserUpdateFieldsRequest) Reset() {
	*x = SysUserUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserUpdateFieldsRequest) ProtoMessage() {}

func (x *SysUserUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*SysUserUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{4}
}

func (x *SysUserUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SysUserUpdateFieldsRequest) GetData() *SysUser {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type SysUserPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysUserPrimarykey) Reset() {
	*x = SysUserPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserPrimarykey) ProtoMessage() {}

func (x *SysUserPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserPrimarykey.ProtoReflect.Descriptor instead.
func (*SysUserPrimarykey) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{5}
}

func (x *SysUserPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SysUserBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*SysUserPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *SysUserBatchDeleteRequest) Reset() {
	*x = SysUserBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_user_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserBatchDeleteRequest) ProtoMessage() {}

func (x *SysUserBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_user_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*SysUserBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_sys_user_model_proto_rawDescGZIP(), []int{6}
}

func (x *SysUserBatchDeleteRequest) GetKeys() []*SysUserPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_sys_user_model_proto protoreflect.FileDescriptor

var file_sys_user_model_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9d, 0x06, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x74,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x6c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x70, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x8b, 0x06, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x6d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x40, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x76, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x77, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfc,
	0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7b, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x1a, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x19, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b,
	0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sys_user_model_proto_rawDescOnce sync.Once
	file_sys_user_model_proto_rawDescData = file_sys_user_model_proto_rawDesc
)

func file_sys_user_model_proto_rawDescGZIP() []byte {
	file_sys_user_model_proto_rawDescOnce.Do(func() {
		file_sys_user_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_user_model_proto_rawDescData)
	})
	return file_sys_user_model_proto_rawDescData
}

var file_sys_user_model_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sys_user_model_proto_goTypes = []interface{}{
	(*SysUser)(nil),                    // 0: service.SysUser
	(*SysUserFilter)(nil),              // 1: service.SysUserFilter
	(*SysUserListRequest)(nil),         // 2: service.SysUserListRequest
	(*SysUserResponse)(nil),            // 3: service.SysUserResponse
	(*SysUserUpdateFieldsRequest)(nil), // 4: service.SysUserUpdateFieldsRequest
	(*SysUserPrimarykey)(nil),          // 5: service.SysUserPrimarykey
	(*SysUserBatchDeleteRequest)(nil),  // 6: service.SysUserBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),      // 7: google.protobuf.Timestamp
}
var file_sys_user_model_proto_depIdxs = []int32{
	7,  // 0: service.SysUser.lastLoginTime:type_name -> google.protobuf.Timestamp
	7,  // 1: service.SysUser.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.SysUser.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.SysUser.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.SysUserFilter.lastLoginTime:type_name -> google.protobuf.Timestamp
	7,  // 5: service.SysUserFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 6: service.SysUserFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 7: service.SysUserFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 8: service.SysUserListRequest.query:type_name -> service.SysUser
	0,  // 9: service.SysUserResponse.data:type_name -> service.SysUser
	0,  // 10: service.SysUserUpdateFieldsRequest.data:type_name -> service.SysUser
	5,  // 11: service.SysUserBatchDeleteRequest.keys:type_name -> service.SysUserPrimarykey
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sys_user_model_proto_init() }
func file_sys_user_model_proto_init() {
	if File_sys_user_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_user_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_user_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_user_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_user_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_user_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_user_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_user_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_user_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sys_user_model_proto_goTypes,
		DependencyIndexes: file_sys_user_model_proto_depIdxs,
		MessageInfos:      file_sys_user_model_proto_msgTypes,
	}.Build()
	File_sys_user_model_proto = out.File
	file_sys_user_model_proto_rawDesc = nil
	file_sys_user_model_proto_goTypes = nil
	file_sys_user_model_proto_depIdxs = nil
}
