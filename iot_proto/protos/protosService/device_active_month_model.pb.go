// Code generated by protoc,2022-08-06 09:26:20. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: device_active_month_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type DeviceActiveMonth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dataTime" gorm:"default:月;comment:月;"
	DataTime *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=dataTime,proto3" json:"dataTime,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户ID;comment:租户ID;size:20;"
	TenantId string `protobuf:"bytes,101,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:20;"
	ProductKey string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"activeSum" gorm:"default:激活设备数;comment:激活设备数;size:19;"
	ActiveSum int64 `protobuf:"varint,103,opt,name=activeSum,proto3" json:"activeSum,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:;comment:;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DeviceActiveMonth) Reset() {
	*x = DeviceActiveMonth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonth) ProtoMessage() {}

func (x *DeviceActiveMonth) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonth.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonth) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceActiveMonth) GetDataTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DataTime
	}
	return nil
}

func (x *DeviceActiveMonth) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceActiveMonth) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *DeviceActiveMonth) GetActiveSum() int64 {
	if x != nil {
		return x.ActiveSum
	}
	return 0
}

func (x *DeviceActiveMonth) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DeviceActiveMonthFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dataTime" gorm:"default:月;comment:月;"
	DataTime *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=dataTime,proto3" json:"dataTime,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户ID;comment:租户ID;size:20;"
	TenantId string `protobuf:"bytes,101,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:20;"
	ProductKey string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"activeSum" gorm:"default:激活设备数;comment:激活设备数;size:19;"
	ActiveSum int64 `protobuf:"varint,103,opt,name=activeSum,proto3" json:"activeSum,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:;comment:;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DeviceActiveMonthFilter) Reset() {
	*x = DeviceActiveMonthFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthFilter) ProtoMessage() {}

func (x *DeviceActiveMonthFilter) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthFilter.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthFilter) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceActiveMonthFilter) GetDataTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DataTime
	}
	return nil
}

func (x *DeviceActiveMonthFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceActiveMonthFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *DeviceActiveMonthFilter) GetActiveSum() int64 {
	if x != nil {
		return x.ActiveSum
	}
	return 0
}

func (x *DeviceActiveMonthFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DeviceActiveMonthListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId      string                 `protobuf:"bytes,101,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	ProductKey    string                 `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	DataTimeStart *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=dataTimeStart,proto3" json:"dataTimeStart,omitempty"`
	DataTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=dataTimeEnd,proto3" json:"dataTimeEnd,omitempty"`
}

func (x *DeviceActiveMonthListFilter) Reset() {
	*x = DeviceActiveMonthListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthListFilter) ProtoMessage() {}

func (x *DeviceActiveMonthListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthListFilter.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthListFilter) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceActiveMonthListFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceActiveMonthListFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *DeviceActiveMonthListFilter) GetDataTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.DataTimeStart
	}
	return nil
}

func (x *DeviceActiveMonthListFilter) GetDataTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.DataTimeEnd
	}
	return nil
}

type DeviceActiveMonthListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *DeviceActiveMonthListFilter `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                        `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                        `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string                       `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string                       `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string                       `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *DeviceActiveMonthListRequest) Reset() {
	*x = DeviceActiveMonthListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthListRequest) ProtoMessage() {}

func (x *DeviceActiveMonthListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthListRequest.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthListRequest) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceActiveMonthListRequest) GetQuery() *DeviceActiveMonthListFilter {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *DeviceActiveMonthListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DeviceActiveMonthListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeviceActiveMonthListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *DeviceActiveMonthListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *DeviceActiveMonthListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type DeviceActiveMonthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*DeviceActiveMonth `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeviceActiveMonthResponse) Reset() {
	*x = DeviceActiveMonthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthResponse) ProtoMessage() {}

func (x *DeviceActiveMonthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthResponse.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthResponse) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceActiveMonthResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeviceActiveMonthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeviceActiveMonthResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeviceActiveMonthResponse) GetData() []*DeviceActiveMonth {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeviceActiveMonthUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string           `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *DeviceActiveMonth `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeviceActiveMonthUpdateFieldsRequest) Reset() {
	*x = DeviceActiveMonthUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthUpdateFieldsRequest) ProtoMessage() {}

func (x *DeviceActiveMonthUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{5}
}

func (x *DeviceActiveMonthUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeviceActiveMonthUpdateFieldsRequest) GetData() *DeviceActiveMonth {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type DeviceActiveMonthPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataTime   *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=dataTime,proto3" json:"dataTime,omitempty"`
	TenantId   string                 `protobuf:"bytes,101,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	ProductKey string                 `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
}

func (x *DeviceActiveMonthPrimarykey) Reset() {
	*x = DeviceActiveMonthPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthPrimarykey) ProtoMessage() {}

func (x *DeviceActiveMonthPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthPrimarykey.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthPrimarykey) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceActiveMonthPrimarykey) GetDataTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DataTime
	}
	return nil
}

func (x *DeviceActiveMonthPrimarykey) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceActiveMonthPrimarykey) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

type DeviceActiveMonthBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*DeviceActiveMonthPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *DeviceActiveMonthBatchDeleteRequest) Reset() {
	*x = DeviceActiveMonthBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_active_month_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceActiveMonthBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceActiveMonthBatchDeleteRequest) ProtoMessage() {}

func (x *DeviceActiveMonthBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_active_month_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceActiveMonthBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*DeviceActiveMonthBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_device_active_month_model_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceActiveMonthBatchDeleteRequest) GetKeys() []*DeviceActiveMonthPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_device_active_month_model_proto protoreflect.FileDescriptor

var file_device_active_month_model_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x11,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x75, 0x6d, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x75, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe5, 0x01,
	0x0a, 0x17, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x75, 0x6d, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x40, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x22, 0xe2, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x24, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x5f, 0x0a, 0x23,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a,
	0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_active_month_model_proto_rawDescOnce sync.Once
	file_device_active_month_model_proto_rawDescData = file_device_active_month_model_proto_rawDesc
)

func file_device_active_month_model_proto_rawDescGZIP() []byte {
	file_device_active_month_model_proto_rawDescOnce.Do(func() {
		file_device_active_month_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_active_month_model_proto_rawDescData)
	})
	return file_device_active_month_model_proto_rawDescData
}

var file_device_active_month_model_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_device_active_month_model_proto_goTypes = []interface{}{
	(*DeviceActiveMonth)(nil),                    // 0: service.DeviceActiveMonth
	(*DeviceActiveMonthFilter)(nil),              // 1: service.DeviceActiveMonthFilter
	(*DeviceActiveMonthListFilter)(nil),          // 2: service.DeviceActiveMonthListFilter
	(*DeviceActiveMonthListRequest)(nil),         // 3: service.DeviceActiveMonthListRequest
	(*DeviceActiveMonthResponse)(nil),            // 4: service.DeviceActiveMonthResponse
	(*DeviceActiveMonthUpdateFieldsRequest)(nil), // 5: service.DeviceActiveMonthUpdateFieldsRequest
	(*DeviceActiveMonthPrimarykey)(nil),          // 6: service.DeviceActiveMonthPrimarykey
	(*DeviceActiveMonthBatchDeleteRequest)(nil),  // 7: service.DeviceActiveMonthBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),                // 8: google.protobuf.Timestamp
}
var file_device_active_month_model_proto_depIdxs = []int32{
	8,  // 0: service.DeviceActiveMonth.dataTime:type_name -> google.protobuf.Timestamp
	8,  // 1: service.DeviceActiveMonth.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 2: service.DeviceActiveMonthFilter.dataTime:type_name -> google.protobuf.Timestamp
	8,  // 3: service.DeviceActiveMonthFilter.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 4: service.DeviceActiveMonthListFilter.dataTimeStart:type_name -> google.protobuf.Timestamp
	8,  // 5: service.DeviceActiveMonthListFilter.dataTimeEnd:type_name -> google.protobuf.Timestamp
	2,  // 6: service.DeviceActiveMonthListRequest.query:type_name -> service.DeviceActiveMonthListFilter
	0,  // 7: service.DeviceActiveMonthResponse.data:type_name -> service.DeviceActiveMonth
	0,  // 8: service.DeviceActiveMonthUpdateFieldsRequest.data:type_name -> service.DeviceActiveMonth
	8,  // 9: service.DeviceActiveMonthPrimarykey.dataTime:type_name -> google.protobuf.Timestamp
	6,  // 10: service.DeviceActiveMonthBatchDeleteRequest.keys:type_name -> service.DeviceActiveMonthPrimarykey
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_device_active_month_model_proto_init() }
func file_device_active_month_model_proto_init() {
	if File_device_active_month_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_active_month_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_active_month_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceActiveMonthBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_active_month_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_device_active_month_model_proto_goTypes,
		DependencyIndexes: file_device_active_month_model_proto_depIdxs,
		MessageInfos:      file_device_active_month_model_proto_msgTypes,
	}.Build()
	File_device_active_month_model_proto = out.File
	file_device_active_month_model_proto_rawDesc = nil
	file_device_active_month_model_proto_goTypes = nil
	file_device_active_month_model_proto_depIdxs = nil
}
