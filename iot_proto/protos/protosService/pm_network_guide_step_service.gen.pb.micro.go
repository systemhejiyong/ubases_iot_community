// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: pm_network_guide_step_service.gen.proto

package protosService

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for PmNetworkGuideStepService service

func NewPmNetworkGuideStepServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.Create",
			Path:    []string{"/v1/pmNetworkGuideStep/create"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.Delete",
			Path:    []string{"/v1/pmNetworkGuideStep/delete"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.DeleteById",
			Path:    []string{"/v1/pmNetworkGuideStep/deleteById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.DeleteByIds",
			Path:    []string{"/v1/pmNetworkGuideStep/DeleteByIds"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.Update",
			Path:    []string{"/v1/pmNetworkGuideStep/update"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.UpdateAll",
			Path:    []string{"/v1/pmNetworkGuideStep/updateAll"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.UpdateFields",
			Path:    []string{"/v1/pmNetworkGuideStep/updateFields"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.FindById",
			Path:    []string{"/v1/pmNetworkGuideStep/findById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.Find",
			Path:    []string{"/v1/pmNetworkGuideStep/find"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "PmNetworkGuideStepService.Lists",
			Path:    []string{"/v1/pmNetworkGuideStep/lists"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
	}
}

// Client API for PmNetworkGuideStepService service

type PmNetworkGuideStepService interface {
	//创建
	Create(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error)
	//匹配多条件删除
	Delete(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error)
	//匹配主键删除,一般是Id
	DeleteById(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error)
	//匹配主键批量删除
	DeleteByIds(ctx context.Context, in *PmNetworkGuideStepBatchDeleteRequest, opts ...client.CallOption) (*Response, error)
	//根据主键更新非空字段
	Update(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error)
	//根据主键更新所有字段
	UpdateAll(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error)
	//根据主键更新指定列
	UpdateFields(ctx context.Context, in *PmNetworkGuideStepUpdateFieldsRequest, opts ...client.CallOption) (*Response, error)
	//根据主键查找,一般是Id,返回单条数据
	FindById(ctx context.Context, in *PmNetworkGuideStepFilter, opts ...client.CallOption) (*PmNetworkGuideStepResponse, error)
	//多条件查找，返回单条数据
	Find(ctx context.Context, in *PmNetworkGuideStepFilter, opts ...client.CallOption) (*PmNetworkGuideStepResponse, error)
	//查找，支持分页，可返回多条数据
	Lists(ctx context.Context, in *PmNetworkGuideStepListRequest, opts ...client.CallOption) (*PmNetworkGuideStepResponse, error)
}

type pmNetworkGuideStepService struct {
	c    client.Client
	name string
}

func NewPmNetworkGuideStepService(name string, c client.Client) PmNetworkGuideStepService {
	return &pmNetworkGuideStepService{
		c:    c,
		name: name,
	}
}

func (c *pmNetworkGuideStepService) Create(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) Delete(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) DeleteById(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.DeleteById", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) DeleteByIds(ctx context.Context, in *PmNetworkGuideStepBatchDeleteRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.DeleteByIds", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) Update(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) UpdateAll(ctx context.Context, in *PmNetworkGuideStep, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.UpdateAll", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) UpdateFields(ctx context.Context, in *PmNetworkGuideStepUpdateFieldsRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.UpdateFields", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) FindById(ctx context.Context, in *PmNetworkGuideStepFilter, opts ...client.CallOption) (*PmNetworkGuideStepResponse, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.FindById", in)
	out := new(PmNetworkGuideStepResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) Find(ctx context.Context, in *PmNetworkGuideStepFilter, opts ...client.CallOption) (*PmNetworkGuideStepResponse, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.Find", in)
	out := new(PmNetworkGuideStepResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmNetworkGuideStepService) Lists(ctx context.Context, in *PmNetworkGuideStepListRequest, opts ...client.CallOption) (*PmNetworkGuideStepResponse, error) {
	req := c.c.NewRequest(c.name, "PmNetworkGuideStepService.Lists", in)
	out := new(PmNetworkGuideStepResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PmNetworkGuideStepService service

type PmNetworkGuideStepServiceHandler interface {
	//创建
	Create(context.Context, *PmNetworkGuideStep, *Response) error
	//匹配多条件删除
	Delete(context.Context, *PmNetworkGuideStep, *Response) error
	//匹配主键删除,一般是Id
	DeleteById(context.Context, *PmNetworkGuideStep, *Response) error
	//匹配主键批量删除
	DeleteByIds(context.Context, *PmNetworkGuideStepBatchDeleteRequest, *Response) error
	//根据主键更新非空字段
	Update(context.Context, *PmNetworkGuideStep, *Response) error
	//根据主键更新所有字段
	UpdateAll(context.Context, *PmNetworkGuideStep, *Response) error
	//根据主键更新指定列
	UpdateFields(context.Context, *PmNetworkGuideStepUpdateFieldsRequest, *Response) error
	//根据主键查找,一般是Id,返回单条数据
	FindById(context.Context, *PmNetworkGuideStepFilter, *PmNetworkGuideStepResponse) error
	//多条件查找，返回单条数据
	Find(context.Context, *PmNetworkGuideStepFilter, *PmNetworkGuideStepResponse) error
	//查找，支持分页，可返回多条数据
	Lists(context.Context, *PmNetworkGuideStepListRequest, *PmNetworkGuideStepResponse) error
}

func RegisterPmNetworkGuideStepServiceHandler(s server.Server, hdlr PmNetworkGuideStepServiceHandler, opts ...server.HandlerOption) error {
	type pmNetworkGuideStepService interface {
		Create(ctx context.Context, in *PmNetworkGuideStep, out *Response) error
		Delete(ctx context.Context, in *PmNetworkGuideStep, out *Response) error
		DeleteById(ctx context.Context, in *PmNetworkGuideStep, out *Response) error
		DeleteByIds(ctx context.Context, in *PmNetworkGuideStepBatchDeleteRequest, out *Response) error
		Update(ctx context.Context, in *PmNetworkGuideStep, out *Response) error
		UpdateAll(ctx context.Context, in *PmNetworkGuideStep, out *Response) error
		UpdateFields(ctx context.Context, in *PmNetworkGuideStepUpdateFieldsRequest, out *Response) error
		FindById(ctx context.Context, in *PmNetworkGuideStepFilter, out *PmNetworkGuideStepResponse) error
		Find(ctx context.Context, in *PmNetworkGuideStepFilter, out *PmNetworkGuideStepResponse) error
		Lists(ctx context.Context, in *PmNetworkGuideStepListRequest, out *PmNetworkGuideStepResponse) error
	}
	type PmNetworkGuideStepService struct {
		pmNetworkGuideStepService
	}
	h := &pmNetworkGuideStepServiceHandler{hdlr}
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.Create",
		Path:    []string{"/v1/pmNetworkGuideStep/create"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.Delete",
		Path:    []string{"/v1/pmNetworkGuideStep/delete"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.DeleteById",
		Path:    []string{"/v1/pmNetworkGuideStep/deleteById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.DeleteByIds",
		Path:    []string{"/v1/pmNetworkGuideStep/DeleteByIds"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.Update",
		Path:    []string{"/v1/pmNetworkGuideStep/update"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.UpdateAll",
		Path:    []string{"/v1/pmNetworkGuideStep/updateAll"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.UpdateFields",
		Path:    []string{"/v1/pmNetworkGuideStep/updateFields"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.FindById",
		Path:    []string{"/v1/pmNetworkGuideStep/findById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.Find",
		Path:    []string{"/v1/pmNetworkGuideStep/find"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "PmNetworkGuideStepService.Lists",
		Path:    []string{"/v1/pmNetworkGuideStep/lists"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	return s.Handle(s.NewHandler(&PmNetworkGuideStepService{h}, opts...))
}

type pmNetworkGuideStepServiceHandler struct {
	PmNetworkGuideStepServiceHandler
}

func (h *pmNetworkGuideStepServiceHandler) Create(ctx context.Context, in *PmNetworkGuideStep, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.Create(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) Delete(ctx context.Context, in *PmNetworkGuideStep, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.Delete(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) DeleteById(ctx context.Context, in *PmNetworkGuideStep, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.DeleteById(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) DeleteByIds(ctx context.Context, in *PmNetworkGuideStepBatchDeleteRequest, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.DeleteByIds(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) Update(ctx context.Context, in *PmNetworkGuideStep, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.Update(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) UpdateAll(ctx context.Context, in *PmNetworkGuideStep, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.UpdateAll(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) UpdateFields(ctx context.Context, in *PmNetworkGuideStepUpdateFieldsRequest, out *Response) error {
	return h.PmNetworkGuideStepServiceHandler.UpdateFields(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) FindById(ctx context.Context, in *PmNetworkGuideStepFilter, out *PmNetworkGuideStepResponse) error {
	return h.PmNetworkGuideStepServiceHandler.FindById(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) Find(ctx context.Context, in *PmNetworkGuideStepFilter, out *PmNetworkGuideStepResponse) error {
	return h.PmNetworkGuideStepServiceHandler.Find(ctx, in, out)
}

func (h *pmNetworkGuideStepServiceHandler) Lists(ctx context.Context, in *PmNetworkGuideStepListRequest, out *PmNetworkGuideStepResponse) error {
	return h.PmNetworkGuideStepServiceHandler.Lists(ctx, in, out)
}
