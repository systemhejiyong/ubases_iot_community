// Code generated by protoc,2022-04-24 10:36:38. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pm_firmware_version_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type PmFirmwareVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"firmwareId" gorm:"default:固件主键编号;comment:固件主键编号;size:19;"
	FirmwareId int64 `protobuf:"varint,101,opt,name=firmwareId,proto3" json:"firmwareId,omitempty"`
	// @inject_tag: json:"version" gorm:"default:固件版本号;comment:固件版本号;size:20;"
	Version string `protobuf:"bytes,102,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:固件版本描述;comment:固件版本描述;size:255;"
	Desc string `protobuf:"bytes,103,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（1上架 2未上架）;comment:状态（1上架 2未上架）;size:10;"
	Status int32 `protobuf:"varint,104,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"fileName" gorm:"default:文件名称;comment:文件名称;size:100;"
	FileName string `protobuf:"bytes,105,opt,name=fileName,proto3" json:"fileName,omitempty"`
	// @inject_tag: json:"filePath" gorm:"default:固件版本文件;comment:固件版本文件;size:255;"
	FilePath string `protobuf:"bytes,106,opt,name=filePath,proto3" json:"filePath,omitempty"`
	// @inject_tag: json:"fileKey" gorm:"default:固件版本MD5值;comment:固件版本MD5值;size:50;"
	FileKey string `protobuf:"bytes,107,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	// @inject_tag: json:"fileSize" gorm:"default:固件版本包大小;comment:固件版本包大小;size:10;"
	FileSize int32 `protobuf:"varint,108,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:19;"
	UpdatedBy int64 `protobuf:"varint,110,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除标识（0-正常 1-删除）;comment:删除标识（0-正常 1-删除）;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	//资源文件包
	ZipFileName string `protobuf:"bytes,113,opt,name=zipFileName,proto3" json:"zipFileName,omitempty"`
	ZipFilePath string `protobuf:"bytes,114,opt,name=zipFilePath,proto3" json:"zipFilePath,omitempty"`
	ZipFileKey  string `protobuf:"bytes,115,opt,name=zipFileKey,proto3" json:"zipFileKey,omitempty"`
	ZipFileSize int32  `protobuf:"varint,116,opt,name=zipFileSize,proto3" json:"zipFileSize,omitempty"`
	// 是否必须
	IsMust int32 `protobuf:"varint,117,opt,name=isMust,proto3" json:"isMust,omitempty"`
}

func (x *PmFirmwareVersion) Reset() {
	*x = PmFirmwareVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersion) ProtoMessage() {}

func (x *PmFirmwareVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersion.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersion) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{0}
}

func (x *PmFirmwareVersion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmFirmwareVersion) GetFirmwareId() int64 {
	if x != nil {
		return x.FirmwareId
	}
	return 0
}

func (x *PmFirmwareVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PmFirmwareVersion) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PmFirmwareVersion) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PmFirmwareVersion) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PmFirmwareVersion) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *PmFirmwareVersion) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *PmFirmwareVersion) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *PmFirmwareVersion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmFirmwareVersion) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmFirmwareVersion) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmFirmwareVersion) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *PmFirmwareVersion) GetZipFileName() string {
	if x != nil {
		return x.ZipFileName
	}
	return ""
}

func (x *PmFirmwareVersion) GetZipFilePath() string {
	if x != nil {
		return x.ZipFilePath
	}
	return ""
}

func (x *PmFirmwareVersion) GetZipFileKey() string {
	if x != nil {
		return x.ZipFileKey
	}
	return ""
}

func (x *PmFirmwareVersion) GetZipFileSize() int32 {
	if x != nil {
		return x.ZipFileSize
	}
	return 0
}

func (x *PmFirmwareVersion) GetIsMust() int32 {
	if x != nil {
		return x.IsMust
	}
	return 0
}

type PmFirmwareVersionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"firmwareId" gorm:"default:固件主键编号;comment:固件主键编号;size:19;"
	FirmwareId int64 `protobuf:"varint,101,opt,name=firmwareId,proto3" json:"firmwareId,omitempty"`
	// @inject_tag: json:"version" gorm:"default:固件版本号;comment:固件版本号;size:20;"
	Version string `protobuf:"bytes,102,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:固件版本描述;comment:固件版本描述;size:255;"
	Desc string `protobuf:"bytes,103,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（1上架 2未上架）;comment:状态（1上架 2未上架）;size:10;"
	Status int32 `protobuf:"varint,104,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"fileName" gorm:"default:文件名称;comment:文件名称;size:100;"
	FileName string `protobuf:"bytes,105,opt,name=fileName,proto3" json:"fileName,omitempty"`
	// @inject_tag: json:"filePath" gorm:"default:固件版本文件;comment:固件版本文件;size:255;"
	FilePath string `protobuf:"bytes,106,opt,name=filePath,proto3" json:"filePath,omitempty"`
	// @inject_tag: json:"fileKey" gorm:"default:固件版本MD5值;comment:固件版本MD5值;size:50;"
	FileKey string `protobuf:"bytes,107,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	// @inject_tag: json:"fileSize" gorm:"default:固件版本包大小;comment:固件版本包大小;size:10;"
	FileSize int32 `protobuf:"varint,108,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:19;"
	UpdatedBy int64 `protobuf:"varint,110,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除标识（0-正常 1-删除）;comment:删除标识（0-正常 1-删除）;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *PmFirmwareVersionFilter) Reset() {
	*x = PmFirmwareVersionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersionFilter) ProtoMessage() {}

func (x *PmFirmwareVersionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersionFilter.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersionFilter) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{1}
}

func (x *PmFirmwareVersionFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmFirmwareVersionFilter) GetFirmwareId() int64 {
	if x != nil {
		return x.FirmwareId
	}
	return 0
}

func (x *PmFirmwareVersionFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PmFirmwareVersionFilter) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PmFirmwareVersionFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PmFirmwareVersionFilter) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PmFirmwareVersionFilter) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *PmFirmwareVersionFilter) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *PmFirmwareVersionFilter) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *PmFirmwareVersionFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmFirmwareVersionFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmFirmwareVersionFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmFirmwareVersionFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type PmFirmwareVersionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *PmFirmwareVersion `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64              `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64              `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string             `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string             `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *PmFirmwareVersionListRequest) Reset() {
	*x = PmFirmwareVersionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersionListRequest) ProtoMessage() {}

func (x *PmFirmwareVersionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersionListRequest.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersionListRequest) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{2}
}

func (x *PmFirmwareVersionListRequest) GetQuery() *PmFirmwareVersion {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PmFirmwareVersionListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PmFirmwareVersionListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PmFirmwareVersionListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *PmFirmwareVersionListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type PmFirmwareVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*PmFirmwareVersion `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PmFirmwareVersionResponse) Reset() {
	*x = PmFirmwareVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersionResponse) ProtoMessage() {}

func (x *PmFirmwareVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersionResponse.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersionResponse) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{3}
}

func (x *PmFirmwareVersionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PmFirmwareVersionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PmFirmwareVersionResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PmFirmwareVersionResponse) GetData() []*PmFirmwareVersion {
	if x != nil {
		return x.Data
	}
	return nil
}

type PmFirmwareVersionUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string           `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *PmFirmwareVersion `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PmFirmwareVersionUpdateFieldsRequest) Reset() {
	*x = PmFirmwareVersionUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersionUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersionUpdateFieldsRequest) ProtoMessage() {}

func (x *PmFirmwareVersionUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersionUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersionUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{4}
}

func (x *PmFirmwareVersionUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PmFirmwareVersionUpdateFieldsRequest) GetData() *PmFirmwareVersion {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type PmFirmwareVersionPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PmFirmwareVersionPrimarykey) Reset() {
	*x = PmFirmwareVersionPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersionPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersionPrimarykey) ProtoMessage() {}

func (x *PmFirmwareVersionPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersionPrimarykey.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersionPrimarykey) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{5}
}

func (x *PmFirmwareVersionPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PmFirmwareVersionBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*PmFirmwareVersionPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *PmFirmwareVersionBatchDeleteRequest) Reset() {
	*x = PmFirmwareVersionBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmFirmwareVersionBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmFirmwareVersionBatchDeleteRequest) ProtoMessage() {}

func (x *PmFirmwareVersionBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmFirmwareVersionBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*PmFirmwareVersionBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{6}
}

func (x *PmFirmwareVersionBatchDeleteRequest) GetKeys() []*PmFirmwareVersionPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ModuleFirmwareVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId int64 `protobuf:"varint,101,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	Page     int64 `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ModuleFirmwareVersionRequest) Reset() {
	*x = ModuleFirmwareVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pm_firmware_version_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleFirmwareVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleFirmwareVersionRequest) ProtoMessage() {}

func (x *ModuleFirmwareVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pm_firmware_version_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleFirmwareVersionRequest.ProtoReflect.Descriptor instead.
func (*ModuleFirmwareVersionRequest) Descriptor() ([]byte, []int) {
	return file_pm_firmware_version_model_proto_rawDescGZIP(), []int{7}
}

func (x *ModuleFirmwareVersionRequest) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *ModuleFirmwareVersionRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ModuleFirmwareVersionRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_pm_firmware_version_model_proto protoreflect.FileDescriptor

var file_pm_firmware_version_model_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6d, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x04, 0x0a, 0x11,
	0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x7a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x7a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x7a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x7a, 0x69, 0x70, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x7a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x7a, 0x69, 0x70, 0x46, 0x69,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x7a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x74, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x7a, 0x69, 0x70, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4d, 0x75, 0x73,
	0x74, 0x18, 0x75, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x75, 0x73, 0x74, 0x22,
	0xc9, 0x03, 0x0a, 0x17, 0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x70,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x1c,
	0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x50, 0x6d, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x24, 0x50, 0x6d,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x1b, 0x50, 0x6d,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x23, 0x50, 0x6d, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d, 0x46, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x6a, 0x0a, 0x1c, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pm_firmware_version_model_proto_rawDescOnce sync.Once
	file_pm_firmware_version_model_proto_rawDescData = file_pm_firmware_version_model_proto_rawDesc
)

func file_pm_firmware_version_model_proto_rawDescGZIP() []byte {
	file_pm_firmware_version_model_proto_rawDescOnce.Do(func() {
		file_pm_firmware_version_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_pm_firmware_version_model_proto_rawDescData)
	})
	return file_pm_firmware_version_model_proto_rawDescData
}

var file_pm_firmware_version_model_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pm_firmware_version_model_proto_goTypes = []interface{}{
	(*PmFirmwareVersion)(nil),                    // 0: service.PmFirmwareVersion
	(*PmFirmwareVersionFilter)(nil),              // 1: service.PmFirmwareVersionFilter
	(*PmFirmwareVersionListRequest)(nil),         // 2: service.PmFirmwareVersionListRequest
	(*PmFirmwareVersionResponse)(nil),            // 3: service.PmFirmwareVersionResponse
	(*PmFirmwareVersionUpdateFieldsRequest)(nil), // 4: service.PmFirmwareVersionUpdateFieldsRequest
	(*PmFirmwareVersionPrimarykey)(nil),          // 5: service.PmFirmwareVersionPrimarykey
	(*PmFirmwareVersionBatchDeleteRequest)(nil),  // 6: service.PmFirmwareVersionBatchDeleteRequest
	(*ModuleFirmwareVersionRequest)(nil),         // 7: service.ModuleFirmwareVersionRequest
	(*timestamppb.Timestamp)(nil),                // 8: google.protobuf.Timestamp
}
var file_pm_firmware_version_model_proto_depIdxs = []int32{
	8,  // 0: service.PmFirmwareVersion.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 1: service.PmFirmwareVersion.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 2: service.PmFirmwareVersion.deletedAt:type_name -> google.protobuf.Timestamp
	8,  // 3: service.PmFirmwareVersionFilter.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 4: service.PmFirmwareVersionFilter.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 5: service.PmFirmwareVersionFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.PmFirmwareVersionListRequest.query:type_name -> service.PmFirmwareVersion
	0,  // 7: service.PmFirmwareVersionResponse.data:type_name -> service.PmFirmwareVersion
	0,  // 8: service.PmFirmwareVersionUpdateFieldsRequest.data:type_name -> service.PmFirmwareVersion
	5,  // 9: service.PmFirmwareVersionBatchDeleteRequest.keys:type_name -> service.PmFirmwareVersionPrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pm_firmware_version_model_proto_init() }
func file_pm_firmware_version_model_proto_init() {
	if File_pm_firmware_version_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pm_firmware_version_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersionUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersionPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmFirmwareVersionBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pm_firmware_version_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleFirmwareVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pm_firmware_version_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pm_firmware_version_model_proto_goTypes,
		DependencyIndexes: file_pm_firmware_version_model_proto_depIdxs,
		MessageInfos:      file_pm_firmware_version_model_proto_msgTypes,
	}.Build()
	File_pm_firmware_version_model_proto = out.File
	file_pm_firmware_version_model_proto_rawDesc = nil
	file_pm_firmware_version_model_proto_goTypes = nil
	file_pm_firmware_version_model_proto_depIdxs = nil
}
