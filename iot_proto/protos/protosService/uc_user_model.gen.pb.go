// Code generated by protoc,2022-11-10 18:41:24. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: uc_user_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type UcUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"uid" gorm:"default:用户唯一ID（16位UUID）;comment:用户唯一ID（16位UUID）;size:16;"
	Uid string `protobuf:"bytes,101,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: json:"nickName" gorm:"default:昵称;comment:昵称;size:50;"
	NickName string `protobuf:"bytes,102,opt,name=nickName,proto3" json:"nickName,omitempty"`
	// @inject_tag: json:"phone" gorm:"default:手机号;comment:手机号;size:20;"
	Phone string `protobuf:"bytes,103,opt,name=phone,proto3" json:"phone,omitempty"`
	// @inject_tag: json:"password" gorm:"default:密码;comment:密码;size:50;"
	Password string `protobuf:"bytes,104,opt,name=password,proto3" json:"password,omitempty"`
	// @inject_tag: json:"deviceSecretHttp" gorm:"default:用户密钥（http）;comment:用户密钥（http）;size:20;"
	DeviceSecretHttp string `protobuf:"bytes,105,opt,name=deviceSecretHttp,proto3" json:"deviceSecretHttp,omitempty"`
	// @inject_tag: json:"deviceSecretMqtt" gorm:"default:用户密钥（mqtt）;comment:用户密钥（mqtt）;size:20;"
	DeviceSecretMqtt string `protobuf:"bytes,106,opt,name=deviceSecretMqtt,proto3" json:"deviceSecretMqtt,omitempty"`
	// @inject_tag: json:"photo" gorm:"default:头像URL;comment:头像URL;size:255;"
	Photo string `protobuf:"bytes,107,opt,name=photo,proto3" json:"photo,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:64;"
	UserName string `protobuf:"bytes,108,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[1:正常，2:待注销，3:已注销];comment:状态[1:正常，2:待注销，3:已注销];size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言标识[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言标识[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:6;"
	Lang string `protobuf:"bytes,110,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:纬度;comment:纬度;size:10,0;"
	Lat float64 `protobuf:"fixed64,111,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:经度;comment:经度;size:10,0;"
	Lng float64 `protobuf:"fixed64,112,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:国家;comment:国家;size:50;"
	Country string `protobuf:"bytes,113,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:省份;comment:省份;size:50;"
	Province string `protobuf:"bytes,114,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:城市;comment:城市;size:50;"
	City string `protobuf:"bytes,115,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:地区;comment:地区;size:50;"
	District string `protobuf:"bytes,116,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"email" gorm:"default:邮箱;comment:邮箱;size:50;"
	Email string `protobuf:"bytes,117,opt,name=email,proto3" json:"email,omitempty"`
	// @inject_tag: json:"defaultHomeId" gorm:"default:默认家庭id;comment:默认家庭id;size:64;"
	DefaultHomeId string `protobuf:"bytes,118,opt,name=defaultHomeId,proto3" json:"defaultHomeId,omitempty"`
	// @inject_tag: json:"gender" gorm:"default:性别 1-男，2-女，3-其他;comment:性别 1-男，2-女，3-其他;size:10;"
	Gender int32 `protobuf:"varint,119,opt,name=gender,proto3" json:"gender,omitempty"`
	// @inject_tag: json:"registerRegion" gorm:"default:注册地区;comment:注册地区;size:64;"
	RegisterRegion string `protobuf:"bytes,120,opt,name=registerRegion,proto3" json:"registerRegion,omitempty"`
	// @inject_tag: json:"appOrigin" gorm:"default:应用来源 =1 aithings;comment:应用来源 =1 aithings;size:100;"
	AppOrigin string `protobuf:"bytes,121,opt,name=appOrigin,proto3" json:"appOrigin,omitempty"`
	// @inject_tag: json:"appKey" gorm:"default:appKey;comment:appKey;size:64;"
	AppKey string `protobuf:"bytes,122,opt,name=appKey,proto3" json:"appKey,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id;comment:租户id;size:8;"
	TenantId string `protobuf:"bytes,123,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,124,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,125,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"cancelTime" gorm:"default:注销时间;comment:注销时间;size:19;"
	CancelTime int64 `protobuf:"varint,126,opt,name=cancelTime,proto3" json:"cancelTime,omitempty"`
	// @inject_tag: json:"loginTime" gorm:"default:最后登录时间;comment:最后登录时间;"
	LoginTime *timestamppb.Timestamp `protobuf:"bytes,127,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,128,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,129,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,130,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"contactCountry" gorm:"default:联系国家;comment:联系国家;size:64;"
	ContactCountry string `protobuf:"bytes,131,opt,name=contactCountry,proto3" json:"contactCountry,omitempty"`
	// @inject_tag: json:"contactArea" gorm:"default:联系区域;comment:联系区域;size:64;"
	ContactArea string `protobuf:"bytes,132,opt,name=contactArea,proto3" json:"contactArea,omitempty"`
	// @inject_tag: json:"birthday" gorm:"default:生日;comment:生日;"
	Birthday *timestamppb.Timestamp `protobuf:"bytes,133,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// @inject_tag: json:"defaultHomeName" gorm:"default:默认家庭名称;comment:默认家庭名称;size:100;"
	DefaultHomeName string `protobuf:"bytes,134,opt,name=defaultHomeName,proto3" json:"defaultHomeName,omitempty"`
	RegionServerId  int64  `protobuf:"varint,135,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
}

func (x *UcUser) Reset() {
	*x = UcUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUser) ProtoMessage() {}

func (x *UcUser) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUser.ProtoReflect.Descriptor instead.
func (*UcUser) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *UcUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcUser) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UcUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UcUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UcUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UcUser) GetDeviceSecretHttp() string {
	if x != nil {
		return x.DeviceSecretHttp
	}
	return ""
}

func (x *UcUser) GetDeviceSecretMqtt() string {
	if x != nil {
		return x.DeviceSecretMqtt
	}
	return ""
}

func (x *UcUser) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *UcUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UcUser) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UcUser) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UcUser) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UcUser) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *UcUser) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UcUser) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UcUser) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UcUser) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UcUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UcUser) GetDefaultHomeId() string {
	if x != nil {
		return x.DefaultHomeId
	}
	return ""
}

func (x *UcUser) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UcUser) GetRegisterRegion() string {
	if x != nil {
		return x.RegisterRegion
	}
	return ""
}

func (x *UcUser) GetAppOrigin() string {
	if x != nil {
		return x.AppOrigin
	}
	return ""
}

func (x *UcUser) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcUser) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UcUser) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcUser) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcUser) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *UcUser) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *UcUser) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcUser) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcUser) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcUser) GetContactCountry() string {
	if x != nil {
		return x.ContactCountry
	}
	return ""
}

func (x *UcUser) GetContactArea() string {
	if x != nil {
		return x.ContactArea
	}
	return ""
}

func (x *UcUser) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UcUser) GetDefaultHomeName() string {
	if x != nil {
		return x.DefaultHomeName
	}
	return ""
}

func (x *UcUser) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type UcUserFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"uid" gorm:"default:用户唯一ID（16位UUID）;comment:用户唯一ID（16位UUID）;size:16;"
	Uid string `protobuf:"bytes,101,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: json:"nickName" gorm:"default:昵称;comment:昵称;size:50;"
	NickName string `protobuf:"bytes,102,opt,name=nickName,proto3" json:"nickName,omitempty"`
	// @inject_tag: json:"phone" gorm:"default:手机号;comment:手机号;size:20;"
	Phone string `protobuf:"bytes,103,opt,name=phone,proto3" json:"phone,omitempty"`
	// @inject_tag: json:"password" gorm:"default:密码;comment:密码;size:50;"
	Password string `protobuf:"bytes,104,opt,name=password,proto3" json:"password,omitempty"`
	// @inject_tag: json:"deviceSecretHttp" gorm:"default:用户密钥（http）;comment:用户密钥（http）;size:20;"
	DeviceSecretHttp string `protobuf:"bytes,105,opt,name=deviceSecretHttp,proto3" json:"deviceSecretHttp,omitempty"`
	// @inject_tag: json:"deviceSecretMqtt" gorm:"default:用户密钥（mqtt）;comment:用户密钥（mqtt）;size:20;"
	DeviceSecretMqtt string `protobuf:"bytes,106,opt,name=deviceSecretMqtt,proto3" json:"deviceSecretMqtt,omitempty"`
	// @inject_tag: json:"photo" gorm:"default:头像URL;comment:头像URL;size:255;"
	Photo string `protobuf:"bytes,107,opt,name=photo,proto3" json:"photo,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:64;"
	UserName string `protobuf:"bytes,108,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[1:正常，2:待注销，3:已注销];comment:状态[1:正常，2:待注销，3:已注销];size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言标识[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言标识[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:6;"
	Lang string `protobuf:"bytes,110,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:纬度;comment:纬度;size:10,0;"
	Lat float64 `protobuf:"fixed64,111,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:经度;comment:经度;size:10,0;"
	Lng float64 `protobuf:"fixed64,112,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:国家;comment:国家;size:50;"
	Country string `protobuf:"bytes,113,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:省份;comment:省份;size:50;"
	Province string `protobuf:"bytes,114,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:城市;comment:城市;size:50;"
	City string `protobuf:"bytes,115,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:地区;comment:地区;size:50;"
	District string `protobuf:"bytes,116,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"email" gorm:"default:邮箱;comment:邮箱;size:50;"
	Email string `protobuf:"bytes,117,opt,name=email,proto3" json:"email,omitempty"`
	// @inject_tag: json:"defaultHomeId" gorm:"default:默认家庭id;comment:默认家庭id;size:64;"
	DefaultHomeId string `protobuf:"bytes,118,opt,name=defaultHomeId,proto3" json:"defaultHomeId,omitempty"`
	// @inject_tag: json:"gender" gorm:"default:性别 1-男，2-女，3-其他;comment:性别 1-男，2-女，3-其他;size:10;"
	Gender int32 `protobuf:"varint,119,opt,name=gender,proto3" json:"gender,omitempty"`
	// @inject_tag: json:"registerRegion" gorm:"default:注册地区;comment:注册地区;size:64;"
	RegisterRegion string `protobuf:"bytes,120,opt,name=registerRegion,proto3" json:"registerRegion,omitempty"`
	// @inject_tag: json:"appOrigin" gorm:"default:应用来源 =1 aithings;comment:应用来源 =1 aithings;size:100;"
	AppOrigin string `protobuf:"bytes,121,opt,name=appOrigin,proto3" json:"appOrigin,omitempty"`
	// @inject_tag: json:"appKey" gorm:"default:appKey;comment:appKey;size:64;"
	AppKey string `protobuf:"bytes,122,opt,name=appKey,proto3" json:"appKey,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id;comment:租户id;size:8;"
	TenantId string `protobuf:"bytes,123,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,124,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,125,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"cancelTime" gorm:"default:注销时间;comment:注销时间;size:19;"
	CancelTime int64 `protobuf:"varint,126,opt,name=cancelTime,proto3" json:"cancelTime,omitempty"`
	// @inject_tag: json:"loginTime" gorm:"default:最后登录时间;comment:最后登录时间;"
	LoginTime *timestamppb.Timestamp `protobuf:"bytes,127,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,128,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,129,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,130,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"contactCountry" gorm:"default:联系国家;comment:联系国家;size:64;"
	ContactCountry string `protobuf:"bytes,131,opt,name=contactCountry,proto3" json:"contactCountry,omitempty"`
	// @inject_tag: json:"contactArea" gorm:"default:联系区域;comment:联系区域;size:64;"
	ContactArea string `protobuf:"bytes,132,opt,name=contactArea,proto3" json:"contactArea,omitempty"`
	// @inject_tag: json:"birthday" gorm:"default:生日;comment:生日;"
	Birthday       *timestamppb.Timestamp `protobuf:"bytes,133,opt,name=birthday,proto3" json:"birthday,omitempty"`
	RegionServerId int64                  `protobuf:"varint,134,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
}

func (x *UcUserFilter) Reset() {
	*x = UcUserFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFilter) ProtoMessage() {}

func (x *UcUserFilter) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFilter.ProtoReflect.Descriptor instead.
func (*UcUserFilter) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *UcUserFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcUserFilter) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UcUserFilter) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UcUserFilter) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UcUserFilter) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UcUserFilter) GetDeviceSecretHttp() string {
	if x != nil {
		return x.DeviceSecretHttp
	}
	return ""
}

func (x *UcUserFilter) GetDeviceSecretMqtt() string {
	if x != nil {
		return x.DeviceSecretMqtt
	}
	return ""
}

func (x *UcUserFilter) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *UcUserFilter) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UcUserFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UcUserFilter) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UcUserFilter) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UcUserFilter) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *UcUserFilter) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UcUserFilter) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UcUserFilter) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UcUserFilter) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UcUserFilter) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UcUserFilter) GetDefaultHomeId() string {
	if x != nil {
		return x.DefaultHomeId
	}
	return ""
}

func (x *UcUserFilter) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UcUserFilter) GetRegisterRegion() string {
	if x != nil {
		return x.RegisterRegion
	}
	return ""
}

func (x *UcUserFilter) GetAppOrigin() string {
	if x != nil {
		return x.AppOrigin
	}
	return ""
}

func (x *UcUserFilter) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcUserFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UcUserFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcUserFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcUserFilter) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *UcUserFilter) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *UcUserFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcUserFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcUserFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcUserFilter) GetContactCountry() string {
	if x != nil {
		return x.ContactCountry
	}
	return ""
}

func (x *UcUserFilter) GetContactArea() string {
	if x != nil {
		return x.ContactArea
	}
	return ""
}

func (x *UcUserFilter) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UcUserFilter) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type UcUserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *UcUser `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64   `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64   `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string  `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string  `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string  `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *UcUserListRequest) Reset() {
	*x = UcUserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserListRequest) ProtoMessage() {}

func (x *UcUserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserListRequest.ProtoReflect.Descriptor instead.
func (*UcUserListRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *UcUserListRequest) GetQuery() *UcUser {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *UcUserListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UcUserListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UcUserListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *UcUserListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *UcUserListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type UcUserByLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"phone" gorm:"default:手机号;comment:手机号;size:20;"
	Phone string `protobuf:"bytes,101,opt,name=phone,proto3" json:"phone,omitempty"`
	// @inject_tag: json:"password" gorm:"default:密码;comment:密码;size:50;"
	Password string `protobuf:"bytes,102,opt,name=password,proto3" json:"password,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[1:正常，2:待注销，3:已注销];comment:状态[1:正常，2:待注销，3:已注销];size:10;"
	Status int32 `protobuf:"varint,103,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言标识[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言标识[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:6;"
	Lang string `protobuf:"bytes,104,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"email" gorm:"default:邮箱;comment:邮箱;size:50;"
	Email string `protobuf:"bytes,105,opt,name=email,proto3" json:"email,omitempty"`
	// @inject_tag: json:"registerRegion" gorm:"default:注册地区;comment:注册地区;size:64;"
	RegisterRegion string `protobuf:"bytes,106,opt,name=registerRegion,proto3" json:"registerRegion,omitempty"`
	// 多状态查询
	StatusList     []int32 `protobuf:"varint,107,rep,packed,name=statusList,proto3" json:"statusList,omitempty"`
	AppKey         string  `protobuf:"bytes,108,opt,name=appKey,proto3" json:"appKey,omitempty"`
	TenantId       string  `protobuf:"bytes,109,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	RegionServerId int64   `protobuf:"varint,110,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
}

func (x *UcUserByLoginRequest) Reset() {
	*x = UcUserByLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserByLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserByLoginRequest) ProtoMessage() {}

func (x *UcUserByLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserByLoginRequest.ProtoReflect.Descriptor instead.
func (*UcUserByLoginRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *UcUserByLoginRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UcUserByLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UcUserByLoginRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UcUserByLoginRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UcUserByLoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UcUserByLoginRequest) GetRegisterRegion() string {
	if x != nil {
		return x.RegisterRegion
	}
	return ""
}

func (x *UcUserByLoginRequest) GetStatusList() []int32 {
	if x != nil {
		return x.StatusList
	}
	return nil
}

func (x *UcUserByLoginRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcUserByLoginRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UcUserByLoginRequest) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type UcUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32     `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64     `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*UcUser `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UcUserResponse) Reset() {
	*x = UcUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserResponse) ProtoMessage() {}

func (x *UcUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserResponse.ProtoReflect.Descriptor instead.
func (*UcUserResponse) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *UcUserResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UcUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UcUserResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UcUserResponse) GetData() []*UcUser {
	if x != nil {
		return x.Data
	}
	return nil
}

type UcUserUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *UcUser  `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UcUserUpdateFieldsRequest) Reset() {
	*x = UcUserUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserUpdateFieldsRequest) ProtoMessage() {}

func (x *UcUserUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*UcUserUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *UcUserUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UcUserUpdateFieldsRequest) GetData() *UcUser {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type UcUserPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UcUserPrimarykey) Reset() {
	*x = UcUserPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserPrimarykey) ProtoMessage() {}

func (x *UcUserPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserPrimarykey.ProtoReflect.Descriptor instead.
func (*UcUserPrimarykey) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *UcUserPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UcUserBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*UcUserPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *UcUserBatchDeleteRequest) Reset() {
	*x = UcUserBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserBatchDeleteRequest) ProtoMessage() {}

func (x *UcUserBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*UcUserBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{7}
}

func (x *UcUserBatchDeleteRequest) GetKeys() []*UcUserPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type UcUserRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterRegion  string `protobuf:"bytes,101,opt,name=registerRegion,proto3" json:"registerRegion,omitempty"`   //注册地区
	Phone           string `protobuf:"bytes,102,opt,name=phone,proto3" json:"phone,omitempty"`                     //手机号码  手机号码和邮箱必传其一
	Password        string `protobuf:"bytes,103,opt,name=password,proto3" json:"password,omitempty"`               //密码
	Code            string `protobuf:"bytes,104,opt,name=code,proto3" json:"code,omitempty"`                       //短信验证码
	Email           string `protobuf:"bytes,105,opt,name=email,proto3" json:"email,omitempty"`                     //邮箱  手机号码和邮箱必传其一
	Ip              string `protobuf:"bytes,106,opt,name=ip,proto3" json:"ip,omitempty"`                           //ip地址
	ThirdType       string `protobuf:"bytes,107,opt,name=thirdType,proto3" json:"thirdType,omitempty"`             //第三方类型 1-微信,5-appleid
	ThirdUserId     string `protobuf:"bytes,108,opt,name=thirdUserId,proto3" json:"thirdUserId,omitempty"`         //第三方用户id
	ThirdNickname   string `protobuf:"bytes,109,opt,name=thirdNickname,proto3" json:"thirdNickname,omitempty"`     //第三方昵称
	AppKey          string `protobuf:"bytes,110,opt,name=appKey,proto3" json:"appKey,omitempty"`                   //appKey
	TenantId        string `protobuf:"bytes,111,opt,name=tenantId,proto3" json:"tenantId,omitempty"`               //租户id
	DefaultHomeName string `protobuf:"bytes,112,opt,name=defaultHomeName,proto3" json:"defaultHomeName,omitempty"` //默认家庭名称
	DefaultPhoto    string `protobuf:"bytes,113,opt,name=defaultPhoto,proto3" json:"defaultPhoto,omitempty"`       //默认头像
	Lang            string `protobuf:"bytes,114,opt,name=lang,proto3" json:"lang,omitempty"`                       //注册语言
	RegionServerId  int64  `protobuf:"varint,115,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`  //区域服务Id
}

func (x *UcUserRegisterRequest) Reset() {
	*x = UcUserRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserRegisterRequest) ProtoMessage() {}

func (x *UcUserRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserRegisterRequest.ProtoReflect.Descriptor instead.
func (*UcUserRegisterRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{8}
}

func (x *UcUserRegisterRequest) GetRegisterRegion() string {
	if x != nil {
		return x.RegisterRegion
	}
	return ""
}

func (x *UcUserRegisterRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UcUserRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UcUserRegisterRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UcUserRegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UcUserRegisterRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UcUserRegisterRequest) GetThirdType() string {
	if x != nil {
		return x.ThirdType
	}
	return ""
}

func (x *UcUserRegisterRequest) GetThirdUserId() string {
	if x != nil {
		return x.ThirdUserId
	}
	return ""
}

func (x *UcUserRegisterRequest) GetThirdNickname() string {
	if x != nil {
		return x.ThirdNickname
	}
	return ""
}

func (x *UcUserRegisterRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcUserRegisterRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UcUserRegisterRequest) GetDefaultHomeName() string {
	if x != nil {
		return x.DefaultHomeName
	}
	return ""
}

func (x *UcUserRegisterRequest) GetDefaultPhoto() string {
	if x != nil {
		return x.DefaultPhoto
	}
	return ""
}

func (x *UcUserRegisterRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UcUserRegisterRequest) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type UcForgetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountType    string `protobuf:"bytes,101,opt,name=accountType,proto3" json:"accountType,omitempty"`        //用户类型 1-手机，2-邮箱
	Account        string `protobuf:"bytes,102,opt,name=account,proto3" json:"account,omitempty"`                //用户账号
	NewPassword    string `protobuf:"bytes,103,opt,name=newPassword,proto3" json:"newPassword,omitempty"`        //新密码
	AppKey         string `protobuf:"bytes,104,opt,name=appKey,proto3" json:"appKey,omitempty"`                  //appKey
	TenantId       string `protobuf:"bytes,105,opt,name=tenantId,proto3" json:"tenantId,omitempty"`              //租户id
	RegionServerId int64  `protobuf:"varint,106,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"` //区域服务Id
}

func (x *UcForgetPasswordReq) Reset() {
	*x = UcForgetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcForgetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcForgetPasswordReq) ProtoMessage() {}

func (x *UcForgetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcForgetPasswordReq.ProtoReflect.Descriptor instead.
func (*UcForgetPasswordReq) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{9}
}

func (x *UcForgetPasswordReq) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UcForgetPasswordReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UcForgetPasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *UcForgetPasswordReq) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcForgetPasswordReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UcForgetPasswordReq) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type UcUserHome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,101,opt,name=id,proto3" json:"id,omitempty"`                 //家庭id
	Type       int32  `protobuf:"varint,102,opt,name=type,proto3" json:"type,omitempty"`             //家庭类型  1-正常、2-分享
	Name       string `protobuf:"bytes,103,opt,name=name,proto3" json:"name,omitempty"`              //家庭名称
	RoomList   int32  `protobuf:"varint,104,opt,name=roomList,proto3" json:"roomList,omitempty"`     //房间数量
	UserList   int32  `protobuf:"varint,105,opt,name=userList,proto3" json:"userList,omitempty"`     //用户数量
	DeviceList int32  `protobuf:"varint,106,opt,name=deviceList,proto3" json:"deviceList,omitempty"` //设备数量
}

func (x *UcUserHome) Reset() {
	*x = UcUserHome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserHome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserHome) ProtoMessage() {}

func (x *UcUserHome) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserHome.ProtoReflect.Descriptor instead.
func (*UcUserHome) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{10}
}

func (x *UcUserHome) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcUserHome) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UcUserHome) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UcUserHome) GetRoomList() int32 {
	if x != nil {
		return x.RoomList
	}
	return 0
}

func (x *UcUserHome) GetUserList() int32 {
	if x != nil {
		return x.UserList
	}
	return 0
}

func (x *UcUserHome) GetDeviceList() int32 {
	if x != nil {
		return x.DeviceList
	}
	return 0
}

type UcUserHomeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeUsers []*UcUserHome `protobuf:"bytes,101,rep,name=homeUsers,proto3" json:"homeUsers,omitempty"`
	Code      int32         `protobuf:"varint,102,opt,name=code,proto3" json:"code,omitempty"`
	Message   string        `protobuf:"bytes,103,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UcUserHomeListResponse) Reset() {
	*x = UcUserHomeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserHomeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserHomeListResponse) ProtoMessage() {}

func (x *UcUserHomeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserHomeListResponse.ProtoReflect.Descriptor instead.
func (*UcUserHomeListResponse) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{11}
}

func (x *UcUserHomeListResponse) GetHomeUsers() []*UcUserHome {
	if x != nil {
		return x.HomeUsers
	}
	return nil
}

func (x *UcUserHomeListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UcUserHomeListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 用户登录成功信息
type UcUserLoginSuccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          *UcUser `protobuf:"bytes,101,opt,name=user,proto3" json:"user,omitempty"`                    //登录用户的信息
	Ip            string  `protobuf:"bytes,102,opt,name=ip,proto3" json:"ip,omitempty"`                        //登录用户的IP得治
	AccountCasser bool    `protobuf:"varint,103,opt,name=accountCasser,proto3" json:"accountCasser,omitempty"` //待注销账号登录标识
	Token         string  `protobuf:"bytes,104,opt,name=token,proto3" json:"token,omitempty"`                  //本次登录的token
}

func (x *UcUserLoginSuccessRequest) Reset() {
	*x = UcUserLoginSuccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_model_gen_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserLoginSuccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserLoginSuccessRequest) ProtoMessage() {}

func (x *UcUserLoginSuccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_model_gen_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserLoginSuccessRequest.ProtoReflect.Descriptor instead.
func (*UcUserLoginSuccessRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_model_gen_proto_rawDescGZIP(), []int{12}
}

func (x *UcUserLoginSuccessRequest) GetUser() *UcUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UcUserLoginSuccessRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UcUserLoginSuccessRequest) GetAccountCasser() bool {
	if x != nil {
		return x.AccountCasser
	}
	return false
}

func (x *UcUserLoginSuccessRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_uc_user_model_gen_proto protoreflect.FileDescriptor

var file_uc_user_model_gen_proto_rawDesc = []byte{
	0x0a, 0x17, 0x75, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x09, 0x0a, 0x06, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x68,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74,
	0x74, 0x70, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x72,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x74,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x77, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70,
	0x70, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x70, 0x70, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x7b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x72, 0x65, 0x61, 0x18, 0x84, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x37, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x85, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x86, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x87, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81, 0x09, 0x0a,
	0x0c, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74,
	0x70, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x74, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x77, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x7b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x80,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x72, 0x65, 0x61, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x37,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xc2, 0x01, 0x0a, 0x11, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0xae, 0x02, 0x0a, 0x14, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x6b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x6d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0e, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x58, 0x0a, 0x19, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x10, 0x55,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x49, 0x0a, 0x18, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xcf, 0x03, 0x0a, 0x15, 0x55,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcf, 0x01, 0x0a,
	0x13, 0x55, 0x63, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x0a, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a,
	0x16, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x09, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x55, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x73, 0x73, 0x65, 0x72, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x73, 0x73, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_uc_user_model_gen_proto_rawDescOnce sync.Once
	file_uc_user_model_gen_proto_rawDescData = file_uc_user_model_gen_proto_rawDesc
)

func file_uc_user_model_gen_proto_rawDescGZIP() []byte {
	file_uc_user_model_gen_proto_rawDescOnce.Do(func() {
		file_uc_user_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_uc_user_model_gen_proto_rawDescData)
	})
	return file_uc_user_model_gen_proto_rawDescData
}

var file_uc_user_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_uc_user_model_gen_proto_goTypes = []interface{}{
	(*UcUser)(nil),                    // 0: service.UcUser
	(*UcUserFilter)(nil),              // 1: service.UcUserFilter
	(*UcUserListRequest)(nil),         // 2: service.UcUserListRequest
	(*UcUserByLoginRequest)(nil),      // 3: service.UcUserByLoginRequest
	(*UcUserResponse)(nil),            // 4: service.UcUserResponse
	(*UcUserUpdateFieldsRequest)(nil), // 5: service.UcUserUpdateFieldsRequest
	(*UcUserPrimarykey)(nil),          // 6: service.UcUserPrimarykey
	(*UcUserBatchDeleteRequest)(nil),  // 7: service.UcUserBatchDeleteRequest
	(*UcUserRegisterRequest)(nil),     // 8: service.UcUserRegisterRequest
	(*UcForgetPasswordReq)(nil),       // 9: service.UcForgetPasswordReq
	(*UcUserHome)(nil),                // 10: service.UcUserHome
	(*UcUserHomeListResponse)(nil),    // 11: service.UcUserHomeListResponse
	(*UcUserLoginSuccessRequest)(nil), // 12: service.UcUserLoginSuccessRequest
	(*timestamppb.Timestamp)(nil),     // 13: google.protobuf.Timestamp
}
var file_uc_user_model_gen_proto_depIdxs = []int32{
	13, // 0: service.UcUser.loginTime:type_name -> google.protobuf.Timestamp
	13, // 1: service.UcUser.createdAt:type_name -> google.protobuf.Timestamp
	13, // 2: service.UcUser.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 3: service.UcUser.deletedAt:type_name -> google.protobuf.Timestamp
	13, // 4: service.UcUser.birthday:type_name -> google.protobuf.Timestamp
	13, // 5: service.UcUserFilter.loginTime:type_name -> google.protobuf.Timestamp
	13, // 6: service.UcUserFilter.createdAt:type_name -> google.protobuf.Timestamp
	13, // 7: service.UcUserFilter.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 8: service.UcUserFilter.deletedAt:type_name -> google.protobuf.Timestamp
	13, // 9: service.UcUserFilter.birthday:type_name -> google.protobuf.Timestamp
	0,  // 10: service.UcUserListRequest.query:type_name -> service.UcUser
	0,  // 11: service.UcUserResponse.data:type_name -> service.UcUser
	0,  // 12: service.UcUserUpdateFieldsRequest.data:type_name -> service.UcUser
	6,  // 13: service.UcUserBatchDeleteRequest.keys:type_name -> service.UcUserPrimarykey
	10, // 14: service.UcUserHomeListResponse.homeUsers:type_name -> service.UcUserHome
	0,  // 15: service.UcUserLoginSuccessRequest.user:type_name -> service.UcUser
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_uc_user_model_gen_proto_init() }
func file_uc_user_model_gen_proto_init() {
	if File_uc_user_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uc_user_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserByLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcForgetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserHome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserHomeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_model_gen_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserLoginSuccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uc_user_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_uc_user_model_gen_proto_goTypes,
		DependencyIndexes: file_uc_user_model_gen_proto_depIdxs,
		MessageInfos:      file_uc_user_model_gen_proto_msgTypes,
	}.Build()
	File_uc_user_model_gen_proto = out.File
	file_uc_user_model_gen_proto_rawDesc = nil
	file_uc_user_model_gen_proto_goTypes = nil
	file_uc_user_model_gen_proto_depIdxs = nil
}
