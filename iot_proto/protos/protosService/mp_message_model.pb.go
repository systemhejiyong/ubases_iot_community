// Code generated by protoc,2022-05-22 07:25:56. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: mp_message_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type MpMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:;comment:;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"pushType" gorm:"default:推送类型[0:站内且站外，1：站内， 2：站外];comment:推送类型[0:站内且站外，1：站内， 2：站外];size:10;"
	PushType int32 `protobuf:"varint,101,opt,name=pushType,proto3" json:"pushType,omitempty"`
	// @inject_tag: json:"messageType" gorm:"default:消息类型[0：系统提醒，1：设备提醒，....自定义];comment:消息类型[0：系统提醒，1：设备提醒，....自定义];size:10;"
	MessageType int32 `protobuf:"varint,102,opt,name=messageType,proto3" json:"messageType,omitempty"`
	// @inject_tag: json:"pushTo" gorm:"default:接收对象[数据字典配置， 比如全用户：all、user、home、device];comment:接收对象[数据字典配置， 比如全用户：all、user、home、device];size:10;"
	PushTo string `protobuf:"bytes,103,opt,name=pushTo,proto3" json:"pushTo,omitempty"`
	// @inject_tag: json:"pushMode" gorm:"default:发送模式[0:实时发送， 1：定时发送，2：轮询发送];comment:发送模式[0:实时发送， 1：定时发送，2：轮询发送];size:10;"
	PushMode int32 `protobuf:"varint,104,opt,name=pushMode,proto3" json:"pushMode,omitempty"`
	// @inject_tag: json:"pushStatus" gorm:"default:发送状态[0:已发送， 1：待发送， 2：发送失败， 3：已删除];comment:发送状态[0:已发送， 1：待发送， 2：发送失败， 3：已删除];size:10;"
	PushStatus int32 `protobuf:"varint,105,opt,name=pushStatus,proto3" json:"pushStatus,omitempty"`
	// @inject_tag: json:"agentType" gorm:"default:终端类型[0:所有终端， 1：IOS端， 2:android端];comment:终端类型[0:所有终端， 1：IOS端， 2:android端];size:10;"
	AgentType int32 `protobuf:"varint,106,opt,name=agentType,proto3" json:"agentType,omitempty"`
	// @inject_tag: json:"pushTime" gorm:"default:推送时间;comment:推送时间;"
	PushTime *timestamppb.Timestamp `protobuf:"bytes,107,opt,name=pushTime,proto3" json:"pushTime,omitempty"`
	// @inject_tag: json:"expireHour" gorm:"default:有效时间(单位小时);comment:有效时间(单位小时);size:10;"
	ExpireHour int32 `protobuf:"varint,108,opt,name=expireHour,proto3" json:"expireHour,omitempty"`
	// @inject_tag: json:"actionType" gorm:"default:行为类型[0:主动发送， 1:被动发送];comment:行为类型[0:主动发送， 1:被动发送];size:10;"
	ActionType int32 `protobuf:"varint,109,opt,name=actionType,proto3" json:"actionType,omitempty"`
	// @inject_tag: json:"tplCode" gorm:"default:消息模板编号;comment:消息模板编号;size:50;"
	TplCode string `protobuf:"bytes,110,opt,name=tplCode,proto3" json:"tplCode,omitempty"`
	// @inject_tag: json:"pushParams" gorm:"default:消息模板的参数;comment:消息模板的参数;size:255;"
	PushParams string `protobuf:"bytes,111,opt,name=pushParams,proto3" json:"pushParams,omitempty"`
	// @inject_tag: json:"targetIds" gorm:"default:推送的目标编号集合(push_to = user  为userid集合）,使用逗号分割;comment:推送的目标编号集合(push_to = user  为userid集合）,使用逗号分割;size:500;"
	TargetIds string `protobuf:"bytes,112,opt,name=targetIds,proto3" json:"targetIds,omitempty"`
	// @inject_tag: json:"did" gorm:"default:;comment:;size:14;"
	Did string `protobuf:"bytes,113,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:推送目标产品;comment:推送目标产品;size:20;"
	ProductKey string `protobuf:"bytes,114,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"content" gorm:"default:消息内容;comment:消息内容;size:255;"
	Content string `protobuf:"bytes,115,opt,name=content,proto3" json:"content,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,116,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *MpMessage) Reset() {
	*x = MpMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessage) ProtoMessage() {}

func (x *MpMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessage.ProtoReflect.Descriptor instead.
func (*MpMessage) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{0}
}

func (x *MpMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MpMessage) GetPushType() int32 {
	if x != nil {
		return x.PushType
	}
	return 0
}

func (x *MpMessage) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MpMessage) GetPushTo() string {
	if x != nil {
		return x.PushTo
	}
	return ""
}

func (x *MpMessage) GetPushMode() int32 {
	if x != nil {
		return x.PushMode
	}
	return 0
}

func (x *MpMessage) GetPushStatus() int32 {
	if x != nil {
		return x.PushStatus
	}
	return 0
}

func (x *MpMessage) GetAgentType() int32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *MpMessage) GetPushTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PushTime
	}
	return nil
}

func (x *MpMessage) GetExpireHour() int32 {
	if x != nil {
		return x.ExpireHour
	}
	return 0
}

func (x *MpMessage) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *MpMessage) GetTplCode() string {
	if x != nil {
		return x.TplCode
	}
	return ""
}

func (x *MpMessage) GetPushParams() string {
	if x != nil {
		return x.PushParams
	}
	return ""
}

func (x *MpMessage) GetTargetIds() string {
	if x != nil {
		return x.TargetIds
	}
	return ""
}

func (x *MpMessage) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MpMessage) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *MpMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MpMessage) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *MpMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type MpMessageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:;comment:;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"pushType" gorm:"default:推送类型[0:站内且站外，1：站内， 2：站外];comment:推送类型[0:站内且站外，1：站内， 2：站外];size:10;"
	PushType int32 `protobuf:"varint,101,opt,name=pushType,proto3" json:"pushType,omitempty"`
	// @inject_tag: json:"messageType" gorm:"default:消息类型[0：系统提醒，1：设备提醒，....自定义];comment:消息类型[0：系统提醒，1：设备提醒，....自定义];size:10;"
	MessageType int32 `protobuf:"varint,102,opt,name=messageType,proto3" json:"messageType,omitempty"`
	// @inject_tag: json:"pushTo" gorm:"default:接收对象[数据字典配置， 比如全用户：all、user、home、device];comment:接收对象[数据字典配置， 比如全用户：all、user、home、device];size:10;"
	PushTo string `protobuf:"bytes,103,opt,name=pushTo,proto3" json:"pushTo,omitempty"`
	// @inject_tag: json:"pushMode" gorm:"default:发送模式[0:实时发送， 1：定时发送，2：轮询发送];comment:发送模式[0:实时发送， 1：定时发送，2：轮询发送];size:10;"
	PushMode int32 `protobuf:"varint,104,opt,name=pushMode,proto3" json:"pushMode,omitempty"`
	// @inject_tag: json:"pushStatus" gorm:"default:发送状态[0:已发送， 1：待发送， 2：发送失败， 3：已删除];comment:发送状态[0:已发送， 1：待发送， 2：发送失败， 3：已删除];size:10;"
	PushStatus int32 `protobuf:"varint,105,opt,name=pushStatus,proto3" json:"pushStatus,omitempty"`
	// @inject_tag: json:"agentType" gorm:"default:终端类型[0:所有终端， 1：IOS端， 2:android端];comment:终端类型[0:所有终端， 1：IOS端， 2:android端];size:10;"
	AgentType int32 `protobuf:"varint,106,opt,name=agentType,proto3" json:"agentType,omitempty"`
	// @inject_tag: json:"pushTime" gorm:"default:推送时间;comment:推送时间;"
	PushTime *timestamppb.Timestamp `protobuf:"bytes,107,opt,name=pushTime,proto3" json:"pushTime,omitempty"`
	// @inject_tag: json:"expireHour" gorm:"default:有效时间(单位小时);comment:有效时间(单位小时);size:10;"
	ExpireHour int32 `protobuf:"varint,108,opt,name=expireHour,proto3" json:"expireHour,omitempty"`
	// @inject_tag: json:"actionType" gorm:"default:行为类型[0:主动发送， 1:被动发送];comment:行为类型[0:主动发送， 1:被动发送];size:10;"
	ActionType int32 `protobuf:"varint,109,opt,name=actionType,proto3" json:"actionType,omitempty"`
	// @inject_tag: json:"tplCode" gorm:"default:消息模板编号;comment:消息模板编号;size:50;"
	TplCode string `protobuf:"bytes,110,opt,name=tplCode,proto3" json:"tplCode,omitempty"`
	// @inject_tag: json:"pushParams" gorm:"default:消息模板的参数;comment:消息模板的参数;size:255;"
	PushParams string `protobuf:"bytes,111,opt,name=pushParams,proto3" json:"pushParams,omitempty"`
	// @inject_tag: json:"targetIds" gorm:"default:推送的目标编号集合(push_to = user  为userid集合）,使用逗号分割;comment:推送的目标编号集合(push_to = user  为userid集合）,使用逗号分割;size:500;"
	TargetIds string `protobuf:"bytes,112,opt,name=targetIds,proto3" json:"targetIds,omitempty"`
	// @inject_tag: json:"did" gorm:"default:;comment:;size:14;"
	Did string `protobuf:"bytes,113,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:推送目标产品;comment:推送目标产品;size:20;"
	ProductKey string `protobuf:"bytes,114,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"content" gorm:"default:消息内容;comment:消息内容;size:255;"
	Content string `protobuf:"bytes,115,opt,name=content,proto3" json:"content,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,116,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *MpMessageFilter) Reset() {
	*x = MpMessageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessageFilter) ProtoMessage() {}

func (x *MpMessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessageFilter.ProtoReflect.Descriptor instead.
func (*MpMessageFilter) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{1}
}

func (x *MpMessageFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MpMessageFilter) GetPushType() int32 {
	if x != nil {
		return x.PushType
	}
	return 0
}

func (x *MpMessageFilter) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MpMessageFilter) GetPushTo() string {
	if x != nil {
		return x.PushTo
	}
	return ""
}

func (x *MpMessageFilter) GetPushMode() int32 {
	if x != nil {
		return x.PushMode
	}
	return 0
}

func (x *MpMessageFilter) GetPushStatus() int32 {
	if x != nil {
		return x.PushStatus
	}
	return 0
}

func (x *MpMessageFilter) GetAgentType() int32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *MpMessageFilter) GetPushTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PushTime
	}
	return nil
}

func (x *MpMessageFilter) GetExpireHour() int32 {
	if x != nil {
		return x.ExpireHour
	}
	return 0
}

func (x *MpMessageFilter) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *MpMessageFilter) GetTplCode() string {
	if x != nil {
		return x.TplCode
	}
	return ""
}

func (x *MpMessageFilter) GetPushParams() string {
	if x != nil {
		return x.PushParams
	}
	return ""
}

func (x *MpMessageFilter) GetTargetIds() string {
	if x != nil {
		return x.TargetIds
	}
	return ""
}

func (x *MpMessageFilter) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MpMessageFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *MpMessageFilter) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MpMessageFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *MpMessageFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type MpMessageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *MpMessage `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64      `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64      `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string     `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string     `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string     `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *MpMessageListRequest) Reset() {
	*x = MpMessageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessageListRequest) ProtoMessage() {}

func (x *MpMessageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessageListRequest.ProtoReflect.Descriptor instead.
func (*MpMessageListRequest) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{2}
}

func (x *MpMessageListRequest) GetQuery() *MpMessage {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *MpMessageListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MpMessageListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MpMessageListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *MpMessageListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *MpMessageListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type MpMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64        `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*MpMessage `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MpMessageResponse) Reset() {
	*x = MpMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessageResponse) ProtoMessage() {}

func (x *MpMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessageResponse.ProtoReflect.Descriptor instead.
func (*MpMessageResponse) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{3}
}

func (x *MpMessageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MpMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MpMessageResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MpMessageResponse) GetData() []*MpMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type MpMessageUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string   `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *MpMessage `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MpMessageUpdateFieldsRequest) Reset() {
	*x = MpMessageUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessageUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessageUpdateFieldsRequest) ProtoMessage() {}

func (x *MpMessageUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessageUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*MpMessageUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{4}
}

func (x *MpMessageUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *MpMessageUpdateFieldsRequest) GetData() *MpMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type MpMessagePrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MpMessagePrimarykey) Reset() {
	*x = MpMessagePrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessagePrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessagePrimarykey) ProtoMessage() {}

func (x *MpMessagePrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessagePrimarykey.ProtoReflect.Descriptor instead.
func (*MpMessagePrimarykey) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{5}
}

func (x *MpMessagePrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MpMessageBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*MpMessagePrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *MpMessageBatchDeleteRequest) Reset() {
	*x = MpMessageBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MpMessageBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MpMessageBatchDeleteRequest) ProtoMessage() {}

func (x *MpMessageBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MpMessageBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*MpMessageBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{6}
}

func (x *MpMessageBatchDeleteRequest) GetKeys() []*MpMessagePrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TplCode     string            `protobuf:"bytes,101,opt,name=tplCode,proto3" json:"tplCode,omitempty"`                                                                                       //消息模板编码
	Params      map[string]string `protobuf:"bytes,102,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //参数
	TimeUnix    int64             `protobuf:"varint,103,opt,name=timeUnix,proto3" json:"timeUnix,omitempty"`                                                                                    //时间戳
	SourceTable string            `protobuf:"bytes,104,opt,name=sourceTable,proto3" json:"sourceTable,omitempty"`                                                                               //数据原表
	SourceRowId string            `protobuf:"bytes,105,opt,name=sourceRowId,proto3" json:"sourceRowId,omitempty"`                                                                               //数据源行记录编号
	HomeId      int64             `protobuf:"varint,106,opt,name=homeId,proto3" json:"homeId,omitempty"`                                                                                        //家庭编号
	UserId      []int64           `protobuf:"varint,107,rep,packed,name=userId,proto3" json:"userId,omitempty"`                                                                                 //用户编号
	ProductKey  string            `protobuf:"bytes,108,opt,name=productKey,proto3" json:"productKey,omitempty"`                                                                                 //产品Key
	IsPublic    bool              `protobuf:"varint,109,opt,name=isPublic,proto3" json:"isPublic,omitempty"`                                                                                    //是否公共消息
	Url         string            `protobuf:"bytes,110,opt,name=url,proto3" json:"url,omitempty"`                                                                                               //外链地址
	PushTo      string            `protobuf:"bytes,111,opt,name=pushTo,proto3" json:"pushTo,omitempty"`                                                                                         //发送对象 all、user、home、device
	ChildType   int32             `protobuf:"varint,112,opt,name=childType,proto3" json:"childType,omitempty"`                                                                                  //扩展消息子类型
	Subject     string            `protobuf:"bytes,113,opt,name=subject,proto3" json:"subject,omitempty"`                                                                                       //主题
	Lang        string            `protobuf:"bytes,114,opt,name=lang,proto3" json:"lang,omitempty"`                                                                                             //语言
	AppKey      string            `protobuf:"bytes,115,opt,name=appKey,proto3" json:"appKey,omitempty"`                                                                                         //APP Key
	TenantId    string            `protobuf:"bytes,116,opt,name=tenantId,proto3" json:"tenantId,omitempty"`                                                                                     //开发者租户编号
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageRequest) GetTplCode() string {
	if x != nil {
		return x.TplCode
	}
	return ""
}

func (x *SendMessageRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SendMessageRequest) GetTimeUnix() int64 {
	if x != nil {
		return x.TimeUnix
	}
	return 0
}

func (x *SendMessageRequest) GetSourceTable() string {
	if x != nil {
		return x.SourceTable
	}
	return ""
}

func (x *SendMessageRequest) GetSourceRowId() string {
	if x != nil {
		return x.SourceRowId
	}
	return ""
}

func (x *SendMessageRequest) GetHomeId() int64 {
	if x != nil {
		return x.HomeId
	}
	return 0
}

func (x *SendMessageRequest) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *SendMessageRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *SendMessageRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *SendMessageRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SendMessageRequest) GetPushTo() string {
	if x != nil {
		return x.PushTo
	}
	return ""
}

func (x *SendMessageRequest) GetChildType() int32 {
	if x != nil {
		return x.ChildType
	}
	return 0
}

func (x *SendMessageRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendMessageRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SendMessageRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *SendMessageRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ClearAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,101,opt,name=userId,proto3" json:"userId,omitempty"` //用户编号
	AppKey    string `protobuf:"bytes,102,opt,name=appKey,proto3" json:"appKey,omitempty"`
	TenantId  string `protobuf:"bytes,103,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	AppPushId string `protobuf:"bytes,104,opt,name=appPushId,proto3" json:"appPushId,omitempty"` //APP推送Id
}

func (x *ClearAliasRequest) Reset() {
	*x = ClearAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mp_message_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAliasRequest) ProtoMessage() {}

func (x *ClearAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mp_message_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAliasRequest.ProtoReflect.Descriptor instead.
func (*ClearAliasRequest) Descriptor() ([]byte, []int) {
	return file_mp_message_model_proto_rawDescGZIP(), []int{8}
}

func (x *ClearAliasRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClearAliasRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *ClearAliasRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ClearAliasRequest) GetAppPushId() string {
	if x != nil {
		return x.AppPushId
	}
	return ""
}

var File_mp_message_model_proto protoreflect.FileDescriptor

var file_mp_message_model_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbf, 0x04, 0x0a, 0x09, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x73, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xc5, 0x04, 0x0a, 0x0f, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x73, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18,
	0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc8, 0x01, 0x0a,
	0x14, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x7f, 0x0a, 0x11, 0x4d, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1c, 0x4d, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x13, 0x4d, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4f, 0x0a, 0x1b, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x22, 0xa0, 0x04, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x3f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x66, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x6f, 0x77, 0x49, 0x64, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x6f, 0x77,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x6d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68,
	0x49, 0x64, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mp_message_model_proto_rawDescOnce sync.Once
	file_mp_message_model_proto_rawDescData = file_mp_message_model_proto_rawDesc
)

func file_mp_message_model_proto_rawDescGZIP() []byte {
	file_mp_message_model_proto_rawDescOnce.Do(func() {
		file_mp_message_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_mp_message_model_proto_rawDescData)
	})
	return file_mp_message_model_proto_rawDescData
}

var file_mp_message_model_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_mp_message_model_proto_goTypes = []interface{}{
	(*MpMessage)(nil),                    // 0: service.MpMessage
	(*MpMessageFilter)(nil),              // 1: service.MpMessageFilter
	(*MpMessageListRequest)(nil),         // 2: service.MpMessageListRequest
	(*MpMessageResponse)(nil),            // 3: service.MpMessageResponse
	(*MpMessageUpdateFieldsRequest)(nil), // 4: service.MpMessageUpdateFieldsRequest
	(*MpMessagePrimarykey)(nil),          // 5: service.MpMessagePrimarykey
	(*MpMessageBatchDeleteRequest)(nil),  // 6: service.MpMessageBatchDeleteRequest
	(*SendMessageRequest)(nil),           // 7: service.SendMessageRequest
	(*ClearAliasRequest)(nil),            // 8: service.ClearAliasRequest
	nil,                                  // 9: service.SendMessageRequest.ParamsEntry
	(*timestamppb.Timestamp)(nil),        // 10: google.protobuf.Timestamp
}
var file_mp_message_model_proto_depIdxs = []int32{
	10, // 0: service.MpMessage.pushTime:type_name -> google.protobuf.Timestamp
	10, // 1: service.MpMessage.createdAt:type_name -> google.protobuf.Timestamp
	10, // 2: service.MpMessageFilter.pushTime:type_name -> google.protobuf.Timestamp
	10, // 3: service.MpMessageFilter.createdAt:type_name -> google.protobuf.Timestamp
	0,  // 4: service.MpMessageListRequest.query:type_name -> service.MpMessage
	0,  // 5: service.MpMessageResponse.data:type_name -> service.MpMessage
	0,  // 6: service.MpMessageUpdateFieldsRequest.data:type_name -> service.MpMessage
	5,  // 7: service.MpMessageBatchDeleteRequest.keys:type_name -> service.MpMessagePrimarykey
	9,  // 8: service.SendMessageRequest.params:type_name -> service.SendMessageRequest.ParamsEntry
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_mp_message_model_proto_init() }
func file_mp_message_model_proto_init() {
	if File_mp_message_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mp_message_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessageUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessagePrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MpMessageBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mp_message_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mp_message_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mp_message_model_proto_goTypes,
		DependencyIndexes: file_mp_message_model_proto_depIdxs,
		MessageInfos:      file_mp_message_model_proto_msgTypes,
	}.Build()
	File_mp_message_model_proto = out.File
	file_mp_message_model_proto_rawDesc = nil
	file_mp_message_model_proto_goTypes = nil
	file_mp_message_model_proto_depIdxs = nil
}
