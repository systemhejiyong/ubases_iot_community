// Code generated by sgen.exe,2022-04-21 14:24:40. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: iot_device_triad_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type IotDeviceTriad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户编号;comment:租户编号;size:19;"
	TenantId string `protobuf:"bytes,101,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:开发者用户;comment:开发者用户;size:19;"
	UserId int64 `protobuf:"varint,102,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:36;"
	Did string `protobuf:"bytes,103,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:设备型号;comment:设备型号;size:20;"
	ProductKey string `protobuf:"bytes,104,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:14;"
	UserName string `protobuf:"bytes,105,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"passward" gorm:"default:设备密码;comment:设备密码;size:50;"
	Passward string `protobuf:"bytes,106,opt,name=passward,proto3" json:"passward,omitempty"`
	// @inject_tag: json:"status" gorm:"default:三元组使用状态（=1已使用=0未使用）;comment:三元组使用状态（=1已使用=0未使用）;size:10;"
	Status int32 `protobuf:"varint,107,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"salt" gorm:"default:盐值;comment:盐值;size:20;"
	Salt string `protobuf:"bytes,108,opt,name=salt,proto3" json:"salt,omitempty"`
	// @inject_tag: json:"deviceSecret" gorm:"default:设备密钥（http）;comment:设备密钥（http）;size:20;"
	DeviceSecret string `protobuf:"bytes,109,opt,name=deviceSecret,proto3" json:"deviceSecret,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,110,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,111,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt          *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	DeviceInfo         *IotDeviceInfo         `protobuf:"bytes,115,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	ProductName        string                 `protobuf:"bytes,116,opt,name=productName,proto3" json:"productName,omitempty"`
	SerialNumber       string                 `protobuf:"bytes,117,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	UseType            int32                  `protobuf:"varint,118,opt,name=useType,proto3" json:"useType,omitempty"`                        //使用类型（=1 真实测试设备 =2 虚拟测试设备）
	ProductId          int64                  `protobuf:"varint,119,opt,name=productId,proto3" json:"productId,omitempty"`                    //产品编号（唯一标识）
	DeviceNatureKey    int32                  `protobuf:"varint,120,opt,name=deviceNatureKey,proto3" json:"deviceNatureKey,omitempty"`        //设备性质（1:直连设备，2：网关，3：网关子设备）
	IsTest             int32                  `protobuf:"varint,121,opt,name=isTest,proto3" json:"isTest,omitempty"`                          //是否测试设备
	AppName            string                 `protobuf:"bytes,122,opt,name=appName,proto3" json:"appName,omitempty"`                         //APP名称
	UserAccount        string                 `protobuf:"bytes,123,opt,name=userAccount,proto3" json:"userAccount,omitempty"`                 //用户账号
	BatchId            int32                  `protobuf:"varint,124,opt,name=batchId,proto3" json:"batchId,omitempty"`                        //批次号
	AppKey             string                 `protobuf:"bytes,125,opt,name=appKey,proto3" json:"appKey,omitempty"`                           //APPKey
	DeveloperTenantIds []string               `protobuf:"bytes,126,rep,name=developerTenantIds,proto3" json:"developerTenantIds,omitempty"`   //开发者租户集合
	QueryProductIds    []int64                `protobuf:"varint,127,rep,packed,name=queryProductIds,proto3" json:"queryProductIds,omitempty"` //查询的产品Id
	//首次激活时间
	FirstActiveTime *timestamppb.Timestamp `protobuf:"bytes,128,opt,name=firstActiveTime,proto3" json:"firstActiveTime,omitempty"`
	//导出统计数据
	ExportTime  *timestamppb.Timestamp `protobuf:"bytes,129,opt,name=exportTime,proto3" json:"exportTime,omitempty"`
	ExportCount int32                  `protobuf:"varint,130,opt,name=exportCount,proto3" json:"exportCount,omitempty"`
	//是否查询三元组
	IsQueryTriadData bool `protobuf:"varint,131,opt,name=isQueryTriadData,proto3" json:"isQueryTriadData,omitempty"`
	//指定三元组Id
	DeviceIds []string `protobuf:"bytes,132,rep,name=deviceIds,proto3" json:"deviceIds,omitempty"`
	//是否为导出数据
	IsExport bool `protobuf:"varint,133,opt,name=isExport,proto3" json:"isExport,omitempty"`
	//试试启用0批次查询
	EnableZeroBatchId bool   `protobuf:"varint,134,opt,name=enableZeroBatchId,proto3" json:"enableZeroBatchId,omitempty"`
	PlatformCode      string `protobuf:"bytes,135,opt,name=platformCode,proto3" json:"platformCode,omitempty"`        //平台编码
	IsOtherPlatform   int32  `protobuf:"varint,136,opt,name=isOtherPlatform,proto3" json:"isOtherPlatform,omitempty"` //是否其它私有化部署平台
	IsPlatform        bool   `protobuf:"varint,137,opt,name=IsPlatform,proto3" json:"IsPlatform,omitempty"`           //是否查询数据
	RegionServerId    string `protobuf:"bytes,138,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
	//导出时间列表
	ExportTimeList string `protobuf:"bytes,139,opt,name=exportTimeList,proto3" json:"exportTimeList,omitempty"`
	//查询已导出数据
	IsQueryExport int32 `protobuf:"varint,140,opt,name=isQueryExport,proto3" json:"isQueryExport,omitempty"`
}

func (x *IotDeviceTriad) Reset() {
	*x = IotDeviceTriad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriad) ProtoMessage() {}

func (x *IotDeviceTriad) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriad.ProtoReflect.Descriptor instead.
func (*IotDeviceTriad) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{0}
}

func (x *IotDeviceTriad) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceTriad) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *IotDeviceTriad) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IotDeviceTriad) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceTriad) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceTriad) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IotDeviceTriad) GetPassward() string {
	if x != nil {
		return x.Passward
	}
	return ""
}

func (x *IotDeviceTriad) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IotDeviceTriad) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *IotDeviceTriad) GetDeviceSecret() string {
	if x != nil {
		return x.DeviceSecret
	}
	return ""
}

func (x *IotDeviceTriad) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceTriad) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceTriad) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceTriad) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceTriad) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *IotDeviceTriad) GetDeviceInfo() *IotDeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *IotDeviceTriad) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *IotDeviceTriad) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *IotDeviceTriad) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *IotDeviceTriad) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceTriad) GetDeviceNatureKey() int32 {
	if x != nil {
		return x.DeviceNatureKey
	}
	return 0
}

func (x *IotDeviceTriad) GetIsTest() int32 {
	if x != nil {
		return x.IsTest
	}
	return 0
}

func (x *IotDeviceTriad) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *IotDeviceTriad) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *IotDeviceTriad) GetBatchId() int32 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *IotDeviceTriad) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *IotDeviceTriad) GetDeveloperTenantIds() []string {
	if x != nil {
		return x.DeveloperTenantIds
	}
	return nil
}

func (x *IotDeviceTriad) GetQueryProductIds() []int64 {
	if x != nil {
		return x.QueryProductIds
	}
	return nil
}

func (x *IotDeviceTriad) GetFirstActiveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstActiveTime
	}
	return nil
}

func (x *IotDeviceTriad) GetExportTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExportTime
	}
	return nil
}

func (x *IotDeviceTriad) GetExportCount() int32 {
	if x != nil {
		return x.ExportCount
	}
	return 0
}

func (x *IotDeviceTriad) GetIsQueryTriadData() bool {
	if x != nil {
		return x.IsQueryTriadData
	}
	return false
}

func (x *IotDeviceTriad) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *IotDeviceTriad) GetIsExport() bool {
	if x != nil {
		return x.IsExport
	}
	return false
}

func (x *IotDeviceTriad) GetEnableZeroBatchId() bool {
	if x != nil {
		return x.EnableZeroBatchId
	}
	return false
}

func (x *IotDeviceTriad) GetPlatformCode() string {
	if x != nil {
		return x.PlatformCode
	}
	return ""
}

func (x *IotDeviceTriad) GetIsOtherPlatform() int32 {
	if x != nil {
		return x.IsOtherPlatform
	}
	return 0
}

func (x *IotDeviceTriad) GetIsPlatform() bool {
	if x != nil {
		return x.IsPlatform
	}
	return false
}

func (x *IotDeviceTriad) GetRegionServerId() string {
	if x != nil {
		return x.RegionServerId
	}
	return ""
}

func (x *IotDeviceTriad) GetExportTimeList() string {
	if x != nil {
		return x.ExportTimeList
	}
	return ""
}

func (x *IotDeviceTriad) GetIsQueryExport() int32 {
	if x != nil {
		return x.IsQueryExport
	}
	return 0
}

type IotDeviceTriadFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户编号;comment:租户编号;size:19;"
	TenantId string `protobuf:"bytes,101,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:开发者用户;comment:开发者用户;size:19;"
	UserId int64 `protobuf:"varint,102,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:36;"
	Did string `protobuf:"bytes,103,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:设备型号;comment:设备型号;size:20;"
	ProductKey string `protobuf:"bytes,104,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:14;"
	UserName string `protobuf:"bytes,105,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"passward" gorm:"default:设备密码;comment:设备密码;size:50;"
	Passward string `protobuf:"bytes,106,opt,name=passward,proto3" json:"passward,omitempty"`
	// @inject_tag: json:"status" gorm:"default:三元组使用状态（=1已使用=0未使用）;comment:三元组使用状态（=1已使用=0未使用）;size:10;"
	Status int32 `protobuf:"varint,107,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"salt" gorm:"default:盐值;comment:盐值;size:20;"
	Salt string `protobuf:"bytes,108,opt,name=salt,proto3" json:"salt,omitempty"`
	// @inject_tag: json:"deviceSecret" gorm:"default:设备密钥（http）;comment:设备密钥（http）;size:20;"
	DeviceSecret string `protobuf:"bytes,109,opt,name=deviceSecret,proto3" json:"deviceSecret,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,110,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,111,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt       *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	UseType         int32                  `protobuf:"varint,115,opt,name=useType,proto3" json:"useType,omitempty"`                 //使用类型（=1 真实测试设备 =2 虚拟测试设备）
	ProductId       int64                  `protobuf:"varint,116,opt,name=productId,proto3" json:"productId,omitempty"`             //产品编号（唯一标识）
	DeviceNatureKey int32                  `protobuf:"varint,120,opt,name=deviceNatureKey,proto3" json:"deviceNatureKey,omitempty"` //设备性质（1:直连设备，2：网关，3：网关子设备）
	IsTest          int32                  `protobuf:"varint,121,opt,name=isTest,proto3" json:"isTest,omitempty"`                   //是否测试设备
	AppKey          string                 `protobuf:"bytes,122,opt,name=appKey,proto3" json:"appKey,omitempty"`                    //APPKey
}

func (x *IotDeviceTriadFilter) Reset() {
	*x = IotDeviceTriadFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadFilter) ProtoMessage() {}

func (x *IotDeviceTriadFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadFilter.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{1}
}

func (x *IotDeviceTriadFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetPassward() string {
	if x != nil {
		return x.Passward
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetDeviceSecret() string {
	if x != nil {
		return x.DeviceSecret
	}
	return ""
}

func (x *IotDeviceTriadFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceTriadFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceTriadFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *IotDeviceTriadFilter) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetDeviceNatureKey() int32 {
	if x != nil {
		return x.DeviceNatureKey
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetIsTest() int32 {
	if x != nil {
		return x.IsTest
	}
	return 0
}

func (x *IotDeviceTriadFilter) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

type IotDeviceTriadListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query       *IotDeviceTriad `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page        int64           `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int64           `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey    string          `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc   string          `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey   string          `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	IsOnlyCount int32           `protobuf:"varint,107,opt,name=IsOnlyCount,proto3" json:"IsOnlyCount,omitempty"`
}

func (x *IotDeviceTriadListRequest) Reset() {
	*x = IotDeviceTriadListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadListRequest) ProtoMessage() {}

func (x *IotDeviceTriadListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadListRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadListRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{2}
}

func (x *IotDeviceTriadListRequest) GetQuery() *IotDeviceTriad {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *IotDeviceTriadListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IotDeviceTriadListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IotDeviceTriadListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *IotDeviceTriadListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *IotDeviceTriadListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *IotDeviceTriadListRequest) GetIsOnlyCount() int32 {
	if x != nil {
		return x.IsOnlyCount
	}
	return 0
}

type IotDeviceTriadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64             `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*IotDeviceTriad `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceTriadResponse) Reset() {
	*x = IotDeviceTriadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadResponse) ProtoMessage() {}

func (x *IotDeviceTriadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{3}
}

func (x *IotDeviceTriadResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceTriadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceTriadResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceTriadResponse) GetData() []*IotDeviceTriad {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceTriadUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *IotDeviceTriad `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceTriadUpdateFieldsRequest) Reset() {
	*x = IotDeviceTriadUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadUpdateFieldsRequest) ProtoMessage() {}

func (x *IotDeviceTriadUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{4}
}

func (x *IotDeviceTriadUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *IotDeviceTriadUpdateFieldsRequest) GetData() *IotDeviceTriad {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceTriadCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldCode    int32  `protobuf:"varint,101,opt,name=fieldCode,proto3" json:"fieldCode,omitempty"`      // 1: 使用platformCode分组， 其它待定
	PlatformCode string `protobuf:"bytes,102,opt,name=platformCode,proto3" json:"platformCode,omitempty"` //平台码
	TenantId     string `protobuf:"bytes,103,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	ProductId    int64  `protobuf:"varint,104,opt,name=productId,proto3" json:"productId,omitempty"`
	IsExport     int32  `protobuf:"varint,105,opt,name=isExport,proto3" json:"isExport,omitempty"` // =1 获取已导出的三元组， =2 获取未导出的三元组 其它查询全部
}

func (x *IotDeviceTriadCountRequest) Reset() {
	*x = IotDeviceTriadCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadCountRequest) ProtoMessage() {}

func (x *IotDeviceTriadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadCountRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadCountRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{5}
}

func (x *IotDeviceTriadCountRequest) GetFieldCode() int32 {
	if x != nil {
		return x.FieldCode
	}
	return 0
}

func (x *IotDeviceTriadCountRequest) GetPlatformCode() string {
	if x != nil {
		return x.PlatformCode
	}
	return ""
}

func (x *IotDeviceTriadCountRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *IotDeviceTriadCountRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceTriadCountRequest) GetIsExport() int32 {
	if x != nil {
		return x.IsExport
	}
	return 0
}

type IotDeviceTriadCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*IotDeviceTriadCount `protobuf:"bytes,103,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceTriadCountResponse) Reset() {
	*x = IotDeviceTriadCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadCountResponse) ProtoMessage() {}

func (x *IotDeviceTriadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadCountResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadCountResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{6}
}

func (x *IotDeviceTriadCountResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceTriadCountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceTriadCountResponse) GetData() []*IotDeviceTriadCount {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceTriadCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,102,opt,name=key,proto3" json:"key,omitempty"`
	Value int32  `protobuf:"varint,103,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IotDeviceTriadCount) Reset() {
	*x = IotDeviceTriadCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadCount) ProtoMessage() {}

func (x *IotDeviceTriadCount) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadCount.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadCount) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{7}
}

func (x *IotDeviceTriadCount) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IotDeviceTriadCount) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type IotDeviceTriadPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotDeviceTriadPrimarykey) Reset() {
	*x = IotDeviceTriadPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadPrimarykey) ProtoMessage() {}

func (x *IotDeviceTriadPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadPrimarykey.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadPrimarykey) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{8}
}

func (x *IotDeviceTriadPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IotDeviceTriadBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*IotDeviceTriadPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *IotDeviceTriadBatchDeleteRequest) Reset() {
	*x = IotDeviceTriadBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadBatchDeleteRequest) ProtoMessage() {}

func (x *IotDeviceTriadBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{9}
}

func (x *IotDeviceTriadBatchDeleteRequest) GetKeys() []*IotDeviceTriadPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type IotDeviceTriadGenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratorChannel int32                   `protobuf:"varint,101,opt,name=generatorChannel,proto3" json:"generatorChannel,omitempty"` //升级渠道
	ProductKey       string                  `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`              //产品Key
	Number           int32                   `protobuf:"varint,103,opt,name=number,proto3" json:"number,omitempty"`                     //数量
	Batch            string                  `protobuf:"bytes,104,opt,name=batch,proto3" json:"batch,omitempty"`                        //批次
	SerialNumbers    []string                `protobuf:"bytes,105,rep,name=serialNumbers,proto3" json:"serialNumbers,omitempty"`        //序列号列表
	UseType          int32                   `protobuf:"varint,106,opt,name=useType,proto3" json:"useType,omitempty"`                   //使用类型（=1 真实测试设备 =2 虚拟测试设备）
	ProductId        int64                   `protobuf:"varint,107,opt,name=productId,proto3" json:"productId,omitempty"`               //产品编号（唯一标识）
	DeviceNatureKey  int32                   `protobuf:"varint,108,opt,name=deviceNatureKey,proto3" json:"deviceNatureKey,omitempty"`   //设备性质（1:直连设备，2：网关，3：网关子设备）
	IsTest           int32                   `protobuf:"varint,109,opt,name=isTest,proto3" json:"isTest,omitempty"`                     //是否测试
	BindInfo         *BindTestAccountRequest `protobuf:"bytes,110,opt,name=bindInfo,proto3" json:"bindInfo,omitempty"`
	DeviceImport     []*GenDeviceTriadData   `protobuf:"bytes,111,rep,name=deviceImport,proto3" json:"deviceImport,omitempty"`
	PlatformCode     string                  `protobuf:"bytes,112,opt,name=platformCode,proto3" json:"platformCode,omitempty"` //平台编码
}

func (x *IotDeviceTriadGenerateRequest) Reset() {
	*x = IotDeviceTriadGenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTriadGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTriadGenerateRequest) ProtoMessage() {}

func (x *IotDeviceTriadGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTriadGenerateRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTriadGenerateRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{10}
}

func (x *IotDeviceTriadGenerateRequest) GetGeneratorChannel() int32 {
	if x != nil {
		return x.GeneratorChannel
	}
	return 0
}

func (x *IotDeviceTriadGenerateRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceTriadGenerateRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *IotDeviceTriadGenerateRequest) GetBatch() string {
	if x != nil {
		return x.Batch
	}
	return ""
}

func (x *IotDeviceTriadGenerateRequest) GetSerialNumbers() []string {
	if x != nil {
		return x.SerialNumbers
	}
	return nil
}

func (x *IotDeviceTriadGenerateRequest) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *IotDeviceTriadGenerateRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceTriadGenerateRequest) GetDeviceNatureKey() int32 {
	if x != nil {
		return x.DeviceNatureKey
	}
	return 0
}

func (x *IotDeviceTriadGenerateRequest) GetIsTest() int32 {
	if x != nil {
		return x.IsTest
	}
	return 0
}

func (x *IotDeviceTriadGenerateRequest) GetBindInfo() *BindTestAccountRequest {
	if x != nil {
		return x.BindInfo
	}
	return nil
}

func (x *IotDeviceTriadGenerateRequest) GetDeviceImport() []*GenDeviceTriadData {
	if x != nil {
		return x.DeviceImport
	}
	return nil
}

func (x *IotDeviceTriadGenerateRequest) GetPlatformCode() string {
	if x != nil {
		return x.PlatformCode
	}
	return ""
}

type GenDeviceTriadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn       string `protobuf:"bytes,101,opt,name=Sn,proto3" json:"Sn,omitempty"`             //序列号
	DeviceId string `protobuf:"bytes,102,opt,name=DeviceId,proto3" json:"DeviceId,omitempty"` //设备Id
	UserName string `protobuf:"bytes,103,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Password string `protobuf:"bytes,104,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *GenDeviceTriadData) Reset() {
	*x = GenDeviceTriadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenDeviceTriadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenDeviceTriadData) ProtoMessage() {}

func (x *GenDeviceTriadData) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenDeviceTriadData.ProtoReflect.Descriptor instead.
func (*GenDeviceTriadData) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{11}
}

func (x *GenDeviceTriadData) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *GenDeviceTriadData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GenDeviceTriadData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GenDeviceTriadData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SetTestTriadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId     string `protobuf:"bytes,101,opt,name=deviceId,proto3" json:"deviceId,omitempty"`          //设备编号
	ProductKey   string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`      //产品Key
	IsTest       int32  `protobuf:"varint,103,opt,name=isTest,proto3" json:"isTest,omitempty"`             //1 测试， 0 非测试
	DeviceDataId int64  `protobuf:"varint,104,opt,name=deviceDataId,proto3" json:"deviceDataId,omitempty"` //设备数据ID
}

func (x *SetTestTriadRequest) Reset() {
	*x = SetTestTriadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTestTriadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTestTriadRequest) ProtoMessage() {}

func (x *SetTestTriadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTestTriadRequest.ProtoReflect.Descriptor instead.
func (*SetTestTriadRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{12}
}

func (x *SetTestTriadRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SetTestTriadRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *SetTestTriadRequest) GetIsTest() int32 {
	if x != nil {
		return x.IsTest
	}
	return 0
}

func (x *SetTestTriadRequest) GetDeviceDataId() int64 {
	if x != nil {
		return x.DeviceDataId
	}
	return 0
}

type BindTestAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey         string `protobuf:"bytes,101,opt,name=appKey,proto3" json:"appKey,omitempty"`         //设备编号
	UserId         int64  `protobuf:"varint,102,opt,name=userId,proto3" json:"userId,omitempty"`        //用户编号
	ProductKey     string `protobuf:"bytes,103,opt,name=productKey,proto3" json:"productKey,omitempty"` //产品Key
	DeviceId       string `protobuf:"bytes,104,opt,name=deviceId,proto3" json:"deviceId,omitempty"`     //设备编号
	HomeId         int64  `protobuf:"varint,105,opt,name=homeId,proto3" json:"homeId,omitempty"`
	ProductId      int64  `protobuf:"varint,106,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductName    string `protobuf:"bytes,107,opt,name=productName,proto3" json:"productName,omitempty"`
	SecretKey      string `protobuf:"bytes,108,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	UserAccount    string `protobuf:"bytes,109,opt,name=userAccount,proto3" json:"userAccount,omitempty"`
	AppName        string `protobuf:"bytes,110,opt,name=appName,proto3" json:"appName,omitempty"`
	TenantId       string `protobuf:"bytes,111,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	PanelId        int64  `protobuf:"varint,112,opt,name=panelId,proto3" json:"panelId,omitempty"` //指定面板预览
	AppPanelType   int32  `protobuf:"varint,113,opt,name=appPanelType,proto3" json:"appPanelType,omitempty"`
	RegionServerId int64  `protobuf:"varint,114,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"` //区域服务器Id
}

func (x *BindTestAccountRequest) Reset() {
	*x = BindTestAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_triad_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindTestAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindTestAccountRequest) ProtoMessage() {}

func (x *BindTestAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_triad_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindTestAccountRequest.ProtoReflect.Descriptor instead.
func (*BindTestAccountRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_triad_model_proto_rawDescGZIP(), []int{13}
}

func (x *BindTestAccountRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *BindTestAccountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BindTestAccountRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *BindTestAccountRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *BindTestAccountRequest) GetHomeId() int64 {
	if x != nil {
		return x.HomeId
	}
	return 0
}

func (x *BindTestAccountRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BindTestAccountRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *BindTestAccountRequest) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *BindTestAccountRequest) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *BindTestAccountRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *BindTestAccountRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *BindTestAccountRequest) GetPanelId() int64 {
	if x != nil {
		return x.PanelId
	}
	return 0
}

func (x *BindTestAccountRequest) GetAppPanelType() int32 {
	if x != nil {
		return x.AppPanelType
	}
	return 0
}

func (x *BindTestAccountRequest) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

var File_iot_device_triad_model_proto protoreflect.FileDescriptor

var file_iot_device_triad_model_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x72, 0x69,
	0x61, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x69, 0x6f, 0x74, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x0b, 0x0a, 0x0e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x36, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x76, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x77, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x7c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x7e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x7f, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x45, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x10, 0x69, 0x73, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x72, 0x69, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x83, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x69, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x84, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x85, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x2d, 0x0a, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x87, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x69, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x88, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x69, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x1f, 0x0a, 0x0a, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x89, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x27, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0e, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x8b, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x69, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x90, 0x05, 0x0a, 0x14, 0x49, 0x6f,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x7a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0xf4, 0x01, 0x0a,
	0x19, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69,
	0x61, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x68, 0x0a, 0x21, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72,
	0x69, 0x61, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb4, 0x01, 0x0a, 0x1a, 0x49, 0x6f,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x7d, 0x0a, 0x1b, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x72, 0x69, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3d, 0x0a, 0x13, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a,
	0x0a, 0x18, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x20, 0x49, 0x6f,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x72, 0x69, 0x61, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xdb, 0x03, 0x0a, 0x1d, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x69, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x54,
	0x65, 0x73, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x69,
	0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x6f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x78, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x72, 0x69, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x8d, 0x01,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x54, 0x72, 0x69, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22, 0xb8, 0x03,
	0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_iot_device_triad_model_proto_rawDescOnce sync.Once
	file_iot_device_triad_model_proto_rawDescData = file_iot_device_triad_model_proto_rawDesc
)

func file_iot_device_triad_model_proto_rawDescGZIP() []byte {
	file_iot_device_triad_model_proto_rawDescOnce.Do(func() {
		file_iot_device_triad_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_device_triad_model_proto_rawDescData)
	})
	return file_iot_device_triad_model_proto_rawDescData
}

var file_iot_device_triad_model_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_iot_device_triad_model_proto_goTypes = []interface{}{
	(*IotDeviceTriad)(nil),                    // 0: service.IotDeviceTriad
	(*IotDeviceTriadFilter)(nil),              // 1: service.IotDeviceTriadFilter
	(*IotDeviceTriadListRequest)(nil),         // 2: service.IotDeviceTriadListRequest
	(*IotDeviceTriadResponse)(nil),            // 3: service.IotDeviceTriadResponse
	(*IotDeviceTriadUpdateFieldsRequest)(nil), // 4: service.IotDeviceTriadUpdateFieldsRequest
	(*IotDeviceTriadCountRequest)(nil),        // 5: service.IotDeviceTriadCountRequest
	(*IotDeviceTriadCountResponse)(nil),       // 6: service.IotDeviceTriadCountResponse
	(*IotDeviceTriadCount)(nil),               // 7: service.IotDeviceTriadCount
	(*IotDeviceTriadPrimarykey)(nil),          // 8: service.IotDeviceTriadPrimarykey
	(*IotDeviceTriadBatchDeleteRequest)(nil),  // 9: service.IotDeviceTriadBatchDeleteRequest
	(*IotDeviceTriadGenerateRequest)(nil),     // 10: service.IotDeviceTriadGenerateRequest
	(*GenDeviceTriadData)(nil),                // 11: service.GenDeviceTriadData
	(*SetTestTriadRequest)(nil),               // 12: service.SetTestTriadRequest
	(*BindTestAccountRequest)(nil),            // 13: service.BindTestAccountRequest
	(*timestamppb.Timestamp)(nil),             // 14: google.protobuf.Timestamp
	(*IotDeviceInfo)(nil),                     // 15: service.IotDeviceInfo
}
var file_iot_device_triad_model_proto_depIdxs = []int32{
	14, // 0: service.IotDeviceTriad.createdAt:type_name -> google.protobuf.Timestamp
	14, // 1: service.IotDeviceTriad.updatedAt:type_name -> google.protobuf.Timestamp
	14, // 2: service.IotDeviceTriad.deletedAt:type_name -> google.protobuf.Timestamp
	15, // 3: service.IotDeviceTriad.deviceInfo:type_name -> service.IotDeviceInfo
	14, // 4: service.IotDeviceTriad.firstActiveTime:type_name -> google.protobuf.Timestamp
	14, // 5: service.IotDeviceTriad.exportTime:type_name -> google.protobuf.Timestamp
	14, // 6: service.IotDeviceTriadFilter.createdAt:type_name -> google.protobuf.Timestamp
	14, // 7: service.IotDeviceTriadFilter.updatedAt:type_name -> google.protobuf.Timestamp
	14, // 8: service.IotDeviceTriadFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 9: service.IotDeviceTriadListRequest.query:type_name -> service.IotDeviceTriad
	0,  // 10: service.IotDeviceTriadResponse.data:type_name -> service.IotDeviceTriad
	0,  // 11: service.IotDeviceTriadUpdateFieldsRequest.data:type_name -> service.IotDeviceTriad
	7,  // 12: service.IotDeviceTriadCountResponse.data:type_name -> service.IotDeviceTriadCount
	8,  // 13: service.IotDeviceTriadBatchDeleteRequest.keys:type_name -> service.IotDeviceTriadPrimarykey
	13, // 14: service.IotDeviceTriadGenerateRequest.bindInfo:type_name -> service.BindTestAccountRequest
	11, // 15: service.IotDeviceTriadGenerateRequest.deviceImport:type_name -> service.GenDeviceTriadData
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_iot_device_triad_model_proto_init() }
func file_iot_device_triad_model_proto_init() {
	if File_iot_device_triad_model_proto != nil {
		return
	}
	file_iot_device_info_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iot_device_triad_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTriadGenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenDeviceTriadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTestTriadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_triad_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindTestAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_device_triad_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iot_device_triad_model_proto_goTypes,
		DependencyIndexes: file_iot_device_triad_model_proto_depIdxs,
		MessageInfos:      file_iot_device_triad_model_proto_msgTypes,
	}.Build()
	File_iot_device_triad_model_proto = out.File
	file_iot_device_triad_model_proto_rawDesc = nil
	file_iot_device_triad_model_proto_goTypes = nil
	file_iot_device_triad_model_proto_depIdxs = nil
}
