// Code generated by protoc,2022-04-18 21:26:14. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: uc_user_feedback_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type UcUserFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:用户ID(t_uc_user.id);comment:用户ID(t_uc_user.id);size:19;"
	UserId int64 `protobuf:"varint,101,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID(t_pm_product.id);comment:产品ID(t_pm_product.id);size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"feedbackTime" gorm:"default:反馈时间;comment:反馈时间;"
	FeedbackTime *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=feedbackTime,proto3" json:"feedbackTime,omitempty"`
	// @inject_tag: json:"feedbackContent" gorm:"default:反馈内容;comment:反馈内容;size:500;"
	FeedbackContent string `protobuf:"bytes,104,opt,name=feedbackContent,proto3" json:"feedbackContent,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[0:未处理,1:待处理,2:延期处理,3:已处理];comment:状态[0:未处理,1:待处理,2:延期处理,3:已处理];size:10;"
	Status int32 `protobuf:"varint,105,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,106,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,107,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	//图片、视频路径集合
	Pictures string `protobuf:"bytes,111,opt,name=pictures,proto3" json:"pictures,omitempty"`
	Videos   string `protobuf:"bytes,112,opt,name=videos,proto3" json:"videos,omitempty"`
	//联系人
	Contact string `protobuf:"bytes,113,opt,name=contact,proto3" json:"contact,omitempty"`
	//问题分类编号
	QuestionTypeId int64 `protobuf:"varint,114,opt,name=question_type_id,json=questionTypeId,proto3" json:"question_type_id,omitempty"`
	//产品编号
	Did string `protobuf:"bytes,115,opt,name=did,proto3" json:"did,omitempty"`
	//产品key model
	ProductKey string `protobuf:"bytes,116,opt,name=productKey,proto3" json:"productKey,omitempty"`
	//回复记录
	Records []*FollowUpRecord `protobuf:"bytes,117,rep,name=records,proto3" json:"records,omitempty"`
	//问题分类名称
	QuestionTypeName string `protobuf:"bytes,118,opt,name=question_type_name,json=questionTypeName,proto3" json:"question_type_name,omitempty"`
	//APPKey
	AppKey string `protobuf:"bytes,119,opt,name=appKey,proto3" json:"appKey,omitempty"`
	//租户编号
	TenantId string `protobuf:"bytes,120,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	//字典：time_query_mode 1= 全部 =2 最近一周 =3 最近一个月 =4 最近三个月
	TimeQueryMode int32  `protobuf:"varint,121,opt,name=timeQueryMode,proto3" json:"timeQueryMode,omitempty"`
	AppVersion    string `protobuf:"bytes,122,opt,name=appVersion,proto3" json:"appVersion,omitempty"`     // App版本
	MobileLang    string `protobuf:"bytes,123,opt,name=mobileLang,proto3" json:"mobileLang,omitempty"`     // 手机语言
	MobileModel   string `protobuf:"bytes,124,opt,name=mobileModel,proto3" json:"mobileModel,omitempty"`   // 手机型号
	MobileSystem  string `protobuf:"bytes,125,opt,name=mobileSystem,proto3" json:"mobileSystem,omitempty"` // 手机系统
}

func (x *UcUserFeedback) Reset() {
	*x = UcUserFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedback) ProtoMessage() {}

func (x *UcUserFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedback.ProtoReflect.Descriptor instead.
func (*UcUserFeedback) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{0}
}

func (x *UcUserFeedback) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcUserFeedback) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UcUserFeedback) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UcUserFeedback) GetFeedbackTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FeedbackTime
	}
	return nil
}

func (x *UcUserFeedback) GetFeedbackContent() string {
	if x != nil {
		return x.FeedbackContent
	}
	return ""
}

func (x *UcUserFeedback) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UcUserFeedback) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcUserFeedback) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcUserFeedback) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcUserFeedback) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcUserFeedback) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcUserFeedback) GetPictures() string {
	if x != nil {
		return x.Pictures
	}
	return ""
}

func (x *UcUserFeedback) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

func (x *UcUserFeedback) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *UcUserFeedback) GetQuestionTypeId() int64 {
	if x != nil {
		return x.QuestionTypeId
	}
	return 0
}

func (x *UcUserFeedback) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *UcUserFeedback) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *UcUserFeedback) GetRecords() []*FollowUpRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *UcUserFeedback) GetQuestionTypeName() string {
	if x != nil {
		return x.QuestionTypeName
	}
	return ""
}

func (x *UcUserFeedback) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcUserFeedback) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UcUserFeedback) GetTimeQueryMode() int32 {
	if x != nil {
		return x.TimeQueryMode
	}
	return 0
}

func (x *UcUserFeedback) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *UcUserFeedback) GetMobileLang() string {
	if x != nil {
		return x.MobileLang
	}
	return ""
}

func (x *UcUserFeedback) GetMobileModel() string {
	if x != nil {
		return x.MobileModel
	}
	return ""
}

func (x *UcUserFeedback) GetMobileSystem() string {
	if x != nil {
		return x.MobileSystem
	}
	return ""
}

type UcUserFeedbackFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:用户ID(t_uc_user.id);comment:用户ID(t_uc_user.id);size:19;"
	UserId int64 `protobuf:"varint,101,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID(t_pm_product.id);comment:产品ID(t_pm_product.id);size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"feedbackTime" gorm:"default:反馈时间;comment:反馈时间;"
	FeedbackTime *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=feedbackTime,proto3" json:"feedbackTime,omitempty"`
	// @inject_tag: json:"feedbackContent" gorm:"default:反馈内容;comment:反馈内容;size:500;"
	FeedbackContent string `protobuf:"bytes,104,opt,name=feedbackContent,proto3" json:"feedbackContent,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态[0:未处理,1:待处理,2:延期处理,3:已处理];comment:状态[0:未处理,1:待处理,2:延期处理,3:已处理];size:10;"
	Status int32 `protobuf:"varint,105,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,106,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,107,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	//APPKey
	AppKey string `protobuf:"bytes,111,opt,name=appKey,proto3" json:"appKey,omitempty"`
	//租户编号
	TenantId string `protobuf:"bytes,112,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *UcUserFeedbackFilter) Reset() {
	*x = UcUserFeedbackFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackFilter) ProtoMessage() {}

func (x *UcUserFeedbackFilter) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackFilter.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackFilter) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{1}
}

func (x *UcUserFeedbackFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcUserFeedbackFilter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UcUserFeedbackFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UcUserFeedbackFilter) GetFeedbackTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FeedbackTime
	}
	return nil
}

func (x *UcUserFeedbackFilter) GetFeedbackContent() string {
	if x != nil {
		return x.FeedbackContent
	}
	return ""
}

func (x *UcUserFeedbackFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UcUserFeedbackFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcUserFeedbackFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcUserFeedbackFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcUserFeedbackFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcUserFeedbackFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcUserFeedbackFilter) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *UcUserFeedbackFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type UcUserFeedbackListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *UcUserFeedback `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64           `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64           `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string          `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string          `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *UcUserFeedbackListRequest) Reset() {
	*x = UcUserFeedbackListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackListRequest) ProtoMessage() {}

func (x *UcUserFeedbackListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackListRequest.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackListRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{2}
}

func (x *UcUserFeedbackListRequest) GetQuery() *UcUserFeedback {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *UcUserFeedbackListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UcUserFeedbackListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UcUserFeedbackListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *UcUserFeedbackListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type UcUserFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64             `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*UcUserFeedback `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UcUserFeedbackResponse) Reset() {
	*x = UcUserFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackResponse) ProtoMessage() {}

func (x *UcUserFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackResponse.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{3}
}

func (x *UcUserFeedbackResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UcUserFeedbackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UcUserFeedbackResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UcUserFeedbackResponse) GetData() []*UcUserFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

type UcUserFeedbackUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *UcUserFeedback `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UcUserFeedbackUpdateFieldsRequest) Reset() {
	*x = UcUserFeedbackUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackUpdateFieldsRequest) ProtoMessage() {}

func (x *UcUserFeedbackUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{4}
}

func (x *UcUserFeedbackUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UcUserFeedbackUpdateFieldsRequest) GetData() *UcUserFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type UcUserFeedbackPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UcUserFeedbackPrimarykey) Reset() {
	*x = UcUserFeedbackPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackPrimarykey) ProtoMessage() {}

func (x *UcUserFeedbackPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackPrimarykey.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackPrimarykey) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{5}
}

func (x *UcUserFeedbackPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UcUserFeedbackBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*UcUserFeedbackPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *UcUserFeedbackBatchDeleteRequest) Reset() {
	*x = UcUserFeedbackBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackBatchDeleteRequest) ProtoMessage() {}

func (x *UcUserFeedbackBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{6}
}

func (x *UcUserFeedbackBatchDeleteRequest) GetKeys() []*UcUserFeedbackPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type FollowUpRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	ReplyUser string `protobuf:"bytes,102,opt,name=replyUser,proto3" json:"replyUser,omitempty"`
	ReplyTime string `protobuf:"bytes,103,opt,name=replyTime,proto3" json:"replyTime,omitempty"`
	Content   string `protobuf:"bytes,104,opt,name=content,proto3" json:"content,omitempty"`
	//图片、视频路径集合
	Pictures string `protobuf:"bytes,105,opt,name=pictures,proto3" json:"pictures,omitempty"`
	Videos   string `protobuf:"bytes,106,opt,name=videos,proto3" json:"videos,omitempty"`
}

func (x *FollowUpRecord) Reset() {
	*x = FollowUpRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowUpRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowUpRecord) ProtoMessage() {}

func (x *FollowUpRecord) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowUpRecord.ProtoReflect.Descriptor instead.
func (*FollowUpRecord) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{7}
}

func (x *FollowUpRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FollowUpRecord) GetReplyUser() string {
	if x != nil {
		return x.ReplyUser
	}
	return ""
}

func (x *FollowUpRecord) GetReplyTime() string {
	if x != nil {
		return x.ReplyTime
	}
	return ""
}

func (x *FollowUpRecord) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FollowUpRecord) GetPictures() string {
	if x != nil {
		return x.Pictures
	}
	return ""
}

func (x *FollowUpRecord) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

type UcUserFeedbackDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32            `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message    string           `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Data       *UcUserFeedback  `protobuf:"bytes,103,opt,name=data,proto3" json:"data,omitempty"`
	DeviceInfo *DeviceInfoDto   `protobuf:"bytes,104,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"` //设备信息
	UserInfo   *UserInfoDto     `protobuf:"bytes,105,opt,name=userInfo,proto3" json:"userInfo,omitempty"`     //用户信息
	AppInfo    *AppInfoDto      `protobuf:"bytes,106,opt,name=appInfo,proto3" json:"appInfo,omitempty"`       //客户端信息
	ReplyList  []*ReplyListItem `protobuf:"bytes,107,rep,name=replyList,proto3" json:"replyList,omitempty"`   //回复列表
}

func (x *UcUserFeedbackDetailsResponse) Reset() {
	*x = UcUserFeedbackDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcUserFeedbackDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcUserFeedbackDetailsResponse) ProtoMessage() {}

func (x *UcUserFeedbackDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcUserFeedbackDetailsResponse.ProtoReflect.Descriptor instead.
func (*UcUserFeedbackDetailsResponse) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{8}
}

func (x *UcUserFeedbackDetailsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UcUserFeedbackDetailsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UcUserFeedbackDetailsResponse) GetData() *UcUserFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UcUserFeedbackDetailsResponse) GetDeviceInfo() *DeviceInfoDto {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *UcUserFeedbackDetailsResponse) GetUserInfo() *UserInfoDto {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UcUserFeedbackDetailsResponse) GetAppInfo() *AppInfoDto {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *UcUserFeedbackDetailsResponse) GetReplyList() []*ReplyListItem {
	if x != nil {
		return x.ReplyList
	}
	return nil
}

// 客户端信息
type AppInfoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName      string `protobuf:"bytes,101,opt,name=appName,proto3" json:"appName,omitempty"`           // App名称
	AppVersion   string `protobuf:"bytes,102,opt,name=appVersion,proto3" json:"appVersion,omitempty"`     // App版本
	MobileLang   string `protobuf:"bytes,103,opt,name=mobileLang,proto3" json:"mobileLang,omitempty"`     // 手机语言
	MobileModel  string `protobuf:"bytes,104,opt,name=mobileModel,proto3" json:"mobileModel,omitempty"`   // 手机型号
	MobileSystem string `protobuf:"bytes,105,opt,name=mobileSystem,proto3" json:"mobileSystem,omitempty"` // 手机系统
}

func (x *AppInfoDto) Reset() {
	*x = AppInfoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoDto) ProtoMessage() {}

func (x *AppInfoDto) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoDto.ProtoReflect.Descriptor instead.
func (*AppInfoDto) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{9}
}

func (x *AppInfoDto) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppInfoDto) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *AppInfoDto) GetMobileLang() string {
	if x != nil {
		return x.MobileLang
	}
	return ""
}

func (x *AppInfoDto) GetMobileModel() string {
	if x != nil {
		return x.MobileModel
	}
	return ""
}

func (x *AppInfoDto) GetMobileSystem() string {
	if x != nil {
		return x.MobileSystem
	}
	return ""
}

// 问题设备信息
type DeviceInfoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID        string `protobuf:"bytes,101,opt,name=deviceID,proto3" json:"deviceID,omitempty"`               // 设备ID
	DeviceName      string `protobuf:"bytes,102,opt,name=deviceName,proto3" json:"deviceName,omitempty"`           // 设备名称
	FirmwareVersion string `protobuf:"bytes,103,opt,name=firmwareVersion,proto3" json:"firmwareVersion,omitempty"` // 固件版本
}

func (x *DeviceInfoDto) Reset() {
	*x = DeviceInfoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoDto) ProtoMessage() {}

func (x *DeviceInfoDto) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoDto.ProtoReflect.Descriptor instead.
func (*DeviceInfoDto) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceInfoDto) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *DeviceInfoDto) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfoDto) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

// 回复列表
type ReplyListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`                        // 反馈回复编号
	Content       string `protobuf:"bytes,102,opt,name=content,proto3" json:"content,omitempty"`              // 反馈内容
	OperationTime int64  `protobuf:"varint,103,opt,name=operationTime,proto3" json:"operationTime,omitempty"` // 操作时间
	Operator      int64  `protobuf:"varint,104,opt,name=operator,proto3" json:"operator,omitempty"`           // 操作人
	Pictures      string `protobuf:"bytes,105,opt,name=pictures,proto3" json:"pictures,omitempty"`            // 图片
	Videos        string `protobuf:"bytes,106,opt,name=videos,proto3" json:"videos,omitempty"`                // 视频
}

func (x *ReplyListItem) Reset() {
	*x = ReplyListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyListItem) ProtoMessage() {}

func (x *ReplyListItem) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyListItem.ProtoReflect.Descriptor instead.
func (*ReplyListItem) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{11}
}

func (x *ReplyListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplyListItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyListItem) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *ReplyListItem) GetOperator() int64 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *ReplyListItem) GetPictures() string {
	if x != nil {
		return x.Pictures
	}
	return ""
}

func (x *ReplyListItem) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

// 用户信息
type UserInfoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName     string `protobuf:"bytes,101,opt,name=nickName,proto3" json:"nickName,omitempty"`          // 用户昵称
	Phone        string `protobuf:"bytes,102,opt,name=phone,proto3" json:"phone,omitempty"`                // 用户联系方式
	RegisterTime int64  `protobuf:"varint,103,opt,name=registerTime,proto3" json:"registerTime,omitempty"` // 用户注册时间
	UserAccount  string `protobuf:"bytes,104,opt,name=userAccount,proto3" json:"userAccount,omitempty"`    // 用户账号
}

func (x *UserInfoDto) Reset() {
	*x = UserInfoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_user_feedback_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoDto) ProtoMessage() {}

func (x *UserInfoDto) ProtoReflect() protoreflect.Message {
	mi := &file_uc_user_feedback_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoDto.ProtoReflect.Descriptor instead.
func (*UserInfoDto) Descriptor() ([]byte, []int) {
	return file_uc_user_feedback_model_proto_rawDescGZIP(), []int{12}
}

func (x *UserInfoDto) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserInfoDto) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfoDto) GetRegisterTime() int64 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *UserInfoDto) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

var File_uc_user_feedback_model_proto protoreflect.FileDescriptor

var file_uc_user_feedback_model_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x75, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x07, 0x0a, 0x0e, 0x55, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x73, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x75, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b,
	0x65, 0x79, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x79, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x61, 0x6e, 0x67,
	0x18, 0x7b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x61,
	0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0xfc, 0x03, 0x0a, 0x14, 0x55, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x6f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x19, 0x55, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x22, 0x89,
	0x01, 0x0a, 0x16, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x21, 0x55, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x59, 0x0a, 0x20, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0xc9, 0x02, 0x0a, 0x1d, 0x55, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x63, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74,
	0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2d, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x6b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x22, 0x75, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uc_user_feedback_model_proto_rawDescOnce sync.Once
	file_uc_user_feedback_model_proto_rawDescData = file_uc_user_feedback_model_proto_rawDesc
)

func file_uc_user_feedback_model_proto_rawDescGZIP() []byte {
	file_uc_user_feedback_model_proto_rawDescOnce.Do(func() {
		file_uc_user_feedback_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_uc_user_feedback_model_proto_rawDescData)
	})
	return file_uc_user_feedback_model_proto_rawDescData
}

var file_uc_user_feedback_model_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_uc_user_feedback_model_proto_goTypes = []interface{}{
	(*UcUserFeedback)(nil),                    // 0: service.UcUserFeedback
	(*UcUserFeedbackFilter)(nil),              // 1: service.UcUserFeedbackFilter
	(*UcUserFeedbackListRequest)(nil),         // 2: service.UcUserFeedbackListRequest
	(*UcUserFeedbackResponse)(nil),            // 3: service.UcUserFeedbackResponse
	(*UcUserFeedbackUpdateFieldsRequest)(nil), // 4: service.UcUserFeedbackUpdateFieldsRequest
	(*UcUserFeedbackPrimarykey)(nil),          // 5: service.UcUserFeedbackPrimarykey
	(*UcUserFeedbackBatchDeleteRequest)(nil),  // 6: service.UcUserFeedbackBatchDeleteRequest
	(*FollowUpRecord)(nil),                    // 7: service.FollowUpRecord
	(*UcUserFeedbackDetailsResponse)(nil),     // 8: service.UcUserFeedbackDetailsResponse
	(*AppInfoDto)(nil),                        // 9: service.AppInfoDto
	(*DeviceInfoDto)(nil),                     // 10: service.DeviceInfoDto
	(*ReplyListItem)(nil),                     // 11: service.ReplyListItem
	(*UserInfoDto)(nil),                       // 12: service.UserInfoDto
	(*timestamppb.Timestamp)(nil),             // 13: google.protobuf.Timestamp
}
var file_uc_user_feedback_model_proto_depIdxs = []int32{
	13, // 0: service.UcUserFeedback.feedbackTime:type_name -> google.protobuf.Timestamp
	13, // 1: service.UcUserFeedback.createdAt:type_name -> google.protobuf.Timestamp
	13, // 2: service.UcUserFeedback.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 3: service.UcUserFeedback.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.UcUserFeedback.records:type_name -> service.FollowUpRecord
	13, // 5: service.UcUserFeedbackFilter.feedbackTime:type_name -> google.protobuf.Timestamp
	13, // 6: service.UcUserFeedbackFilter.createdAt:type_name -> google.protobuf.Timestamp
	13, // 7: service.UcUserFeedbackFilter.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 8: service.UcUserFeedbackFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 9: service.UcUserFeedbackListRequest.query:type_name -> service.UcUserFeedback
	0,  // 10: service.UcUserFeedbackResponse.data:type_name -> service.UcUserFeedback
	0,  // 11: service.UcUserFeedbackUpdateFieldsRequest.data:type_name -> service.UcUserFeedback
	5,  // 12: service.UcUserFeedbackBatchDeleteRequest.keys:type_name -> service.UcUserFeedbackPrimarykey
	0,  // 13: service.UcUserFeedbackDetailsResponse.data:type_name -> service.UcUserFeedback
	10, // 14: service.UcUserFeedbackDetailsResponse.deviceInfo:type_name -> service.DeviceInfoDto
	12, // 15: service.UcUserFeedbackDetailsResponse.userInfo:type_name -> service.UserInfoDto
	9,  // 16: service.UcUserFeedbackDetailsResponse.appInfo:type_name -> service.AppInfoDto
	11, // 17: service.UcUserFeedbackDetailsResponse.replyList:type_name -> service.ReplyListItem
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_uc_user_feedback_model_proto_init() }
func file_uc_user_feedback_model_proto_init() {
	if File_uc_user_feedback_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uc_user_feedback_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowUpRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcUserFeedbackDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_user_feedback_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uc_user_feedback_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_uc_user_feedback_model_proto_goTypes,
		DependencyIndexes: file_uc_user_feedback_model_proto_depIdxs,
		MessageInfos:      file_uc_user_feedback_model_proto_msgTypes,
	}.Build()
	File_uc_user_feedback_model_proto = out.File
	file_uc_user_feedback_model_proto_rawDesc = nil
	file_uc_user_feedback_model_proto_goTypes = nil
	file_uc_user_feedback_model_proto_depIdxs = nil
}
