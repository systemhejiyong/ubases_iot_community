// Code generated by sgen.exe,2022-04-21 14:54:14. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: iot_device_info_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type IotDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:36;"
	Did string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID(t_cloud_product.id);comment:产品ID(t_cloud_product.id);size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"onlineStatus" gorm:"default:在线状态（0 在线 1 不在线）;comment:在线状态（0 在线 1 不在线）;size:10;"
	OnlineStatus int32 `protobuf:"varint,103,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`
	// @inject_tag: json:"deviceName" gorm:"default:设备名称;comment:设备名称;size:50;"
	DeviceName string `protobuf:"bytes,104,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	// @inject_tag: json:"deviceNature" gorm:"default:设备性质;comment:设备性质;size:50;"
	DeviceNature string `protobuf:"bytes,105,opt,name=deviceNature,proto3" json:"deviceNature,omitempty"`
	// @inject_tag: json:"sn" gorm:"default:设备SN;comment:设备SN;size:50;"
	Sn string `protobuf:"bytes,106,opt,name=sn,proto3" json:"sn,omitempty"`
	// @inject_tag: json:"batchId" gorm:"default:批次ID(t_cloud_device_batch.id);comment:批次ID(t_cloud_device_batch.id);size:19;"
	BatchId int64 `protobuf:"varint,107,opt,name=batchId,proto3" json:"batchId,omitempty"`
	// @inject_tag: json:"groupId" gorm:"default:设备组ID（t_cloud_device_group.id）;comment:设备组ID（t_cloud_device_group.id）;size:19;"
	GroupId int64 `protobuf:"varint,108,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// @inject_tag: json:"deviceModel" gorm:"default:设备型号;comment:设备型号;size:20;"
	DeviceModel string `protobuf:"bytes,109,opt,name=deviceModel,proto3" json:"deviceModel,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:14;"
	UserName string `protobuf:"bytes,110,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"passward" gorm:"default:设备密码;comment:设备密码;size:50;"
	Passward string `protobuf:"bytes,111,opt,name=passward,proto3" json:"passward,omitempty"`
	// @inject_tag: json:"salt" gorm:"default:盐值;comment:盐值;size:20;"
	Salt string `protobuf:"bytes,112,opt,name=salt,proto3" json:"salt,omitempty"`
	// @inject_tag: json:"deviceSecretHttp" gorm:"default:设备密钥（http）;comment:设备密钥（http）;size:20;"
	DeviceSecretHttp string `protobuf:"bytes,113,opt,name=deviceSecretHttp,proto3" json:"deviceSecretHttp,omitempty"`
	// @inject_tag: json:"deviceSecretMqtt" gorm:"default:设备密钥（mqtt）;comment:设备密钥（mqtt）;size:20;"
	DeviceSecretMqtt string `protobuf:"bytes,114,opt,name=deviceSecretMqtt,proto3" json:"deviceSecretMqtt,omitempty"`
	// @inject_tag: json:"ipAddress" gorm:"default:ip地址;comment:ip地址;size:20;"
	IpAddress string `protobuf:"bytes,115,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:纬度;comment:纬度;size:19;"
	Lat float64 `protobuf:"fixed64,116,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:经度;comment:经度;size:19;"
	Lng float64 `protobuf:"fixed64,117,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:国家编码;comment:国家编码;size:19;"
	Country string `protobuf:"bytes,118,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:省份编码;comment:省份编码;size:100;"
	Province string `protobuf:"bytes,119,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:城市编码;comment:城市编码;size:255;"
	City string `protobuf:"bytes,120,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:地区编码;comment:地区编码;size:255;"
	District string `protobuf:"bytes,121,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"activatedTime" gorm:"default:激活时间;comment:激活时间;size:255;"
	ActivatedTime *timestamppb.Timestamp `protobuf:"bytes,122,opt,name=activatedTime,proto3" json:"activatedTime,omitempty"`
	// @inject_tag: json:"macAddress" gorm:"default:mac地址;comment:mac地址;size:255;"
	MacAddress string `protobuf:"bytes,123,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	// @inject_tag: json:"deviceVersion" gorm:"default:设备版本;comment:设备版本;size:255;"
	DeviceVersion string `protobuf:"bytes,124,opt,name=deviceVersion,proto3" json:"deviceVersion,omitempty"`
	// @inject_tag: json:"activeStatus" gorm:"default:激活状态[0:未激活,1:已激活];comment:激活状态[0:未激活,1:已激活];size:255;"
	ActiveStatus string `protobuf:"bytes,125,opt,name=activeStatus,proto3" json:"activeStatus,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,126,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,127,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,128,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,129,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,130,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"lastActivatedTime" gorm:"default:最后激活时间;comment:最后激活时间;size:20;"
	LastActivatedTime *timestamppb.Timestamp `protobuf:"bytes,131,opt,name=lastActivatedTime,proto3" json:"lastActivatedTime,omitempty"`
	//查询开始和结束时间
	QueryStartTime     int64             `protobuf:"varint,132,opt,name=queryStartTime,proto3" json:"queryStartTime,omitempty"`
	QueryEndTime       int64             `protobuf:"varint,133,opt,name=queryEndTime,proto3" json:"queryEndTime,omitempty"`
	ProductKey         string            `protobuf:"bytes,134,opt,name=productKey,proto3" json:"productKey,omitempty"`
	FuncDescMap        map[string]string `protobuf:"bytes,135,rep,name=funcDescMap,proto3" json:"funcDescMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeveloperTenantIds []string          `protobuf:"bytes,136,rep,name=developerTenantIds,proto3" json:"developerTenantIds,omitempty"` //开发者租户集合
	UseType            int32             `protobuf:"varint,137,opt,name=useType,proto3" json:"useType,omitempty"`                      //使用类型（=1 虚拟测试设备）
	ActiveUserId       int64             `protobuf:"varint,138,opt,name=activeUserId,proto3" json:"activeUserId,omitempty"`            //激活用户信息
	RegionServerId     string            `protobuf:"bytes,139,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
}

func (x *IotDeviceInfo) Reset() {
	*x = IotDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfo) ProtoMessage() {}

func (x *IotDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfo.ProtoReflect.Descriptor instead.
func (*IotDeviceInfo) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{0}
}

func (x *IotDeviceInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceInfo) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceInfo) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceInfo) GetOnlineStatus() int32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

func (x *IotDeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *IotDeviceInfo) GetDeviceNature() string {
	if x != nil {
		return x.DeviceNature
	}
	return ""
}

func (x *IotDeviceInfo) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *IotDeviceInfo) GetBatchId() int64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *IotDeviceInfo) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *IotDeviceInfo) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *IotDeviceInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IotDeviceInfo) GetPassward() string {
	if x != nil {
		return x.Passward
	}
	return ""
}

func (x *IotDeviceInfo) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *IotDeviceInfo) GetDeviceSecretHttp() string {
	if x != nil {
		return x.DeviceSecretHttp
	}
	return ""
}

func (x *IotDeviceInfo) GetDeviceSecretMqtt() string {
	if x != nil {
		return x.DeviceSecretMqtt
	}
	return ""
}

func (x *IotDeviceInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IotDeviceInfo) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *IotDeviceInfo) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *IotDeviceInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *IotDeviceInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *IotDeviceInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IotDeviceInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *IotDeviceInfo) GetActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedTime
	}
	return nil
}

func (x *IotDeviceInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *IotDeviceInfo) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *IotDeviceInfo) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *IotDeviceInfo) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceInfo) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceInfo) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *IotDeviceInfo) GetLastActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivatedTime
	}
	return nil
}

func (x *IotDeviceInfo) GetQueryStartTime() int64 {
	if x != nil {
		return x.QueryStartTime
	}
	return 0
}

func (x *IotDeviceInfo) GetQueryEndTime() int64 {
	if x != nil {
		return x.QueryEndTime
	}
	return 0
}

func (x *IotDeviceInfo) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceInfo) GetFuncDescMap() map[string]string {
	if x != nil {
		return x.FuncDescMap
	}
	return nil
}

func (x *IotDeviceInfo) GetDeveloperTenantIds() []string {
	if x != nil {
		return x.DeveloperTenantIds
	}
	return nil
}

func (x *IotDeviceInfo) GetUseType() int32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

func (x *IotDeviceInfo) GetActiveUserId() int64 {
	if x != nil {
		return x.ActiveUserId
	}
	return 0
}

func (x *IotDeviceInfo) GetRegionServerId() string {
	if x != nil {
		return x.RegionServerId
	}
	return ""
}

type IotDeviceInfoFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:36;"
	Did string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID(t_cloud_product.id);comment:产品ID(t_cloud_product.id);size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"onlineStatus" gorm:"default:在线状态（0 在线 1 不在线）;comment:在线状态（0 在线 1 不在线）;size:10;"
	OnlineStatus int32 `protobuf:"varint,103,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`
	// @inject_tag: json:"deviceName" gorm:"default:设备名称;comment:设备名称;size:50;"
	DeviceName string `protobuf:"bytes,104,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	// @inject_tag: json:"deviceNature" gorm:"default:设备性质;comment:设备性质;size:50;"
	DeviceNature string `protobuf:"bytes,105,opt,name=deviceNature,proto3" json:"deviceNature,omitempty"`
	// @inject_tag: json:"sn" gorm:"default:设备SN;comment:设备SN;size:50;"
	Sn string `protobuf:"bytes,106,opt,name=sn,proto3" json:"sn,omitempty"`
	// @inject_tag: json:"batchId" gorm:"default:批次ID(t_cloud_device_batch.id);comment:批次ID(t_cloud_device_batch.id);size:19;"
	BatchId int64 `protobuf:"varint,107,opt,name=batchId,proto3" json:"batchId,omitempty"`
	// @inject_tag: json:"groupId" gorm:"default:设备组ID（t_cloud_device_group.id）;comment:设备组ID（t_cloud_device_group.id）;size:19;"
	GroupId int64 `protobuf:"varint,108,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// @inject_tag: json:"deviceModel" gorm:"default:设备型号;comment:设备型号;size:20;"
	DeviceModel string `protobuf:"bytes,109,opt,name=deviceModel,proto3" json:"deviceModel,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:14;"
	UserName string `protobuf:"bytes,110,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"passward" gorm:"default:设备密码;comment:设备密码;size:50;"
	Passward string `protobuf:"bytes,111,opt,name=passward,proto3" json:"passward,omitempty"`
	// @inject_tag: json:"salt" gorm:"default:盐值;comment:盐值;size:20;"
	Salt string `protobuf:"bytes,112,opt,name=salt,proto3" json:"salt,omitempty"`
	// @inject_tag: json:"deviceSecretHttp" gorm:"default:设备密钥（http）;comment:设备密钥（http）;size:20;"
	DeviceSecretHttp string `protobuf:"bytes,113,opt,name=deviceSecretHttp,proto3" json:"deviceSecretHttp,omitempty"`
	// @inject_tag: json:"deviceSecretMqtt" gorm:"default:设备密钥（mqtt）;comment:设备密钥（mqtt）;size:20;"
	DeviceSecretMqtt string `protobuf:"bytes,114,opt,name=deviceSecretMqtt,proto3" json:"deviceSecretMqtt,omitempty"`
	// @inject_tag: json:"ipAddress" gorm:"default:ip地址;comment:ip地址;size:20;"
	IpAddress string `protobuf:"bytes,115,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:纬度;comment:纬度;size:19;"
	Lat float64 `protobuf:"fixed64,116,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:经度;comment:经度;size:19;"
	Lng float64 `protobuf:"fixed64,117,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:国家编码;comment:国家编码;size:19;"
	Country string `protobuf:"bytes,118,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:省份编码;comment:省份编码;size:100;"
	Province string `protobuf:"bytes,119,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:城市编码;comment:城市编码;size:255;"
	City string `protobuf:"bytes,120,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:地区编码;comment:地区编码;size:255;"
	District string `protobuf:"bytes,121,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"activatedTime" gorm:"default:激活时间;comment:激活时间;size:255;"
	ActivatedTime *timestamppb.Timestamp `protobuf:"bytes,122,opt,name=activatedTime,proto3" json:"activatedTime,omitempty"`
	// @inject_tag: json:"macAddress" gorm:"default:mac地址;comment:mac地址;size:255;"
	MacAddress string `protobuf:"bytes,123,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	// @inject_tag: json:"deviceVersion" gorm:"default:设备版本;comment:设备版本;size:255;"
	DeviceVersion string `protobuf:"bytes,124,opt,name=deviceVersion,proto3" json:"deviceVersion,omitempty"`
	// @inject_tag: json:"activeStatus" gorm:"default:激活状态[0:未激活,1:已激活];comment:激活状态[0:未激活,1:已激活];size:255;"
	ActiveStatus string `protobuf:"bytes,125,opt,name=activeStatus,proto3" json:"activeStatus,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,126,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,127,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,128,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,129,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,130,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"lastActivatedTime" gorm:"default:最后激活时间;comment:最后激活时间;size:20;"
	LastActivatedTime *timestamppb.Timestamp `protobuf:"bytes,131,opt,name=lastActivatedTime,proto3" json:"lastActivatedTime,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:14;"
	ProductKey   string `protobuf:"bytes,132,opt,name=productKey,proto3" json:"productKey,omitempty"`
	ActiveUserId int64  `protobuf:"varint,133,opt,name=activeUserId,proto3" json:"activeUserId,omitempty"` //激活用户信息
}

func (x *IotDeviceInfoFilter) Reset() {
	*x = IotDeviceInfoFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoFilter) ProtoMessage() {}

func (x *IotDeviceInfoFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoFilter.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{1}
}

func (x *IotDeviceInfoFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetOnlineStatus() int32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetDeviceNature() string {
	if x != nil {
		return x.DeviceNature
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetBatchId() int64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetPassward() string {
	if x != nil {
		return x.Passward
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetDeviceSecretHttp() string {
	if x != nil {
		return x.DeviceSecretHttp
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetDeviceSecretMqtt() string {
	if x != nil {
		return x.DeviceSecretMqtt
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedTime
	}
	return nil
}

func (x *IotDeviceInfoFilter) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceInfoFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceInfoFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceInfoFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *IotDeviceInfoFilter) GetLastActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivatedTime
	}
	return nil
}

func (x *IotDeviceInfoFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceInfoFilter) GetActiveUserId() int64 {
	if x != nil {
		return x.ActiveUserId
	}
	return 0
}

type IotDeviceInfoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *IotDeviceInfo `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64          `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64          `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string         `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string         `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string         `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *IotDeviceInfoListRequest) Reset() {
	*x = IotDeviceInfoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoListRequest) ProtoMessage() {}

func (x *IotDeviceInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoListRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoListRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{2}
}

func (x *IotDeviceInfoListRequest) GetQuery() *IotDeviceInfo {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *IotDeviceInfoListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IotDeviceInfoListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IotDeviceInfoListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *IotDeviceInfoListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *IotDeviceInfoListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type IotDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64            `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*IotDeviceInfo `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceInfoResponse) Reset() {
	*x = IotDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoResponse) ProtoMessage() {}

func (x *IotDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{3}
}

func (x *IotDeviceInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceInfoResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceInfoResponse) GetData() []*IotDeviceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceInfoCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64               `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    *IotDeviceInfoCount `protobuf:"bytes,104,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceInfoCountResponse) Reset() {
	*x = IotDeviceInfoCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoCountResponse) ProtoMessage() {}

func (x *IotDeviceInfoCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoCountResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoCountResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{4}
}

func (x *IotDeviceInfoCountResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceInfoCountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceInfoCountResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceInfoCountResponse) GetData() *IotDeviceInfoCount {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceInfoCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveTotal int64 `protobuf:"varint,101,opt,name=activeTotal,proto3" json:"activeTotal,omitempty"` // 已绑定设备
	DeviceTotal int64 `protobuf:"varint,102,opt,name=deviceTotal,proto3" json:"deviceTotal,omitempty"` // 设备总数
	OnlineTotal int64 `protobuf:"varint,103,opt,name=onlineTotal,proto3" json:"onlineTotal,omitempty"` // 当前在线设备
}

func (x *IotDeviceInfoCount) Reset() {
	*x = IotDeviceInfoCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoCount) ProtoMessage() {}

func (x *IotDeviceInfoCount) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoCount.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoCount) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{5}
}

func (x *IotDeviceInfoCount) GetActiveTotal() int64 {
	if x != nil {
		return x.ActiveTotal
	}
	return 0
}

func (x *IotDeviceInfoCount) GetDeviceTotal() int64 {
	if x != nil {
		return x.DeviceTotal
	}
	return 0
}

func (x *IotDeviceInfoCount) GetOnlineTotal() int64 {
	if x != nil {
		return x.OnlineTotal
	}
	return 0
}

type IotDeviceInfoDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                 `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    *IotDeviceInfoDetails `protobuf:"bytes,104,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceInfoDetailsResponse) Reset() {
	*x = IotDeviceInfoDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoDetailsResponse) ProtoMessage() {}

func (x *IotDeviceInfoDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoDetailsResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoDetailsResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{6}
}

func (x *IotDeviceInfoDetailsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceInfoDetailsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceInfoDetailsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceInfoDetailsResponse) GetData() *IotDeviceInfoDetails {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceInfoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo   *IotDeviceInfoBasicInfo  `protobuf:"bytes,101,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`                                                                                             // 设备基础信息
	ActiveInfo   *IotDeviceInfoActiveInfo `protobuf:"bytes,102,opt,name=activeInfo,proto3" json:"activeInfo,omitempty"`                                                                                             // 设备激活信息
	DeviceStatus map[string]string        `protobuf:"bytes,103,rep,name=deviceStatus,proto3" json:"deviceStatus,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 设备状态信息
}

func (x *IotDeviceInfoDetails) Reset() {
	*x = IotDeviceInfoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoDetails) ProtoMessage() {}

func (x *IotDeviceInfoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoDetails.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoDetails) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{7}
}

func (x *IotDeviceInfoDetails) GetDeviceInfo() *IotDeviceInfoBasicInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *IotDeviceInfoDetails) GetActiveInfo() *IotDeviceInfoActiveInfo {
	if x != nil {
		return x.ActiveInfo
	}
	return nil
}

func (x *IotDeviceInfoDetails) GetDeviceStatus() map[string]string {
	if x != nil {
		return x.DeviceStatus
	}
	return nil
}

// 设备基础信息
type IotDeviceInfoBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,101,opt,name=id,proto3" json:"id,omitempty"`                                // 产品UUID
	Did                string `protobuf:"bytes,102,opt,name=did,proto3" json:"did,omitempty"`                               // 设备ID
	DeviceName         string `protobuf:"bytes,103,opt,name=deviceName,proto3" json:"deviceName,omitempty"`                 //设备名称
	ProductId          int64  `protobuf:"varint,104,opt,name=productId,proto3" json:"productId,omitempty"`                  //产品编号
	ProductName        string `protobuf:"bytes,105,opt,name=productName,proto3" json:"productName,omitempty"`               //产品名称
	FirmwallKey        string `protobuf:"bytes,106,opt,name=firmwallKey,proto3" json:"firmwallKey,omitempty"`               //固件KEY
	FirmwallVersion    string `protobuf:"bytes,107,opt,name=firmwallVersion,proto3" json:"firmwallVersion,omitempty"`       //固件版本
	McuFirmwallKey     string `protobuf:"bytes,108,opt,name=mcuFirmwallKey,proto3" json:"mcuFirmwallKey,omitempty"`         //MCU固件key
	McuFirmwallVersion string `protobuf:"bytes,109,opt,name=mcuFirmwallVersion,proto3" json:"mcuFirmwallVersion,omitempty"` //MCU固件版本
	ModuleSN           string `protobuf:"bytes,111,opt,name=moduleSN,proto3" json:"moduleSN,omitempty"`                     //模组SN
	ModuleVersion      string `protobuf:"bytes,112,opt,name=moduleVersion,proto3" json:"moduleVersion,omitempty"`           //模组版本
	DeviceSN           string `protobuf:"bytes,113,opt,name=deviceSN,proto3" json:"deviceSN,omitempty"`                     //设备SN
	ProductKey         string `protobuf:"bytes,114,opt,name=productKey,proto3" json:"productKey,omitempty"`                 //产品Key
	TenantId           string `protobuf:"bytes,115,opt,name=tenantId,proto3" json:"tenantId,omitempty"`                     //租户编号
}

func (x *IotDeviceInfoBasicInfo) Reset() {
	*x = IotDeviceInfoBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoBasicInfo) ProtoMessage() {}

func (x *IotDeviceInfoBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoBasicInfo.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoBasicInfo) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{8}
}

func (x *IotDeviceInfoBasicInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceInfoBasicInfo) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IotDeviceInfoBasicInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetFirmwallKey() string {
	if x != nil {
		return x.FirmwallKey
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetFirmwallVersion() string {
	if x != nil {
		return x.FirmwallVersion
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetMcuFirmwallKey() string {
	if x != nil {
		return x.McuFirmwallKey
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetMcuFirmwallVersion() string {
	if x != nil {
		return x.McuFirmwallVersion
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetModuleSN() string {
	if x != nil {
		return x.ModuleSN
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetModuleVersion() string {
	if x != nil {
		return x.ModuleVersion
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetDeviceSN() string {
	if x != nil {
		return x.DeviceSN
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceInfoBasicInfo) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 设备激活信息
type IotDeviceInfoActiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveStatus      string                 `protobuf:"bytes,101,opt,name=activeStatus,proto3" json:"activeStatus,omitempty"`           //激活状态
	ActivatedTime     *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=activatedTime,proto3" json:"activatedTime,omitempty"`         //首次激活时间
	LastActivatedTime *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=lastActivatedTime,proto3" json:"lastActivatedTime,omitempty"` //最后激活时间
	UpdateTime        *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=updateTime,proto3" json:"updateTime,omitempty"`               //修改时间
	OnlineStatus      string                 `protobuf:"bytes,105,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`           //在线状态
	ActiveUser        string                 `protobuf:"bytes,106,opt,name=activeUser,proto3" json:"activeUser,omitempty"`               //绑定用户
	ActiveApp         string                 `protobuf:"bytes,107,opt,name=activeApp,proto3" json:"activeApp,omitempty"`                 //绑定APP
	ActiveLoc         string                 `protobuf:"bytes,108,opt,name=activeLoc,proto3" json:"activeLoc,omitempty"`                 //地理位置
	ActiveChannel     string                 `protobuf:"bytes,109,opt,name=activeChannel,proto3" json:"activeChannel,omitempty"`         //渠道
	ActiveTimeZone    string                 `protobuf:"bytes,110,opt,name=activeTimeZone,proto3" json:"activeTimeZone,omitempty"`       //时区
	BelogOpenUser     string                 `protobuf:"bytes,111,opt,name=belogOpenUser,proto3" json:"belogOpenUser,omitempty"`         //归属开发者用户
}

func (x *IotDeviceInfoActiveInfo) Reset() {
	*x = IotDeviceInfoActiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoActiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoActiveInfo) ProtoMessage() {}

func (x *IotDeviceInfoActiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoActiveInfo.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoActiveInfo) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{9}
}

func (x *IotDeviceInfoActiveInfo) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedTime
	}
	return nil
}

func (x *IotDeviceInfoActiveInfo) GetLastActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivatedTime
	}
	return nil
}

func (x *IotDeviceInfoActiveInfo) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *IotDeviceInfoActiveInfo) GetOnlineStatus() string {
	if x != nil {
		return x.OnlineStatus
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetActiveUser() string {
	if x != nil {
		return x.ActiveUser
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetActiveApp() string {
	if x != nil {
		return x.ActiveApp
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetActiveLoc() string {
	if x != nil {
		return x.ActiveLoc
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetActiveChannel() string {
	if x != nil {
		return x.ActiveChannel
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetActiveTimeZone() string {
	if x != nil {
		return x.ActiveTimeZone
	}
	return ""
}

func (x *IotDeviceInfoActiveInfo) GetBelogOpenUser() string {
	if x != nil {
		return x.BelogOpenUser
	}
	return ""
}

type IotDeviceInfoUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string       `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *IotDeviceInfo `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceInfoUpdateFieldsRequest) Reset() {
	*x = IotDeviceInfoUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoUpdateFieldsRequest) ProtoMessage() {}

func (x *IotDeviceInfoUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{10}
}

func (x *IotDeviceInfoUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *IotDeviceInfoUpdateFieldsRequest) GetData() *IotDeviceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type IotDeviceInfoPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotDeviceInfoPrimarykey) Reset() {
	*x = IotDeviceInfoPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoPrimarykey) ProtoMessage() {}

func (x *IotDeviceInfoPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoPrimarykey.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoPrimarykey) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{11}
}

func (x *IotDeviceInfoPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IotDeviceInfoBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*IotDeviceInfoPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *IotDeviceInfoBatchDeleteRequest) Reset() {
	*x = IotDeviceInfoBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceInfoBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceInfoBatchDeleteRequest) ProtoMessage() {}

func (x *IotDeviceInfoBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceInfoBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceInfoBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{12}
}

func (x *IotDeviceInfoBatchDeleteRequest) GetKeys() []*IotDeviceInfoPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CurrentDeviceInfoFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,101,opt,name=userId,proto3" json:"userId,omitempty"`
	DevId     string `protobuf:"bytes,102,opt,name=devId,proto3" json:"devId,omitempty"`
	DevSecret string `protobuf:"bytes,103,opt,name=devSecret,proto3" json:"devSecret,omitempty"`
	Lang      string `protobuf:"bytes,104,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *CurrentDeviceInfoFilter) Reset() {
	*x = CurrentDeviceInfoFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentDeviceInfoFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentDeviceInfoFilter) ProtoMessage() {}

func (x *CurrentDeviceInfoFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentDeviceInfoFilter.ProtoReflect.Descriptor instead.
func (*CurrentDeviceInfoFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{13}
}

func (x *CurrentDeviceInfoFilter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CurrentDeviceInfoFilter) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *CurrentDeviceInfoFilter) GetDevSecret() string {
	if x != nil {
		return x.DevSecret
	}
	return ""
}

func (x *CurrentDeviceInfoFilter) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type CurrentDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CurrentIotDeviceInfo `protobuf:"bytes,101,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CurrentDeviceInfoResponse) Reset() {
	*x = CurrentDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentDeviceInfoResponse) ProtoMessage() {}

func (x *CurrentDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*CurrentDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{14}
}

func (x *CurrentDeviceInfoResponse) GetData() *CurrentIotDeviceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type CurrentIotDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string          `protobuf:"bytes,101,opt,name=accessToken,proto3" json:"accessToken,omitempty"` //
	Batch            string          `protobuf:"bytes,102,opt,name=batch,proto3" json:"batch,omitempty"`             //
	DevId            string          `protobuf:"bytes,103,opt,name=devId,proto3" json:"devId,omitempty"`             //
	HomeId           string          `protobuf:"bytes,104,opt,name=homeId,proto3" json:"homeId,omitempty"`           //
	Model            string          `protobuf:"bytes,105,opt,name=model,proto3" json:"model,omitempty"`             //
	Name             string          `protobuf:"bytes,106,opt,name=name,proto3" json:"name,omitempty"`               //
	NetworkMode      string          `protobuf:"bytes,107,opt,name=networkMode,proto3" json:"networkMode,omitempty"` //
	Pic              string          `protobuf:"bytes,108,opt,name=pic,proto3" json:"pic,omitempty"`                 //
	RoomId           string          `protobuf:"bytes,109,opt,name=roomId,proto3" json:"roomId,omitempty"`           //
	Secretkey        string          `protobuf:"bytes,110,opt,name=secretkey,proto3" json:"secretkey,omitempty"`     //
	Ssid             string          `protobuf:"bytes,111,opt,name=ssid,proto3" json:"ssid,omitempty"`               //
	State            int32           `protobuf:"varint,112,opt,name=state,proto3" json:"state,omitempty"`            //
	Switch           int32           `protobuf:"varint,113,opt,name=switch,proto3" json:"switch,omitempty"`          //
	MqttServer       string          `protobuf:"bytes,114,opt,name=mqttServer,proto3" json:"mqttServer,omitempty"`
	RoomName         string          `protobuf:"bytes,115,opt,name=roomName,proto3" json:"roomName,omitempty"`
	ProductId        int64           `protobuf:"varint,116,opt,name=productId,proto3" json:"productId,omitempty"`
	HomeRoomList     []*HomeRoomInfo `protobuf:"bytes,117,rep,name=homeRoomList,proto3" json:"homeRoomList,omitempty"`   //
	DeviceStatus     []byte          `protobuf:"bytes,118,opt,name=deviceStatus,proto3" json:"deviceStatus,omitempty"`   //
	ProductName      string          `protobuf:"bytes,119,opt,name=productName,proto3" json:"productName,omitempty"`     //
	ProductNameEn    string          `protobuf:"bytes,120,opt,name=productNameEn,proto3" json:"productNameEn,omitempty"` //
	DeviceVersion    string          `protobuf:"bytes,121,opt,name=deviceVersion,proto3" json:"deviceVersion,omitempty"`
	DeviceMcuVersion string          `protobuf:"bytes,122,opt,name=deviceMcuVersion,proto3" json:"deviceMcuVersion,omitempty"`
	//    repeated IotDeviceFunctionSet functionSets = 122; //功能名称设置
	FuncDescMap  map[string]string `protobuf:"bytes,123,rep,name=funcDescMap,proto3" json:"funcDescMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsShowImg    int32             `protobuf:"varint,124,opt,name=isShowImg,proto3" json:"isShowImg,omitempty"`      //是否显示图片
	PanelProImg  string            `protobuf:"bytes,125,opt,name=panelProImg,proto3" json:"panelProImg,omitempty"`   //面板产品图片
	StyleLinkage string            `protobuf:"bytes,126,opt,name=styleLinkage,proto3" json:"styleLinkage,omitempty"` //面板产品图片
}

func (x *CurrentIotDeviceInfo) Reset() {
	*x = CurrentIotDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentIotDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentIotDeviceInfo) ProtoMessage() {}

func (x *CurrentIotDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentIotDeviceInfo.ProtoReflect.Descriptor instead.
func (*CurrentIotDeviceInfo) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{15}
}

func (x *CurrentIotDeviceInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetBatch() string {
	if x != nil {
		return x.Batch
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetHomeId() string {
	if x != nil {
		return x.HomeId
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetNetworkMode() string {
	if x != nil {
		return x.NetworkMode
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetSecretkey() string {
	if x != nil {
		return x.Secretkey
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CurrentIotDeviceInfo) GetSwitch() int32 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CurrentIotDeviceInfo) GetMqttServer() string {
	if x != nil {
		return x.MqttServer
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CurrentIotDeviceInfo) GetHomeRoomList() []*HomeRoomInfo {
	if x != nil {
		return x.HomeRoomList
	}
	return nil
}

func (x *CurrentIotDeviceInfo) GetDeviceStatus() []byte {
	if x != nil {
		return x.DeviceStatus
	}
	return nil
}

func (x *CurrentIotDeviceInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetProductNameEn() string {
	if x != nil {
		return x.ProductNameEn
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetDeviceMcuVersion() string {
	if x != nil {
		return x.DeviceMcuVersion
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetFuncDescMap() map[string]string {
	if x != nil {
		return x.FuncDescMap
	}
	return nil
}

func (x *CurrentIotDeviceInfo) GetIsShowImg() int32 {
	if x != nil {
		return x.IsShowImg
	}
	return 0
}

func (x *CurrentIotDeviceInfo) GetPanelProImg() string {
	if x != nil {
		return x.PanelProImg
	}
	return ""
}

func (x *CurrentIotDeviceInfo) GetStyleLinkage() string {
	if x != nil {
		return x.StyleLinkage
	}
	return ""
}

type HomeRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64  `protobuf:"varint,101,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Name   string `protobuf:"bytes,102,opt,name=name,proto3" json:"name,omitempty"`  //
	Icon   string `protobuf:"bytes,103,opt,name=icon,proto3" json:"icon,omitempty"`  //
	Sort   int32  `protobuf:"varint,104,opt,name=sort,proto3" json:"sort,omitempty"` //
}

func (x *HomeRoomInfo) Reset() {
	*x = HomeRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRoomInfo) ProtoMessage() {}

func (x *HomeRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRoomInfo.ProtoReflect.Descriptor instead.
func (*HomeRoomInfo) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{16}
}

func (x *HomeRoomInfo) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *HomeRoomInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeRoomInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *HomeRoomInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type ActiveDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,100,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	ReportMsg string `protobuf:"bytes,101,opt,name=reportMsg,proto3" json:"reportMsg,omitempty"`
}

func (x *ActiveDeviceRequest) Reset() {
	*x = ActiveDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDeviceRequest) ProtoMessage() {}

func (x *ActiveDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDeviceRequest.ProtoReflect.Descriptor instead.
func (*ActiveDeviceRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{17}
}

func (x *ActiveDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ActiveDeviceRequest) GetReportMsg() string {
	if x != nil {
		return x.ReportMsg
	}
	return ""
}

type DeviceInfoListByDevIdsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevIds []string `protobuf:"bytes,101,rep,name=devIds,proto3" json:"devIds,omitempty"`
}

func (x *DeviceInfoListByDevIdsFilter) Reset() {
	*x = DeviceInfoListByDevIdsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoListByDevIdsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoListByDevIdsFilter) ProtoMessage() {}

func (x *DeviceInfoListByDevIdsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoListByDevIdsFilter.ProtoReflect.Descriptor instead.
func (*DeviceInfoListByDevIdsFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{18}
}

func (x *DeviceInfoListByDevIdsFilter) GetDevIds() []string {
	if x != nil {
		return x.DevIds
	}
	return nil
}

//客户自定义设备功能设置
type IotDeviceFunctionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId       string `protobuf:"bytes,101,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	ProductKey     string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	FuncKey        string `protobuf:"bytes,103,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	FuncIdentifier string `protobuf:"bytes,104,opt,name=funcIdentifier,proto3" json:"funcIdentifier,omitempty"`
	CustomType     int32  `protobuf:"varint,105,opt,name=customType,proto3" json:"customType,omitempty"`
	FuncValue      string `protobuf:"bytes,106,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	CustomDesc     string `protobuf:"bytes,107,opt,name=customDesc,proto3" json:"customDesc,omitempty"`
}

func (x *IotDeviceFunctionSet) Reset() {
	*x = IotDeviceFunctionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceFunctionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceFunctionSet) ProtoMessage() {}

func (x *IotDeviceFunctionSet) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceFunctionSet.ProtoReflect.Descriptor instead.
func (*IotDeviceFunctionSet) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{19}
}

func (x *IotDeviceFunctionSet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceFunctionSet) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotDeviceFunctionSet) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceFunctionSet) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceFunctionSet) GetFuncIdentifier() string {
	if x != nil {
		return x.FuncIdentifier
	}
	return ""
}

func (x *IotDeviceFunctionSet) GetCustomType() int32 {
	if x != nil {
		return x.CustomType
	}
	return 0
}

func (x *IotDeviceFunctionSet) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceFunctionSet) GetCustomDesc() string {
	if x != nil {
		return x.CustomDesc
	}
	return ""
}

//客户自定义设备功能设置
type IotDeviceFunctionBatchSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                             `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId       string                            `protobuf:"bytes,101,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	ProductKey     string                            `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	FuncKey        string                            `protobuf:"bytes,103,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	FuncIdentifier string                            `protobuf:"bytes,104,opt,name=funcIdentifier,proto3" json:"funcIdentifier,omitempty"`
	CustomType     int32                             `protobuf:"varint,105,opt,name=customType,proto3" json:"customType,omitempty"`
	Datas          []*IotDeviceFunctionBatchSetChild `protobuf:"bytes,106,rep,name=datas,proto3" json:"datas,omitempty"`
}

func (x *IotDeviceFunctionBatchSet) Reset() {
	*x = IotDeviceFunctionBatchSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceFunctionBatchSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceFunctionBatchSet) ProtoMessage() {}

func (x *IotDeviceFunctionBatchSet) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceFunctionBatchSet.ProtoReflect.Descriptor instead.
func (*IotDeviceFunctionBatchSet) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{20}
}

func (x *IotDeviceFunctionBatchSet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceFunctionBatchSet) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotDeviceFunctionBatchSet) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotDeviceFunctionBatchSet) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceFunctionBatchSet) GetFuncIdentifier() string {
	if x != nil {
		return x.FuncIdentifier
	}
	return ""
}

func (x *IotDeviceFunctionBatchSet) GetCustomType() int32 {
	if x != nil {
		return x.CustomType
	}
	return 0
}

func (x *IotDeviceFunctionBatchSet) GetDatas() []*IotDeviceFunctionBatchSetChild {
	if x != nil {
		return x.Datas
	}
	return nil
}

type IotDeviceFunctionBatchSetChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuncValue  string `protobuf:"bytes,101,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	CustomDesc string `protobuf:"bytes,102,opt,name=customDesc,proto3" json:"customDesc,omitempty"`
}

func (x *IotDeviceFunctionBatchSetChild) Reset() {
	*x = IotDeviceFunctionBatchSetChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceFunctionBatchSetChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceFunctionBatchSetChild) ProtoMessage() {}

func (x *IotDeviceFunctionBatchSetChild) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceFunctionBatchSetChild.ProtoReflect.Descriptor instead.
func (*IotDeviceFunctionBatchSetChild) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{21}
}

func (x *IotDeviceFunctionBatchSetChild) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceFunctionBatchSetChild) GetCustomDesc() string {
	if x != nil {
		return x.CustomDesc
	}
	return ""
}

type IotDeviceFunctionSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                   `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*IotDeviceFunctionSet `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceFunctionSetResponse) Reset() {
	*x = IotDeviceFunctionSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_info_model_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceFunctionSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceFunctionSetResponse) ProtoMessage() {}

func (x *IotDeviceFunctionSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_info_model_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceFunctionSetResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceFunctionSetResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_info_model_proto_rawDescGZIP(), []int{22}
}

func (x *IotDeviceFunctionSetResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceFunctionSetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceFunctionSetResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceFunctionSetResponse) GetData() []*IotDeviceFunctionSet {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_iot_device_info_model_proto protoreflect.FileDescriptor

var file_iot_device_info_model_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x69, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x0b, 0x0a, 0x0d, 0x49, 0x6f, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12,
	0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d,
	0x71, 0x74, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x74, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6e, 0x67, 0x18, 0x75, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x7d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x82,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x49, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65,
	0x73, 0x63, 0x4d, 0x61, 0x70, 0x18, 0x87, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x4d,
	0x61, 0x70, 0x12, 0x2f, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x88, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x89,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x8a,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x8b, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x10,
	0x46, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x99, 0x09, 0x0a,
	0x13, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x73, 0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74,
	0x74, 0x70, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x18, 0x72,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x75, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x77,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x79,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x40,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x7b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x81,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x83, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x18, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x15,
	0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x1a, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x12, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x95, 0x01, 0x0a, 0x1c, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x02,
	0x0a, 0x14, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3f,
	0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xd8, 0x03, 0x0a, 0x16, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x63, 0x75, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x63, 0x75, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79,
	0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x63, 0x75, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x63,
	0x75, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x4e, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x4e, 0x12, 0x24, 0x0a, 0x0d,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x4e, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x4e, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x72, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf9, 0x03, 0x0a, 0x17, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x70, 0x70, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x70, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f,
	0x63, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c,
	0x6f, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x6c, 0x6f, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6c, 0x6f, 0x67, 0x4f, 0x70,
	0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x20, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29,
	0x0a, 0x17, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x1f, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x22, 0x79, 0x0a, 0x17, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x76, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x4e, 0x0a,
	0x19, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x07,
	0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x76, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x68,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18,
	0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x71, 0x74, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x71, 0x74, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c,
	0x68, 0x6f, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x75, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x78,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x63, 0x75, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x7a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x63, 0x75, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x73,
	0x63, 0x4d, 0x61, 0x70, 0x18, 0x7b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6f, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x44, 0x65,
	0x73, 0x63, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63,
	0x44, 0x65, 0x73, 0x63, 0x4d, 0x61, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x68, 0x6f,
	0x77, 0x49, 0x6d, 0x67, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x53, 0x68,
	0x6f, 0x77, 0x49, 0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x72,
	0x6f, 0x49, 0x6d, 0x67, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x49, 0x6d, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x46,
	0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x0c, 0x48,
	0x6f, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22,
	0x4f, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67,
	0x22, 0x36, 0x0a, 0x1c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x44, 0x65, 0x76, 0x49, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x49, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x49, 0x64, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x14, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x66, 0x75, 0x6e, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x18, 0x6b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x22, 0x88, 0x02,
	0x0a, 0x19, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b,
	0x65, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x6a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x5e, 0x0a, 0x1e, 0x49, 0x6f, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75,
	0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x22, 0x95, 0x01, 0x0a, 0x1c, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_device_info_model_proto_rawDescOnce sync.Once
	file_iot_device_info_model_proto_rawDescData = file_iot_device_info_model_proto_rawDesc
)

func file_iot_device_info_model_proto_rawDescGZIP() []byte {
	file_iot_device_info_model_proto_rawDescOnce.Do(func() {
		file_iot_device_info_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_device_info_model_proto_rawDescData)
	})
	return file_iot_device_info_model_proto_rawDescData
}

var file_iot_device_info_model_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_iot_device_info_model_proto_goTypes = []interface{}{
	(*IotDeviceInfo)(nil),                    // 0: service.IotDeviceInfo
	(*IotDeviceInfoFilter)(nil),              // 1: service.IotDeviceInfoFilter
	(*IotDeviceInfoListRequest)(nil),         // 2: service.IotDeviceInfoListRequest
	(*IotDeviceInfoResponse)(nil),            // 3: service.IotDeviceInfoResponse
	(*IotDeviceInfoCountResponse)(nil),       // 4: service.IotDeviceInfoCountResponse
	(*IotDeviceInfoCount)(nil),               // 5: service.IotDeviceInfoCount
	(*IotDeviceInfoDetailsResponse)(nil),     // 6: service.IotDeviceInfoDetailsResponse
	(*IotDeviceInfoDetails)(nil),             // 7: service.IotDeviceInfoDetails
	(*IotDeviceInfoBasicInfo)(nil),           // 8: service.IotDeviceInfoBasicInfo
	(*IotDeviceInfoActiveInfo)(nil),          // 9: service.IotDeviceInfoActiveInfo
	(*IotDeviceInfoUpdateFieldsRequest)(nil), // 10: service.IotDeviceInfoUpdateFieldsRequest
	(*IotDeviceInfoPrimarykey)(nil),          // 11: service.IotDeviceInfoPrimarykey
	(*IotDeviceInfoBatchDeleteRequest)(nil),  // 12: service.IotDeviceInfoBatchDeleteRequest
	(*CurrentDeviceInfoFilter)(nil),          // 13: service.CurrentDeviceInfoFilter
	(*CurrentDeviceInfoResponse)(nil),        // 14: service.CurrentDeviceInfoResponse
	(*CurrentIotDeviceInfo)(nil),             // 15: service.CurrentIotDeviceInfo
	(*HomeRoomInfo)(nil),                     // 16: service.HomeRoomInfo
	(*ActiveDeviceRequest)(nil),              // 17: service.ActiveDeviceRequest
	(*DeviceInfoListByDevIdsFilter)(nil),     // 18: service.DeviceInfoListByDevIdsFilter
	(*IotDeviceFunctionSet)(nil),             // 19: service.IotDeviceFunctionSet
	(*IotDeviceFunctionBatchSet)(nil),        // 20: service.IotDeviceFunctionBatchSet
	(*IotDeviceFunctionBatchSetChild)(nil),   // 21: service.IotDeviceFunctionBatchSetChild
	(*IotDeviceFunctionSetResponse)(nil),     // 22: service.IotDeviceFunctionSetResponse
	nil,                                      // 23: service.IotDeviceInfo.FuncDescMapEntry
	nil,                                      // 24: service.IotDeviceInfoDetails.DeviceStatusEntry
	nil,                                      // 25: service.CurrentIotDeviceInfo.FuncDescMapEntry
	(*timestamppb.Timestamp)(nil),            // 26: google.protobuf.Timestamp
}
var file_iot_device_info_model_proto_depIdxs = []int32{
	26, // 0: service.IotDeviceInfo.activatedTime:type_name -> google.protobuf.Timestamp
	26, // 1: service.IotDeviceInfo.createdAt:type_name -> google.protobuf.Timestamp
	26, // 2: service.IotDeviceInfo.updatedAt:type_name -> google.protobuf.Timestamp
	26, // 3: service.IotDeviceInfo.deletedAt:type_name -> google.protobuf.Timestamp
	26, // 4: service.IotDeviceInfo.lastActivatedTime:type_name -> google.protobuf.Timestamp
	23, // 5: service.IotDeviceInfo.funcDescMap:type_name -> service.IotDeviceInfo.FuncDescMapEntry
	26, // 6: service.IotDeviceInfoFilter.activatedTime:type_name -> google.protobuf.Timestamp
	26, // 7: service.IotDeviceInfoFilter.createdAt:type_name -> google.protobuf.Timestamp
	26, // 8: service.IotDeviceInfoFilter.updatedAt:type_name -> google.protobuf.Timestamp
	26, // 9: service.IotDeviceInfoFilter.deletedAt:type_name -> google.protobuf.Timestamp
	26, // 10: service.IotDeviceInfoFilter.lastActivatedTime:type_name -> google.protobuf.Timestamp
	0,  // 11: service.IotDeviceInfoListRequest.query:type_name -> service.IotDeviceInfo
	0,  // 12: service.IotDeviceInfoResponse.data:type_name -> service.IotDeviceInfo
	5,  // 13: service.IotDeviceInfoCountResponse.data:type_name -> service.IotDeviceInfoCount
	7,  // 14: service.IotDeviceInfoDetailsResponse.data:type_name -> service.IotDeviceInfoDetails
	8,  // 15: service.IotDeviceInfoDetails.deviceInfo:type_name -> service.IotDeviceInfoBasicInfo
	9,  // 16: service.IotDeviceInfoDetails.activeInfo:type_name -> service.IotDeviceInfoActiveInfo
	24, // 17: service.IotDeviceInfoDetails.deviceStatus:type_name -> service.IotDeviceInfoDetails.DeviceStatusEntry
	26, // 18: service.IotDeviceInfoActiveInfo.activatedTime:type_name -> google.protobuf.Timestamp
	26, // 19: service.IotDeviceInfoActiveInfo.lastActivatedTime:type_name -> google.protobuf.Timestamp
	26, // 20: service.IotDeviceInfoActiveInfo.updateTime:type_name -> google.protobuf.Timestamp
	0,  // 21: service.IotDeviceInfoUpdateFieldsRequest.data:type_name -> service.IotDeviceInfo
	11, // 22: service.IotDeviceInfoBatchDeleteRequest.keys:type_name -> service.IotDeviceInfoPrimarykey
	15, // 23: service.CurrentDeviceInfoResponse.data:type_name -> service.CurrentIotDeviceInfo
	16, // 24: service.CurrentIotDeviceInfo.homeRoomList:type_name -> service.HomeRoomInfo
	25, // 25: service.CurrentIotDeviceInfo.funcDescMap:type_name -> service.CurrentIotDeviceInfo.FuncDescMapEntry
	21, // 26: service.IotDeviceFunctionBatchSet.datas:type_name -> service.IotDeviceFunctionBatchSetChild
	19, // 27: service.IotDeviceFunctionSetResponse.data:type_name -> service.IotDeviceFunctionSet
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_iot_device_info_model_proto_init() }
func file_iot_device_info_model_proto_init() {
	if File_iot_device_info_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_device_info_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoActiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceInfoBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentDeviceInfoFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentIotDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoListByDevIdsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceFunctionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceFunctionBatchSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceFunctionBatchSetChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_info_model_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceFunctionSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_device_info_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iot_device_info_model_proto_goTypes,
		DependencyIndexes: file_iot_device_info_model_proto_depIdxs,
		MessageInfos:      file_iot_device_info_model_proto_msgTypes,
	}.Build()
	File_iot_device_info_model_proto = out.File
	file_iot_device_info_model_proto_rawDesc = nil
	file_iot_device_info_model_proto_goTypes = nil
	file_iot_device_info_model_proto_depIdxs = nil
}
