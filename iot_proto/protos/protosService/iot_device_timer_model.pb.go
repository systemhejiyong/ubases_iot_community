// Code generated by protoc,2022-12-23 15:25:01. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: iot_device_timer_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type IotDeviceTimer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:编号;comment:编号;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"hour" gorm:"default:小时;comment:小时;size:2;"
	Hour string `protobuf:"bytes,101,opt,name=hour,proto3" json:"hour,omitempty"`
	// @inject_tag: json:"minute" gorm:"default:分钟;comment:分钟;size:2;"
	Minute string `protobuf:"bytes,102,opt,name=minute,proto3" json:"minute,omitempty"`
	// @inject_tag: json:"daysMode" gorm:"default:重复不重复模式;comment:重复不重复模式;"
	DaysMode int32 `protobuf:"varint,103,opt,name=daysMode,proto3" json:"daysMode,omitempty"`
	// @inject_tag: json:"weeks" gorm:"default:周，逗号分割  1,2,3,4,5,6,0;comment:周，逗号分割  1,2,3,4,5,6,0;size:20;"
	Weeks string `protobuf:"bytes,104,opt,name=weeks,proto3" json:"weeks,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:定时器描述;comment:定时器描述;size:255;"
	Remark string `protobuf:"bytes,105,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:;comment:;size:255;"
	FuncKey string `protobuf:"bytes,106,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:;comment:;size:255;"
	FuncValue string `protobuf:"bytes,107,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:;comment:;size:19;"
	UserId int64 `protobuf:"varint,108,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"deviceId" gorm:"default:设备编号;comment:设备编号;size:16;"
	DeviceId string `protobuf:"bytes,109,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// @inject_tag: json:"enabled" gorm:"default:定时器状态（=1启动 =2 禁用）;comment:定时器状态（=1启动 =2 禁用）;"
	Enabled int32 `protobuf:"varint,110,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// @inject_tag: json:"firstTime" gorm:"default:首次时间;comment:首次时间;"
	FirstTime *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=firstTime,proto3" json:"firstTime,omitempty"`
	// @inject_tag: json:"cron" gorm:"default:cron表达式，自动生成;comment:cron表达式，自动生成;size:255;"
	Cron string `protobuf:"bytes,112,opt,name=cron,proto3" json:"cron,omitempty"`
	// @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:64;"
	TaskId string `protobuf:"bytes,113,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,114,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,115,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"functions" gorm:"default:功能集合;comment:功能集合;"
	Functions string `protobuf:"bytes,118,opt,name=functions,proto3" json:"functions,omitempty"`
	// @inject_tag: json:"name" gorm:"default:名称;comment:名称;size:64;"
	Name string `protobuf:"bytes,119,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"endHour" gorm:"default:结束时间-小时;comment:结束时间-小时;size:2;"
	EndHour string `protobuf:"bytes,120,opt,name=endHour,proto3" json:"endHour,omitempty"`
	// @inject_tag: json:"endMinute" gorm:"default:结束时间-分钟;comment:结束时间-分钟;size:2;"
	EndMinute string `protobuf:"bytes,121,opt,name=endMinute,proto3" json:"endMinute,omitempty"`
	// @inject_tag: json:"endCron" gorm:"default:结束时间-cron表达式;comment:结束时间-cron表达式;size:255;"
	EndCron string `protobuf:"bytes,122,opt,name=endCron,proto3" json:"endCron,omitempty"`
	//时区
	Timezone string `protobuf:"bytes,123,opt,name=timezone,proto3" json:"timezone,omitempty"`
	//任务所属区域服务器Id
	RegionServerId int64 `protobuf:"varint,124,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
}

func (x *IotDeviceTimer) Reset() {
	*x = IotDeviceTimer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimer) ProtoMessage() {}

func (x *IotDeviceTimer) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimer.ProtoReflect.Descriptor instead.
func (*IotDeviceTimer) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{0}
}

func (x *IotDeviceTimer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceTimer) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *IotDeviceTimer) GetMinute() string {
	if x != nil {
		return x.Minute
	}
	return ""
}

func (x *IotDeviceTimer) GetDaysMode() int32 {
	if x != nil {
		return x.DaysMode
	}
	return 0
}

func (x *IotDeviceTimer) GetWeeks() string {
	if x != nil {
		return x.Weeks
	}
	return ""
}

func (x *IotDeviceTimer) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *IotDeviceTimer) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceTimer) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceTimer) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IotDeviceTimer) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotDeviceTimer) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *IotDeviceTimer) GetFirstTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstTime
	}
	return nil
}

func (x *IotDeviceTimer) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *IotDeviceTimer) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *IotDeviceTimer) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceTimer) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceTimer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceTimer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceTimer) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *IotDeviceTimer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IotDeviceTimer) GetEndHour() string {
	if x != nil {
		return x.EndHour
	}
	return ""
}

func (x *IotDeviceTimer) GetEndMinute() string {
	if x != nil {
		return x.EndMinute
	}
	return ""
}

func (x *IotDeviceTimer) GetEndCron() string {
	if x != nil {
		return x.EndCron
	}
	return ""
}

func (x *IotDeviceTimer) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *IotDeviceTimer) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type IotDeviceTimerFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:编号;comment:编号;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"hour" gorm:"default:小时;comment:小时;size:2;"
	Hour string `protobuf:"bytes,101,opt,name=hour,proto3" json:"hour,omitempty"`
	// @inject_tag: json:"minute" gorm:"default:分钟;comment:分钟;size:2;"
	Minute string `protobuf:"bytes,102,opt,name=minute,proto3" json:"minute,omitempty"`
	// @inject_tag: json:"daysMode" gorm:"default:重复不重复模式;comment:重复不重复模式;"
	DaysMode int32 `protobuf:"varint,103,opt,name=daysMode,proto3" json:"daysMode,omitempty"`
	// @inject_tag: json:"weeks" gorm:"default:周，逗号分割  1,2,3,4,5,6,0;comment:周，逗号分割  1,2,3,4,5,6,0;size:20;"
	Weeks string `protobuf:"bytes,104,opt,name=weeks,proto3" json:"weeks,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:定时器描述;comment:定时器描述;size:255;"
	Remark string `protobuf:"bytes,105,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:;comment:;size:255;"
	FuncKey string `protobuf:"bytes,106,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:;comment:;size:255;"
	FuncValue string `protobuf:"bytes,107,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:;comment:;size:19;"
	UserId int64 `protobuf:"varint,108,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"deviceId" gorm:"default:设备编号;comment:设备编号;size:16;"
	DeviceId string `protobuf:"bytes,109,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// @inject_tag: json:"enabled" gorm:"default:定时器状态（=1启动 =2 禁用）;comment:定时器状态（=1启动 =2 禁用）;"
	Enabled int32 `protobuf:"varint,110,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// @inject_tag: json:"firstTime" gorm:"default:首次时间;comment:首次时间;"
	FirstTime *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=firstTime,proto3" json:"firstTime,omitempty"`
	// @inject_tag: json:"cron" gorm:"default:cron表达式，自动生成;comment:cron表达式，自动生成;size:255;"
	Cron string `protobuf:"bytes,112,opt,name=cron,proto3" json:"cron,omitempty"`
	// @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:64;"
	TaskId string `protobuf:"bytes,113,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,114,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,115,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"functions" gorm:"default:功能集合;comment:功能集合;"
	Functions string `protobuf:"bytes,118,opt,name=functions,proto3" json:"functions,omitempty"`
	// @inject_tag: json:"name" gorm:"default:名称;comment:名称;size:64;"
	Name string `protobuf:"bytes,119,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"endHour" gorm:"default:结束时间-小时;comment:结束时间-小时;size:2;"
	EndHour string `protobuf:"bytes,120,opt,name=endHour,proto3" json:"endHour,omitempty"`
	// @inject_tag: json:"endMinute" gorm:"default:结束时间-分钟;comment:结束时间-分钟;size:2;"
	EndMinute string `protobuf:"bytes,121,opt,name=endMinute,proto3" json:"endMinute,omitempty"`
	// @inject_tag: json:"endCron" gorm:"default:结束时间-cron表达式;comment:结束时间-cron表达式;size:255;"
	EndCron string `protobuf:"bytes,122,opt,name=endCron,proto3" json:"endCron,omitempty"`
}

func (x *IotDeviceTimerFilter) Reset() {
	*x = IotDeviceTimerFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerFilter) ProtoMessage() {}

func (x *IotDeviceTimerFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerFilter.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{1}
}

func (x *IotDeviceTimerFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceTimerFilter) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetMinute() string {
	if x != nil {
		return x.Minute
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetDaysMode() int32 {
	if x != nil {
		return x.DaysMode
	}
	return 0
}

func (x *IotDeviceTimerFilter) GetWeeks() string {
	if x != nil {
		return x.Weeks
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IotDeviceTimerFilter) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *IotDeviceTimerFilter) GetFirstTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstTime
	}
	return nil
}

func (x *IotDeviceTimerFilter) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceTimerFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceTimerFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceTimerFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceTimerFilter) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetEndHour() string {
	if x != nil {
		return x.EndHour
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetEndMinute() string {
	if x != nil {
		return x.EndMinute
	}
	return ""
}

func (x *IotDeviceTimerFilter) GetEndCron() string {
	if x != nil {
		return x.EndCron
	}
	return ""
}

type IotDeviceTimerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *IotDeviceTimer `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64           `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64           `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string          `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string          `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string          `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *IotDeviceTimerListRequest) Reset() {
	*x = IotDeviceTimerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerListRequest) ProtoMessage() {}

func (x *IotDeviceTimerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerListRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerListRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{2}
}

func (x *IotDeviceTimerListRequest) GetQuery() *IotDeviceTimer {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *IotDeviceTimerListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IotDeviceTimerListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IotDeviceTimerListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *IotDeviceTimerListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *IotDeviceTimerListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type IotDeviceTimerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64             `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*IotDeviceTimer `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceTimerResponse) Reset() {
	*x = IotDeviceTimerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerResponse) ProtoMessage() {}

func (x *IotDeviceTimerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{3}
}

func (x *IotDeviceTimerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceTimerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceTimerResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceTimerResponse) GetData() []*IotDeviceTimer {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceTimerUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *IotDeviceTimer `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceTimerUpdateFieldsRequest) Reset() {
	*x = IotDeviceTimerUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerUpdateFieldsRequest) ProtoMessage() {}

func (x *IotDeviceTimerUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{4}
}

func (x *IotDeviceTimerUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *IotDeviceTimerUpdateFieldsRequest) GetData() *IotDeviceTimer {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type IotDeviceTimerPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotDeviceTimerPrimarykey) Reset() {
	*x = IotDeviceTimerPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerPrimarykey) ProtoMessage() {}

func (x *IotDeviceTimerPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerPrimarykey.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerPrimarykey) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{5}
}

func (x *IotDeviceTimerPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IotDeviceTimerBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*IotDeviceTimerPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *IotDeviceTimerBatchDeleteRequest) Reset() {
	*x = IotDeviceTimerBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerBatchDeleteRequest) ProtoMessage() {}

func (x *IotDeviceTimerBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{6}
}

func (x *IotDeviceTimerBatchDeleteRequest) GetKeys() []*IotDeviceTimerPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type IotDeviceTimerJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:编号;comment:编号;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotDeviceTimerJobReq) Reset() {
	*x = IotDeviceTimerJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_timer_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceTimerJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceTimerJobReq) ProtoMessage() {}

func (x *IotDeviceTimerJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_timer_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceTimerJobReq.ProtoReflect.Descriptor instead.
func (*IotDeviceTimerJobReq) Descriptor() ([]byte, []int) {
	return file_iot_device_timer_model_proto_rawDescGZIP(), []int{7}
}

func (x *IotDeviceTimerJobReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_iot_device_timer_model_proto protoreflect.FileDescriptor

var file_iot_device_timer_model_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x05, 0x0a, 0x0e, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x75, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x79, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x6d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e,
	0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x43, 0x72,
	0x6f, 0x6e, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x43, 0x72, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x7b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x7c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbc, 0x05, 0x0a, 0x14, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x79, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61,
	0x79, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x76, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x78, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x43, 0x72, 0x6f, 0x6e, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x43, 0x72, 0x6f, 0x6e, 0x22, 0xd2, 0x01, 0x0a, 0x19, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x49, 0x6f,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x21, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2a, 0x0a, 0x18, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x20, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_device_timer_model_proto_rawDescOnce sync.Once
	file_iot_device_timer_model_proto_rawDescData = file_iot_device_timer_model_proto_rawDesc
)

func file_iot_device_timer_model_proto_rawDescGZIP() []byte {
	file_iot_device_timer_model_proto_rawDescOnce.Do(func() {
		file_iot_device_timer_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_device_timer_model_proto_rawDescData)
	})
	return file_iot_device_timer_model_proto_rawDescData
}

var file_iot_device_timer_model_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_iot_device_timer_model_proto_goTypes = []interface{}{
	(*IotDeviceTimer)(nil),                    // 0: service.IotDeviceTimer
	(*IotDeviceTimerFilter)(nil),              // 1: service.IotDeviceTimerFilter
	(*IotDeviceTimerListRequest)(nil),         // 2: service.IotDeviceTimerListRequest
	(*IotDeviceTimerResponse)(nil),            // 3: service.IotDeviceTimerResponse
	(*IotDeviceTimerUpdateFieldsRequest)(nil), // 4: service.IotDeviceTimerUpdateFieldsRequest
	(*IotDeviceTimerPrimarykey)(nil),          // 5: service.IotDeviceTimerPrimarykey
	(*IotDeviceTimerBatchDeleteRequest)(nil),  // 6: service.IotDeviceTimerBatchDeleteRequest
	(*IotDeviceTimerJobReq)(nil),              // 7: service.IotDeviceTimerJobReq
	(*timestamppb.Timestamp)(nil),             // 8: google.protobuf.Timestamp
}
var file_iot_device_timer_model_proto_depIdxs = []int32{
	8,  // 0: service.IotDeviceTimer.firstTime:type_name -> google.protobuf.Timestamp
	8,  // 1: service.IotDeviceTimer.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 2: service.IotDeviceTimer.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 3: service.IotDeviceTimerFilter.firstTime:type_name -> google.protobuf.Timestamp
	8,  // 4: service.IotDeviceTimerFilter.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 5: service.IotDeviceTimerFilter.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.IotDeviceTimerListRequest.query:type_name -> service.IotDeviceTimer
	0,  // 7: service.IotDeviceTimerResponse.data:type_name -> service.IotDeviceTimer
	0,  // 8: service.IotDeviceTimerUpdateFieldsRequest.data:type_name -> service.IotDeviceTimer
	5,  // 9: service.IotDeviceTimerBatchDeleteRequest.keys:type_name -> service.IotDeviceTimerPrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_iot_device_timer_model_proto_init() }
func file_iot_device_timer_model_proto_init() {
	if File_iot_device_timer_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_device_timer_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_timer_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceTimerJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_device_timer_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iot_device_timer_model_proto_goTypes,
		DependencyIndexes: file_iot_device_timer_model_proto_depIdxs,
		MessageInfos:      file_iot_device_timer_model_proto_msgTypes,
	}.Build()
	File_iot_device_timer_model_proto = out.File
	file_iot_device_timer_model_proto_rawDesc = nil
	file_iot_device_timer_model_proto_goTypes = nil
	file_iot_device_timer_model_proto_depIdxs = nil
}
