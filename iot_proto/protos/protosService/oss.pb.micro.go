// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: oss.proto

package protosService

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for OssService service

func NewOssServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for OssService service

type OssService interface {
	//确认上传Id
	ConfirmUploadId(ctx context.Context, in *ConfirmRequest, opts ...client.CallOption) (*ConfirmResponse, error)
}

type ossService struct {
	c    client.Client
	name string
}

func NewOssService(name string, c client.Client) OssService {
	return &ossService{
		c:    c,
		name: name,
	}
}

func (c *ossService) ConfirmUploadId(ctx context.Context, in *ConfirmRequest, opts ...client.CallOption) (*ConfirmResponse, error) {
	req := c.c.NewRequest(c.name, "OssService.ConfirmUploadId", in)
	out := new(ConfirmResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OssService service

type OssServiceHandler interface {
	//确认上传Id
	ConfirmUploadId(context.Context, *ConfirmRequest, *ConfirmResponse) error
}

func RegisterOssServiceHandler(s server.Server, hdlr OssServiceHandler, opts ...server.HandlerOption) error {
	type ossService interface {
		ConfirmUploadId(ctx context.Context, in *ConfirmRequest, out *ConfirmResponse) error
	}
	type OssService struct {
		ossService
	}
	h := &ossServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&OssService{h}, opts...))
}

type ossServiceHandler struct {
	OssServiceHandler
}

func (h *ossServiceHandler) ConfirmUploadId(ctx context.Context, in *ConfirmRequest, out *ConfirmResponse) error {
	return h.OssServiceHandler.ConfirmUploadId(ctx, in, out)
}
