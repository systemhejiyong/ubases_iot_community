// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: statistics.proto

package protosService

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for StatisticsService service

func NewStatisticsServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for StatisticsService service

type StatisticsService interface {
	//数据统计开发者列表
	GetDeveloperList(ctx context.Context, in *DeveloperStatListRequest, opts ...client.CallOption) (*DeveloperStatListResponse, error)
	//开发者统计表查询详情
	GetDeveloperDetail(ctx context.Context, in *DeveloperDetailFilter, opts ...client.CallOption) (*DeveloperDetailResponse, error)
	GetDeveloperStatistics(ctx context.Context, in *NULL, opts ...client.CallOption) (*DeveloperStatisticsResponse, error)
	GetAppDataDetail(ctx context.Context, in *AppDataDetailFilter, opts ...client.CallOption) (*AppDataDetailResponse, error)
	GetDeviceTotalStatistics(ctx context.Context, in *NULL, opts ...client.CallOption) (*DeviceStatisticsResponse, error)
}

type statisticsService struct {
	c    client.Client
	name string
}

func NewStatisticsService(name string, c client.Client) StatisticsService {
	return &statisticsService{
		c:    c,
		name: name,
	}
}

func (c *statisticsService) GetDeveloperList(ctx context.Context, in *DeveloperStatListRequest, opts ...client.CallOption) (*DeveloperStatListResponse, error) {
	req := c.c.NewRequest(c.name, "StatisticsService.GetDeveloperList", in)
	out := new(DeveloperStatListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsService) GetDeveloperDetail(ctx context.Context, in *DeveloperDetailFilter, opts ...client.CallOption) (*DeveloperDetailResponse, error) {
	req := c.c.NewRequest(c.name, "StatisticsService.GetDeveloperDetail", in)
	out := new(DeveloperDetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsService) GetDeveloperStatistics(ctx context.Context, in *NULL, opts ...client.CallOption) (*DeveloperStatisticsResponse, error) {
	req := c.c.NewRequest(c.name, "StatisticsService.GetDeveloperStatistics", in)
	out := new(DeveloperStatisticsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsService) GetAppDataDetail(ctx context.Context, in *AppDataDetailFilter, opts ...client.CallOption) (*AppDataDetailResponse, error) {
	req := c.c.NewRequest(c.name, "StatisticsService.GetAppDataDetail", in)
	out := new(AppDataDetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsService) GetDeviceTotalStatistics(ctx context.Context, in *NULL, opts ...client.CallOption) (*DeviceStatisticsResponse, error) {
	req := c.c.NewRequest(c.name, "StatisticsService.GetDeviceTotalStatistics", in)
	out := new(DeviceStatisticsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StatisticsService service

type StatisticsServiceHandler interface {
	//数据统计开发者列表
	GetDeveloperList(context.Context, *DeveloperStatListRequest, *DeveloperStatListResponse) error
	//开发者统计表查询详情
	GetDeveloperDetail(context.Context, *DeveloperDetailFilter, *DeveloperDetailResponse) error
	GetDeveloperStatistics(context.Context, *NULL, *DeveloperStatisticsResponse) error
	GetAppDataDetail(context.Context, *AppDataDetailFilter, *AppDataDetailResponse) error
	GetDeviceTotalStatistics(context.Context, *NULL, *DeviceStatisticsResponse) error
}

func RegisterStatisticsServiceHandler(s server.Server, hdlr StatisticsServiceHandler, opts ...server.HandlerOption) error {
	type statisticsService interface {
		GetDeveloperList(ctx context.Context, in *DeveloperStatListRequest, out *DeveloperStatListResponse) error
		GetDeveloperDetail(ctx context.Context, in *DeveloperDetailFilter, out *DeveloperDetailResponse) error
		GetDeveloperStatistics(ctx context.Context, in *NULL, out *DeveloperStatisticsResponse) error
		GetAppDataDetail(ctx context.Context, in *AppDataDetailFilter, out *AppDataDetailResponse) error
		GetDeviceTotalStatistics(ctx context.Context, in *NULL, out *DeviceStatisticsResponse) error
	}
	type StatisticsService struct {
		statisticsService
	}
	h := &statisticsServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&StatisticsService{h}, opts...))
}

type statisticsServiceHandler struct {
	StatisticsServiceHandler
}

func (h *statisticsServiceHandler) GetDeveloperList(ctx context.Context, in *DeveloperStatListRequest, out *DeveloperStatListResponse) error {
	return h.StatisticsServiceHandler.GetDeveloperList(ctx, in, out)
}

func (h *statisticsServiceHandler) GetDeveloperDetail(ctx context.Context, in *DeveloperDetailFilter, out *DeveloperDetailResponse) error {
	return h.StatisticsServiceHandler.GetDeveloperDetail(ctx, in, out)
}

func (h *statisticsServiceHandler) GetDeveloperStatistics(ctx context.Context, in *NULL, out *DeveloperStatisticsResponse) error {
	return h.StatisticsServiceHandler.GetDeveloperStatistics(ctx, in, out)
}

func (h *statisticsServiceHandler) GetAppDataDetail(ctx context.Context, in *AppDataDetailFilter, out *AppDataDetailResponse) error {
	return h.StatisticsServiceHandler.GetAppDataDetail(ctx, in, out)
}

func (h *statisticsServiceHandler) GetDeviceTotalStatistics(ctx context.Context, in *NULL, out *DeviceStatisticsResponse) error {
	return h.StatisticsServiceHandler.GetDeviceTotalStatistics(ctx, in, out)
}
