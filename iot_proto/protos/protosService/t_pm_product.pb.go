// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: t_pm_product.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TPmProductFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                               //主键（雪花算法19位）
	ProductTypeId int64  `protobuf:"varint,2,opt,name=product_type_id,json=productTypeId,proto3" json:"product_type_id,omitempty"`  //产品类型ID
	ProductKey    string `protobuf:"bytes,3,opt,name=product_key,json=productKey,proto3" json:"product_key,omitempty"`              //产品唯一标识
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                            //产品名称
	NameEn        string `protobuf:"bytes,5,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                          //产品名称（英文）
	Identifier    string `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`                                //属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。
	Model         string `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`                                          //产品型号
	ImageUrl      string `protobuf:"bytes,8,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                    //产品图片
	WifiFlag      string `protobuf:"bytes,9,opt,name=wifi_flag,json=wifiFlag,proto3" json:"wifi_flag,omitempty"`                    //WIFI标识
	NetworkType   int32  `protobuf:"varint,10,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"`         //通信协议（WIFI, BLE, WIFI&#43;BLE）
	AttributeType int32  `protobuf:"varint,11,opt,name=attribute_type,json=attributeType,proto3" json:"attribute_type,omitempty"`   //设备性质（0:普通设备，1：网关设备）
	Status        int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                      //状态（0：未发布，1：已发布，2：停用）
	IsVirtualTest int32  `protobuf:"varint,13,opt,name=is_virtual_test,json=isVirtualTest,proto3" json:"is_virtual_test,omitempty"` //是否支持虚拟测试（0：否，1：是）
	Desc          string `protobuf:"bytes,14,opt,name=desc,proto3" json:"desc,omitempty"`                                           //描述
	CreatedBy     int64  `protobuf:"varint,15,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`               //创建人
	CreatedAt     string `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                //创建时间
	UpdatedBy     int64  `protobuf:"varint,17,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`               //修改人
	UpdatedAt     string `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                //修改时间
	DeletedAt     string `protobuf:"bytes,19,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                //删除的标识 0-正常 1-删除
}

func (x *TPmProductFilter) Reset() {
	*x = TPmProductFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductFilter) ProtoMessage() {}

func (x *TPmProductFilter) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductFilter.ProtoReflect.Descriptor instead.
func (*TPmProductFilter) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{0}
}

func (x *TPmProductFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TPmProductFilter) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *TPmProductFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *TPmProductFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TPmProductFilter) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *TPmProductFilter) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *TPmProductFilter) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *TPmProductFilter) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *TPmProductFilter) GetWifiFlag() string {
	if x != nil {
		return x.WifiFlag
	}
	return ""
}

func (x *TPmProductFilter) GetNetworkType() int32 {
	if x != nil {
		return x.NetworkType
	}
	return 0
}

func (x *TPmProductFilter) GetAttributeType() int32 {
	if x != nil {
		return x.AttributeType
	}
	return 0
}

func (x *TPmProductFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TPmProductFilter) GetIsVirtualTest() int32 {
	if x != nil {
		return x.IsVirtualTest
	}
	return 0
}

func (x *TPmProductFilter) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TPmProductFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TPmProductFilter) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TPmProductFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TPmProductFilter) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TPmProductFilter) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type ThingModelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThingModelIds int64  `protobuf:"varint,1,opt,name=thing_model_ids,json=thingModelIds,proto3" json:"thing_model_ids,omitempty"`
	TriggerCond   int32  `protobuf:"varint,2,opt,name=trigger_cond,json=triggerCond,proto3" json:"trigger_cond,omitempty"`
	ExecCond      int32  `protobuf:"varint,3,opt,name=exec_cond,json=execCond,proto3" json:"exec_cond,omitempty"`
	Identifier    string `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Valid         int32  `protobuf:"varint,5,opt,name=valid,proto3" json:"valid,omitempty"` //物模型是否选择
}

func (x *ThingModelInfo) Reset() {
	*x = ThingModelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThingModelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThingModelInfo) ProtoMessage() {}

func (x *ThingModelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThingModelInfo.ProtoReflect.Descriptor instead.
func (*ThingModelInfo) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{1}
}

func (x *ThingModelInfo) GetThingModelIds() int64 {
	if x != nil {
		return x.ThingModelIds
	}
	return 0
}

func (x *ThingModelInfo) GetTriggerCond() int32 {
	if x != nil {
		return x.TriggerCond
	}
	return 0
}

func (x *ThingModelInfo) GetExecCond() int32 {
	if x != nil {
		return x.ExecCond
	}
	return 0
}

func (x *ThingModelInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ThingModelInfo) GetValid() int32 {
	if x != nil {
		return x.Valid
	}
	return 0
}

type TPmProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                        //主键（雪花算法19位）
	ProductTypeId         int64                `protobuf:"varint,2,opt,name=product_type_id,json=productTypeId,proto3" json:"product_type_id,omitempty"`                           //产品类型ID
	ProductKey            string               `protobuf:"bytes,3,opt,name=product_key,json=productKey,proto3" json:"product_key,omitempty"`                                       //产品唯一标识
	Name                  string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                     //产品名称
	NameEn                string               `protobuf:"bytes,5,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                                                   //产品名称（英文）
	Identifier            string               `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`                                                         //属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。
	Model                 string               `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`                                                                   //产品型号
	ImageUrl              string               `protobuf:"bytes,8,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                                             //产品图片
	WifiFlag              string               `protobuf:"bytes,9,opt,name=wifi_flag,json=wifiFlag,proto3" json:"wifi_flag,omitempty"`                                             //WIFI标识
	NetworkType           int32                `protobuf:"varint,10,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"`                                  //通信协议（WIFI, BLE, WIFI&#43;BLE）
	AttributeType         int32                `protobuf:"varint,11,opt,name=attribute_type,json=attributeType,proto3" json:"attribute_type,omitempty"`                            //设备性质（0:普通设备，1：网关设备）
	Status                int32                `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                                               //状态（0：未发布，1：已发布，2：停用）
	IsVirtualTest         int32                `protobuf:"varint,13,opt,name=is_virtual_test,json=isVirtualTest,proto3" json:"is_virtual_test,omitempty"`                          //是否支持虚拟测试（0：否，1：是）
	Desc                  string               `protobuf:"bytes,14,opt,name=desc,proto3" json:"desc,omitempty"`                                                                    //描述
	CreatedBy             int64                `protobuf:"varint,15,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                                        //创建人
	CreatedAt             string               `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                         //创建时间
	UpdatedBy             int64                `protobuf:"varint,17,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`                                        //修改人
	UpdatedAt             string               `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                         //修改时间
	DeletedAt             string               `protobuf:"bytes,19,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                                         //删除的标识 0-正常 1-删除
	ProductTypeName       string               `protobuf:"bytes,20,opt,name=product_type_name,json=productTypeName,proto3" json:"product_type_name,omitempty"`                     //产品分类名称
	ModelId               string               `protobuf:"bytes,21,opt,name=modelId,proto3" json:"modelId,omitempty"`                                                              //物模型ID（t_pm_thing_model.id）
	ThingModelPropertyIds []*ThingModelInfo    `protobuf:"bytes,22,rep,name=thing_model_property_ids,json=thingModelPropertyIds,proto3" json:"thing_model_property_ids,omitempty"` //物模型-属性列表
	ThingModelServiceIds  []*ThingModelInfo    `protobuf:"bytes,23,rep,name=thing_model_service_ids,json=thingModelServiceIds,proto3" json:"thing_model_service_ids,omitempty"`    //物模型-方法列表
	ThingModelEventIds    []*ThingModelInfo    `protobuf:"bytes,24,rep,name=thing_model_event_ids,json=thingModelEventIds,proto3" json:"thing_model_event_ids,omitempty"`          //物模型-事件列表
	ControlPanelIds       []int64              `protobuf:"varint,25,rep,packed,name=control_panel_ids,json=controlPanelIds,proto3" json:"control_panel_ids,omitempty"`             //控制面板
	ModuleIds             []int64              `protobuf:"varint,26,rep,packed,name=module_ids,json=moduleIds,proto3" json:"module_ids,omitempty"`                                 //模组
	FirmwareIds           []int64              `protobuf:"varint,27,rep,packed,name=firmware_ids,json=firmwareIds,proto3" json:"firmware_ids,omitempty"`                           //固件
	PowerConsumeType      int32                `protobuf:"varint,28,opt,name=power_consume_type,json=powerConsumeType,proto3" json:"power_consume_type,omitempty"`                 //功耗类型[0:标准功耗, 1:低功耗]
	NetworkGuides         []*PmNetworkGuideObj `protobuf:"bytes,29,rep,name=network_guides,json=networkGuides,proto3" json:"network_guides,omitempty"`                             //多类型配网引导
	Identifiers           string               `protobuf:"bytes,30,opt,name=identifiers,proto3" json:"identifiers,omitempty"`                                                      //物模型唯一标识符，英文逗号分割
	Step                  int32                `protobuf:"varint,31,opt,name=step,proto3" json:"step,omitempty"`                                                                   //保存步骤
	ProductTypeIdPath     []string             `protobuf:"bytes,32,rep,name=productTypeIdPath,proto3" json:"productTypeIdPath,omitempty"`                                          //产品分类编号路径
}

func (x *TPmProductRequest) Reset() {
	*x = TPmProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductRequest) ProtoMessage() {}

func (x *TPmProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductRequest.ProtoReflect.Descriptor instead.
func (*TPmProductRequest) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{2}
}

func (x *TPmProductRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TPmProductRequest) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *TPmProductRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *TPmProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TPmProductRequest) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *TPmProductRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *TPmProductRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *TPmProductRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *TPmProductRequest) GetWifiFlag() string {
	if x != nil {
		return x.WifiFlag
	}
	return ""
}

func (x *TPmProductRequest) GetNetworkType() int32 {
	if x != nil {
		return x.NetworkType
	}
	return 0
}

func (x *TPmProductRequest) GetAttributeType() int32 {
	if x != nil {
		return x.AttributeType
	}
	return 0
}

func (x *TPmProductRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TPmProductRequest) GetIsVirtualTest() int32 {
	if x != nil {
		return x.IsVirtualTest
	}
	return 0
}

func (x *TPmProductRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TPmProductRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TPmProductRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TPmProductRequest) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TPmProductRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TPmProductRequest) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *TPmProductRequest) GetProductTypeName() string {
	if x != nil {
		return x.ProductTypeName
	}
	return ""
}

func (x *TPmProductRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TPmProductRequest) GetThingModelPropertyIds() []*ThingModelInfo {
	if x != nil {
		return x.ThingModelPropertyIds
	}
	return nil
}

func (x *TPmProductRequest) GetThingModelServiceIds() []*ThingModelInfo {
	if x != nil {
		return x.ThingModelServiceIds
	}
	return nil
}

func (x *TPmProductRequest) GetThingModelEventIds() []*ThingModelInfo {
	if x != nil {
		return x.ThingModelEventIds
	}
	return nil
}

func (x *TPmProductRequest) GetControlPanelIds() []int64 {
	if x != nil {
		return x.ControlPanelIds
	}
	return nil
}

func (x *TPmProductRequest) GetModuleIds() []int64 {
	if x != nil {
		return x.ModuleIds
	}
	return nil
}

func (x *TPmProductRequest) GetFirmwareIds() []int64 {
	if x != nil {
		return x.FirmwareIds
	}
	return nil
}

func (x *TPmProductRequest) GetPowerConsumeType() int32 {
	if x != nil {
		return x.PowerConsumeType
	}
	return 0
}

func (x *TPmProductRequest) GetNetworkGuides() []*PmNetworkGuideObj {
	if x != nil {
		return x.NetworkGuides
	}
	return nil
}

func (x *TPmProductRequest) GetIdentifiers() string {
	if x != nil {
		return x.Identifiers
	}
	return ""
}

func (x *TPmProductRequest) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *TPmProductRequest) GetProductTypeIdPath() []string {
	if x != nil {
		return x.ProductTypeIdPath
	}
	return nil
}

type PmNetworkGuideObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID（t_pm_product.id）;comment:产品ID（t_pm_product.id）;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:品类ID（t_pm_product_type.id）;comment:品类ID（t_pm_product_type.id）;size:19;"
	ProductTypeId int64 `protobuf:"varint,102,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"type" gorm:"default:配网类型[0:AP配网,1:EZ配网,2:蓝牙配网];comment:配网类型[0:AP配网,1:EZ配网,2:蓝牙配网];"
	Type int32 `protobuf:"varint,103,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,104,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,105,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,106,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,107,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp   `protobuf:"bytes,108,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Steps     []*PmNetworkGuideStepObj `protobuf:"bytes,109,rep,name=steps,proto3" json:"steps,omitempty"` //配网引导步骤
}

func (x *PmNetworkGuideObj) Reset() {
	*x = PmNetworkGuideObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmNetworkGuideObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmNetworkGuideObj) ProtoMessage() {}

func (x *PmNetworkGuideObj) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmNetworkGuideObj.ProtoReflect.Descriptor instead.
func (*PmNetworkGuideObj) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{3}
}

func (x *PmNetworkGuideObj) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmNetworkGuideObj) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *PmNetworkGuideObj) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *PmNetworkGuideObj) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PmNetworkGuideObj) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *PmNetworkGuideObj) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmNetworkGuideObj) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmNetworkGuideObj) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmNetworkGuideObj) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *PmNetworkGuideObj) GetSteps() []*PmNetworkGuideStepObj {
	if x != nil {
		return x.Steps
	}
	return nil
}

type PmNetworkGuideStepObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"networkGuideId" gorm:"default:配网引导ID（t_pm_device_network_guide.id）;comment:配网引导ID（t_pm_device_network_guide.id）;size:19;"
	NetworkGuideId int64 `protobuf:"varint,101,opt,name=networkGuideId,proto3" json:"networkGuideId,omitempty"`
	// @inject_tag: json:"instruction" gorm:"default:中文文案;comment:中文文案;size:200;"
	Instruction string `protobuf:"bytes,102,opt,name=instruction,proto3" json:"instruction,omitempty"`
	// @inject_tag: json:"instructionEn" gorm:"default:英文文案;comment:英文文案;size:200;"
	InstructionEn string `protobuf:"bytes,103,opt,name=instructionEn,proto3" json:"instructionEn,omitempty"`
	// @inject_tag: json:"imageUrl" gorm:"default:图片地址;comment:图片地址;size:200;"
	ImageUrl string `protobuf:"bytes,104,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// @inject_tag: json:"videoUrl" gorm:"default:视频地址;comment:视频地址;size:200;"
	VideoUrl string `protobuf:"bytes,105,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`
	// @inject_tag: json:"sort" gorm:"default:排序;comment:排序;size:10;"
	Sort int32 `protobuf:"varint,106,opt,name=sort,proto3" json:"sort,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,107,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:s20;"
	UpdatedBy int64 `protobuf:"varint,109,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,111,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *PmNetworkGuideStepObj) Reset() {
	*x = PmNetworkGuideStepObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmNetworkGuideStepObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmNetworkGuideStepObj) ProtoMessage() {}

func (x *PmNetworkGuideStepObj) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmNetworkGuideStepObj.ProtoReflect.Descriptor instead.
func (*PmNetworkGuideStepObj) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{4}
}

func (x *PmNetworkGuideStepObj) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmNetworkGuideStepObj) GetNetworkGuideId() int64 {
	if x != nil {
		return x.NetworkGuideId
	}
	return 0
}

func (x *PmNetworkGuideStepObj) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *PmNetworkGuideStepObj) GetInstructionEn() string {
	if x != nil {
		return x.InstructionEn
	}
	return ""
}

func (x *PmNetworkGuideStepObj) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PmNetworkGuideStepObj) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *PmNetworkGuideStepObj) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PmNetworkGuideStepObj) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *PmNetworkGuideStepObj) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmNetworkGuideStepObj) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmNetworkGuideStepObj) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmNetworkGuideStepObj) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type TPmProductFilterById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TPmProductFilterById) Reset() {
	*x = TPmProductFilterById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductFilterById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductFilterById) ProtoMessage() {}

func (x *TPmProductFilterById) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductFilterById.ProtoReflect.Descriptor instead.
func (*TPmProductFilterById) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{5}
}

func (x *TPmProductFilterById) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TPmProductFilterPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64             `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int64             `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort      int64             `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	SortField int64             `protobuf:"varint,4,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SearchKey string            `protobuf:"bytes,5,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	QueryObj  *TPmProductFilter `protobuf:"bytes,6,opt,name=queryObj,proto3" json:"queryObj,omitempty"`
	QueryStr  string            `protobuf:"bytes,7,opt,name=queryStr,proto3" json:"queryStr,omitempty"`
}

func (x *TPmProductFilterPage) Reset() {
	*x = TPmProductFilterPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductFilterPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductFilterPage) ProtoMessage() {}

func (x *TPmProductFilterPage) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductFilterPage.ProtoReflect.Descriptor instead.
func (*TPmProductFilterPage) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{6}
}

func (x *TPmProductFilterPage) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TPmProductFilterPage) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TPmProductFilterPage) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *TPmProductFilterPage) GetSortField() int64 {
	if x != nil {
		return x.SortField
	}
	return 0
}

func (x *TPmProductFilterPage) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *TPmProductFilterPage) GetQueryObj() *TPmProductFilter {
	if x != nil {
		return x.QueryObj
	}
	return nil
}

func (x *TPmProductFilterPage) GetQueryStr() string {
	if x != nil {
		return x.QueryStr
	}
	return ""
}

type TPmProductResponseObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TPmProductRequest `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TPmProductResponseObject) Reset() {
	*x = TPmProductResponseObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductResponseObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductResponseObject) ProtoMessage() {}

func (x *TPmProductResponseObject) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductResponseObject.ProtoReflect.Descriptor instead.
func (*TPmProductResponseObject) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{7}
}

func (x *TPmProductResponseObject) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TPmProductResponseObject) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TPmProductResponseObject) GetData() *TPmProductRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type TPmProductResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Code  int32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string               `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	List  []*TPmProductRequest `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TPmProductResponseList) Reset() {
	*x = TPmProductResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductResponseList) ProtoMessage() {}

func (x *TPmProductResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductResponseList.ProtoReflect.Descriptor instead.
func (*TPmProductResponseList) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{8}
}

func (x *TPmProductResponseList) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TPmProductResponseList) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TPmProductResponseList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TPmProductResponseList) GetList() []*TPmProductRequest {
	if x != nil {
		return x.List
	}
	return nil
}

type TPmProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TPmProductRequest `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TPmProductResponse) Reset() {
	*x = TPmProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductResponse) ProtoMessage() {}

func (x *TPmProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductResponse.ProtoReflect.Descriptor instead.
func (*TPmProductResponse) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{9}
}

func (x *TPmProductResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TPmProductResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TPmProductResponse) GetData() *TPmProductRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type PmControlPanelObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"name" gorm:"default:控制面板名称;comment:控制面板名称;size:128;"
	Name string `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:描述;comment:描述;size:200;"
	Desc string `protobuf:"bytes,102,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"tarUrl" gorm:"default:控制面板包地址;comment:控制面板包地址;size:200;"
	TarUrl string `protobuf:"bytes,103,opt,name=tarUrl,proto3" json:"tarUrl,omitempty"`
	// @inject_tag: json:"imageUrl" gorm:"default:预览图地址;comment:预览图地址;size:200;"
	ImageUrl string `protobuf:"bytes,104,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,105,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,106,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,107,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *PmControlPanelObj) Reset() {
	*x = PmControlPanelObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmControlPanelObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmControlPanelObj) ProtoMessage() {}

func (x *PmControlPanelObj) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmControlPanelObj.ProtoReflect.Descriptor instead.
func (*PmControlPanelObj) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{10}
}

func (x *PmControlPanelObj) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmControlPanelObj) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PmControlPanelObj) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PmControlPanelObj) GetTarUrl() string {
	if x != nil {
		return x.TarUrl
	}
	return ""
}

func (x *PmControlPanelObj) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PmControlPanelObj) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *PmControlPanelObj) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PmControlPanelObj) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *PmControlPanelObj) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PmControlPanelObj) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type TPmProductStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         //主键（雪花算法19位）
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` //状态（0：未发布，1：已发布，2：停用）
}

func (x *TPmProductStatusRequest) Reset() {
	*x = TPmProductStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductStatusRequest) ProtoMessage() {}

func (x *TPmProductStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductStatusRequest.ProtoReflect.Descriptor instead.
func (*TPmProductStatusRequest) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{11}
}

func (x *TPmProductStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TPmProductStatusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ResetProductThingModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId     int64  `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductKey    string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	ProductTypeId int64  `protobuf:"varint,103,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
}

func (x *ResetProductThingModelRequest) Reset() {
	*x = ResetProductThingModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetProductThingModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetProductThingModelRequest) ProtoMessage() {}

func (x *ResetProductThingModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetProductThingModelRequest.ProtoReflect.Descriptor instead.
func (*ResetProductThingModelRequest) Descriptor() ([]byte, []int) {
	return file_t_pm_product_proto_rawDescGZIP(), []int{12}
}

func (x *ResetProductThingModelRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ResetProductThingModelRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *ResetProductThingModelRequest) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

var File_t_pm_product_proto protoreflect.FileDescriptor

var file_t_pm_product_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x5f, 0x70, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x04, 0x0a,
	0x10, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x66, 0x69, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x69, 0x66, 0x69, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xae, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x22, 0xb9, 0x09, 0x0a, 0x11, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x66, 0x69, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x18,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x15, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x4e,
	0x0a, 0x17, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x4a,
	0x0a, 0x15, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x19, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x47, 0x75, 0x69, 0x64, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x47, 0x75, 0x69, 0x64, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x9b, 0x03,
	0x0a, 0x11, 0x50, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x4f, 0x62, 0x6a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x6d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x4f, 0x62, 0x6a, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xcd, 0x03, 0x0a, 0x15,
	0x50, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x4f, 0x62, 0x6a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x75, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x62, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x22, 0x70, 0x0a, 0x18, 0x54, 0x50, 0x6d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x16,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x6a, 0x0a, 0x12, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe9,
	0x02, 0x0a, 0x11, 0x50, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x4f, 0x62, 0x6a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x41, 0x0a, 0x17, 0x54, 0x50,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01,
	0x0a, 0x1d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x68,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x32, 0xa9, 0x06, 0x0a, 0x0a, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x50, 0x6d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_t_pm_product_proto_rawDescOnce sync.Once
	file_t_pm_product_proto_rawDescData = file_t_pm_product_proto_rawDesc
)

func file_t_pm_product_proto_rawDescGZIP() []byte {
	file_t_pm_product_proto_rawDescOnce.Do(func() {
		file_t_pm_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_t_pm_product_proto_rawDescData)
	})
	return file_t_pm_product_proto_rawDescData
}

var file_t_pm_product_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_t_pm_product_proto_goTypes = []interface{}{
	(*TPmProductFilter)(nil),              // 0: service.TPmProductFilter
	(*ThingModelInfo)(nil),                // 1: service.ThingModelInfo
	(*TPmProductRequest)(nil),             // 2: service.TPmProductRequest
	(*PmNetworkGuideObj)(nil),             // 3: service.PmNetworkGuideObj
	(*PmNetworkGuideStepObj)(nil),         // 4: service.PmNetworkGuideStepObj
	(*TPmProductFilterById)(nil),          // 5: service.TPmProductFilterById
	(*TPmProductFilterPage)(nil),          // 6: service.TPmProductFilterPage
	(*TPmProductResponseObject)(nil),      // 7: service.TPmProductResponseObject
	(*TPmProductResponseList)(nil),        // 8: service.TPmProductResponseList
	(*TPmProductResponse)(nil),            // 9: service.TPmProductResponse
	(*PmControlPanelObj)(nil),             // 10: service.PmControlPanelObj
	(*TPmProductStatusRequest)(nil),       // 11: service.TPmProductStatusRequest
	(*ResetProductThingModelRequest)(nil), // 12: service.ResetProductThingModelRequest
	(*timestamppb.Timestamp)(nil),         // 13: google.protobuf.Timestamp
	(*Response)(nil),                      // 14: service.Response
}
var file_t_pm_product_proto_depIdxs = []int32{
	1,  // 0: service.TPmProductRequest.thing_model_property_ids:type_name -> service.ThingModelInfo
	1,  // 1: service.TPmProductRequest.thing_model_service_ids:type_name -> service.ThingModelInfo
	1,  // 2: service.TPmProductRequest.thing_model_event_ids:type_name -> service.ThingModelInfo
	3,  // 3: service.TPmProductRequest.network_guides:type_name -> service.PmNetworkGuideObj
	13, // 4: service.PmNetworkGuideObj.createdAt:type_name -> google.protobuf.Timestamp
	13, // 5: service.PmNetworkGuideObj.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 6: service.PmNetworkGuideObj.deletedAt:type_name -> google.protobuf.Timestamp
	4,  // 7: service.PmNetworkGuideObj.steps:type_name -> service.PmNetworkGuideStepObj
	13, // 8: service.PmNetworkGuideStepObj.createdAt:type_name -> google.protobuf.Timestamp
	13, // 9: service.PmNetworkGuideStepObj.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 10: service.PmNetworkGuideStepObj.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: service.TPmProductFilterPage.queryObj:type_name -> service.TPmProductFilter
	2,  // 12: service.TPmProductResponseObject.data:type_name -> service.TPmProductRequest
	2,  // 13: service.TPmProductResponseList.list:type_name -> service.TPmProductRequest
	2,  // 14: service.TPmProductResponse.data:type_name -> service.TPmProductRequest
	13, // 15: service.PmControlPanelObj.createdAt:type_name -> google.protobuf.Timestamp
	13, // 16: service.PmControlPanelObj.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 17: service.PmControlPanelObj.deletedAt:type_name -> google.protobuf.Timestamp
	2,  // 18: service.TPmProduct.CreateTPmProduct:input_type -> service.TPmProductRequest
	2,  // 19: service.TPmProduct.UpdateTPmProduct:input_type -> service.TPmProductRequest
	2,  // 20: service.TPmProduct.DeleteTPmProduct:input_type -> service.TPmProductRequest
	5,  // 21: service.TPmProduct.GetByIdTPmProduct:input_type -> service.TPmProductFilterById
	0,  // 22: service.TPmProduct.GetTPmProduct:input_type -> service.TPmProductFilter
	6,  // 23: service.TPmProduct.ListTPmProduct:input_type -> service.TPmProductFilterPage
	10, // 24: service.TPmProduct.UploadControlPanel:input_type -> service.PmControlPanelObj
	11, // 25: service.TPmProduct.UpdateStatus:input_type -> service.TPmProductStatusRequest
	0,  // 26: service.TPmProduct.Exists:input_type -> service.TPmProductFilter
	2,  // 27: service.TPmProduct.ResetProductThingModels:input_type -> service.TPmProductRequest
	9,  // 28: service.TPmProduct.CreateTPmProduct:output_type -> service.TPmProductResponse
	9,  // 29: service.TPmProduct.UpdateTPmProduct:output_type -> service.TPmProductResponse
	9,  // 30: service.TPmProduct.DeleteTPmProduct:output_type -> service.TPmProductResponse
	7,  // 31: service.TPmProduct.GetByIdTPmProduct:output_type -> service.TPmProductResponseObject
	7,  // 32: service.TPmProduct.GetTPmProduct:output_type -> service.TPmProductResponseObject
	8,  // 33: service.TPmProduct.ListTPmProduct:output_type -> service.TPmProductResponseList
	9,  // 34: service.TPmProduct.UploadControlPanel:output_type -> service.TPmProductResponse
	9,  // 35: service.TPmProduct.UpdateStatus:output_type -> service.TPmProductResponse
	9,  // 36: service.TPmProduct.Exists:output_type -> service.TPmProductResponse
	14, // 37: service.TPmProduct.ResetProductThingModels:output_type -> service.Response
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_t_pm_product_proto_init() }
func file_t_pm_product_proto_init() {
	if File_t_pm_product_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_t_pm_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThingModelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmNetworkGuideObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmNetworkGuideStepObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductFilterById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductFilterPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductResponseObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmControlPanelObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetProductThingModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_t_pm_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_t_pm_product_proto_goTypes,
		DependencyIndexes: file_t_pm_product_proto_depIdxs,
		MessageInfos:      file_t_pm_product_proto_msgTypes,
	}.Build()
	File_t_pm_product_proto = out.File
	file_t_pm_product_proto_rawDesc = nil
	file_t_pm_product_proto_goTypes = nil
	file_t_pm_product_proto_depIdxs = nil
}
