// Code generated by protoc,2022-06-17 14:48:11. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: iot_device_countdown_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type IotDeviceCountdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:编号;comment:编号;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"hour" gorm:"default:小时;comment:小时;size:2;"
	Hour string `protobuf:"bytes,101,opt,name=hour,proto3" json:"hour,omitempty"`
	// @inject_tag: json:"minute" gorm:"default:分钟;comment:分钟;size:2;"
	Minute string `protobuf:"bytes,102,opt,name=minute,proto3" json:"minute,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:定时器描述;comment:定时器描述;size:200;"
	Remark string `protobuf:"bytes,103,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:;comment:;size:50;"
	FuncKey string `protobuf:"bytes,104,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:;comment:;size:100;"
	FuncValue string `protobuf:"bytes,105,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:;comment:;size:19;"
	UserId int64 `protobuf:"varint,106,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"deviceId" gorm:"default:设备编号;comment:设备编号;size:16;"
	DeviceId string `protobuf:"bytes,107,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// @inject_tag: json:"enabled" gorm:"default:定时器状态（=1启动 =2 禁用）;comment:定时器状态（=1启动 =2 禁用）;"
	Enabled int32 `protobuf:"varint,108,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// @inject_tag: json:"totalSecond" gorm:"default:总秒数;comment:总秒数;size:10;"
	TotalSecond int32 `protobuf:"varint,109,opt,name=totalSecond,proto3" json:"totalSecond,omitempty"`
	// @inject_tag: json:"executionTime" gorm:"default:执行时间;comment:执行时间;"
	ExecutionTime *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	// @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:64;"
	TaskId string `protobuf:"bytes,111,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// @inject_tag: json:"cron" gorm:"default:cron表达式，自动生成;comment:cron表达式，自动生成;size:255;"
	Cron string `protobuf:"bytes,112,opt,name=cron,proto3" json:"cron,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,113,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,114,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//时区
	Timezone string `protobuf:"bytes,117,opt,name=timezone,proto3" json:"timezone,omitempty"`
	//任务所属区域服务器Id
	RegionServerId int64 `protobuf:"varint,118,opt,name=regionServerId,proto3" json:"regionServerId,omitempty"`
}

func (x *IotDeviceCountdown) Reset() {
	*x = IotDeviceCountdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdown) ProtoMessage() {}

func (x *IotDeviceCountdown) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdown.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdown) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{0}
}

func (x *IotDeviceCountdown) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceCountdown) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *IotDeviceCountdown) GetMinute() string {
	if x != nil {
		return x.Minute
	}
	return ""
}

func (x *IotDeviceCountdown) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *IotDeviceCountdown) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceCountdown) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceCountdown) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IotDeviceCountdown) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotDeviceCountdown) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *IotDeviceCountdown) GetTotalSecond() int32 {
	if x != nil {
		return x.TotalSecond
	}
	return 0
}

func (x *IotDeviceCountdown) GetExecutionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *IotDeviceCountdown) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *IotDeviceCountdown) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *IotDeviceCountdown) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceCountdown) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceCountdown) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceCountdown) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotDeviceCountdown) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *IotDeviceCountdown) GetRegionServerId() int64 {
	if x != nil {
		return x.RegionServerId
	}
	return 0
}

type IotDeviceCountdownFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:编号;comment:编号;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"hour" gorm:"default:小时;comment:小时;size:2;"
	Hour string `protobuf:"bytes,101,opt,name=hour,proto3" json:"hour,omitempty"`
	// @inject_tag: json:"minute" gorm:"default:分钟;comment:分钟;size:2;"
	Minute string `protobuf:"bytes,102,opt,name=minute,proto3" json:"minute,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:定时器描述;comment:定时器描述;size:200;"
	Remark string `protobuf:"bytes,103,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:;comment:;size:50;"
	FuncKey string `protobuf:"bytes,104,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:;comment:;size:100;"
	FuncValue string `protobuf:"bytes,105,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"userId" gorm:"default:;comment:;size:19;"
	UserId int64 `protobuf:"varint,106,opt,name=userId,proto3" json:"userId,omitempty"`
	// @inject_tag: json:"deviceId" gorm:"default:设备编号;comment:设备编号;size:16;"
	DeviceId string `protobuf:"bytes,107,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// @inject_tag: json:"enabled" gorm:"default:定时器状态（=1启动 =2 禁用）;comment:定时器状态（=1启动 =2 禁用）;"
	Enabled int32 `protobuf:"varint,108,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// @inject_tag: json:"totalSecond" gorm:"default:总秒数;comment:总秒数;size:10;"
	TotalSecond int32 `protobuf:"varint,109,opt,name=totalSecond,proto3" json:"totalSecond,omitempty"`
	// @inject_tag: json:"executionTime" gorm:"default:执行时间;comment:执行时间;"
	ExecutionTime *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	// @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:64;"
	TaskId string `protobuf:"bytes,111,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// @inject_tag: json:"cron" gorm:"default:cron表达式，自动生成;comment:cron表达式，自动生成;size:255;"
	Cron string `protobuf:"bytes,112,opt,name=cron,proto3" json:"cron,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,113,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,114,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *IotDeviceCountdownFilter) Reset() {
	*x = IotDeviceCountdownFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownFilter) ProtoMessage() {}

func (x *IotDeviceCountdownFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownFilter.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{1}
}

func (x *IotDeviceCountdownFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceCountdownFilter) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetMinute() string {
	if x != nil {
		return x.Minute
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IotDeviceCountdownFilter) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *IotDeviceCountdownFilter) GetTotalSecond() int32 {
	if x != nil {
		return x.TotalSecond
	}
	return 0
}

func (x *IotDeviceCountdownFilter) GetExecutionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *IotDeviceCountdownFilter) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *IotDeviceCountdownFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *IotDeviceCountdownFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *IotDeviceCountdownFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotDeviceCountdownFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type IotDeviceCountdownListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *IotDeviceCountdown `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64               `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64               `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string              `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string              `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string              `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *IotDeviceCountdownListRequest) Reset() {
	*x = IotDeviceCountdownListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownListRequest) ProtoMessage() {}

func (x *IotDeviceCountdownListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownListRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownListRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{2}
}

func (x *IotDeviceCountdownListRequest) GetQuery() *IotDeviceCountdown {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *IotDeviceCountdownListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IotDeviceCountdownListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IotDeviceCountdownListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *IotDeviceCountdownListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *IotDeviceCountdownListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type IotDeviceCountdownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                 `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*IotDeviceCountdown `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceCountdownResponse) Reset() {
	*x = IotDeviceCountdownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownResponse) ProtoMessage() {}

func (x *IotDeviceCountdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{3}
}

func (x *IotDeviceCountdownResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceCountdownResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceCountdownResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceCountdownResponse) GetData() []*IotDeviceCountdown {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceCountdownUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string            `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *IotDeviceCountdown `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceCountdownUpdateFieldsRequest) Reset() {
	*x = IotDeviceCountdownUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownUpdateFieldsRequest) ProtoMessage() {}

func (x *IotDeviceCountdownUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{4}
}

func (x *IotDeviceCountdownUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *IotDeviceCountdownUpdateFieldsRequest) GetData() *IotDeviceCountdown {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type IotDeviceCountdownPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IotDeviceCountdownPrimarykey) Reset() {
	*x = IotDeviceCountdownPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownPrimarykey) ProtoMessage() {}

func (x *IotDeviceCountdownPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownPrimarykey.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownPrimarykey) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{5}
}

type IotDeviceCountdownBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*IotDeviceCountdownPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *IotDeviceCountdownBatchDeleteRequest) Reset() {
	*x = IotDeviceCountdownBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownBatchDeleteRequest) ProtoMessage() {}

func (x *IotDeviceCountdownBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{6}
}

func (x *IotDeviceCountdownBatchDeleteRequest) GetKeys() []*IotDeviceCountdownPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type IotDeviceCountdownJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:编号;comment:编号;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotDeviceCountdownJobReq) Reset() {
	*x = IotDeviceCountdownJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_countdown_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceCountdownJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceCountdownJobReq) ProtoMessage() {}

func (x *IotDeviceCountdownJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_countdown_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceCountdownJobReq.ProtoReflect.Descriptor instead.
func (*IotDeviceCountdownJobReq) Descriptor() ([]byte, []int) {
	return file_iot_device_countdown_model_proto_rawDescGZIP(), []int{7}
}

func (x *IotDeviceCountdownJobReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_iot_device_countdown_model_proto protoreflect.FileDescriptor

var file_iot_device_countdown_model_proto_rawDesc = []byte{
	0x0a, 0x20, 0x69, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x04, 0x0a,
	0x12, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b,
	0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12,
	0x40, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f,
	0x6e, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb4, 0x04, 0x0a, 0x18, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x1d, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x1a, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x25, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x1c, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x22, 0x61, 0x0a, 0x24, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x2a,
	0x0a, 0x18, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_device_countdown_model_proto_rawDescOnce sync.Once
	file_iot_device_countdown_model_proto_rawDescData = file_iot_device_countdown_model_proto_rawDesc
)

func file_iot_device_countdown_model_proto_rawDescGZIP() []byte {
	file_iot_device_countdown_model_proto_rawDescOnce.Do(func() {
		file_iot_device_countdown_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_device_countdown_model_proto_rawDescData)
	})
	return file_iot_device_countdown_model_proto_rawDescData
}

var file_iot_device_countdown_model_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_iot_device_countdown_model_proto_goTypes = []interface{}{
	(*IotDeviceCountdown)(nil),                    // 0: service.IotDeviceCountdown
	(*IotDeviceCountdownFilter)(nil),              // 1: service.IotDeviceCountdownFilter
	(*IotDeviceCountdownListRequest)(nil),         // 2: service.IotDeviceCountdownListRequest
	(*IotDeviceCountdownResponse)(nil),            // 3: service.IotDeviceCountdownResponse
	(*IotDeviceCountdownUpdateFieldsRequest)(nil), // 4: service.IotDeviceCountdownUpdateFieldsRequest
	(*IotDeviceCountdownPrimarykey)(nil),          // 5: service.IotDeviceCountdownPrimarykey
	(*IotDeviceCountdownBatchDeleteRequest)(nil),  // 6: service.IotDeviceCountdownBatchDeleteRequest
	(*IotDeviceCountdownJobReq)(nil),              // 7: service.IotDeviceCountdownJobReq
	(*timestamppb.Timestamp)(nil),                 // 8: google.protobuf.Timestamp
}
var file_iot_device_countdown_model_proto_depIdxs = []int32{
	8,  // 0: service.IotDeviceCountdown.executionTime:type_name -> google.protobuf.Timestamp
	8,  // 1: service.IotDeviceCountdown.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 2: service.IotDeviceCountdown.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 3: service.IotDeviceCountdownFilter.executionTime:type_name -> google.protobuf.Timestamp
	8,  // 4: service.IotDeviceCountdownFilter.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 5: service.IotDeviceCountdownFilter.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.IotDeviceCountdownListRequest.query:type_name -> service.IotDeviceCountdown
	0,  // 7: service.IotDeviceCountdownResponse.data:type_name -> service.IotDeviceCountdown
	0,  // 8: service.IotDeviceCountdownUpdateFieldsRequest.data:type_name -> service.IotDeviceCountdown
	5,  // 9: service.IotDeviceCountdownBatchDeleteRequest.keys:type_name -> service.IotDeviceCountdownPrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_iot_device_countdown_model_proto_init() }
func file_iot_device_countdown_model_proto_init() {
	if File_iot_device_countdown_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_device_countdown_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_countdown_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceCountdownJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_device_countdown_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iot_device_countdown_model_proto_goTypes,
		DependencyIndexes: file_iot_device_countdown_model_proto_depIdxs,
		MessageInfos:      file_iot_device_countdown_model_proto_msgTypes,
	}.Build()
	File_iot_device_countdown_model_proto = out.File
	file_iot_device_countdown_model_proto_rawDesc = nil
	file_iot_device_countdown_model_proto_goTypes = nil
	file_iot_device_countdown_model_proto_depIdxs = nil
}
