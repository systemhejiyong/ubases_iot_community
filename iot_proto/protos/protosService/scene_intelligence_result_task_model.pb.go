// Code generated by protoc,2022-05-20 13:36:04. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: scene_intelligence_result_task_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type SceneIntelligenceResultTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"startTime" gorm:"default:运行时间;comment:运行时间;"
	StartTime *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// @inject_tag: json:"endTime" gorm:"default:;comment:;"
	EndTime *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// @inject_tag: json:"intelligenceId" gorm:"default:智能场景编号;comment:智能场景编号;size:19;"
	IntelligenceId int64 `protobuf:"varint,103,opt,name=intelligenceId,proto3" json:"intelligenceId,omitempty"`
	// @inject_tag: json:"resultId" gorm:"default:执行结果id;comment:执行结果id;size:19;"
	ResultId int64 `protobuf:"varint,104,opt,name=resultId,proto3" json:"resultId,omitempty"`
	// @inject_tag: json:"isSuccess" gorm:"default:是否成功;comment:是否成功;size:10;"
	IsSuccess int32 `protobuf:"varint,105,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	// @inject_tag: json:"resultMsg" gorm:"default:结果描述;comment:结果描述;size:100;"
	ResultMsg string `protobuf:"bytes,106,opt,name=resultMsg,proto3" json:"resultMsg,omitempty"`
	// @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:19;"
	TaskId int64 `protobuf:"varint,107,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// @inject_tag: json:"taskImg" gorm:"default:任务图片(产品图片、智能图片、功能图标）;comment:任务图片(产品图片、智能图片、功能图标）;size:255;"
	TaskImg string `protobuf:"bytes,108,opt,name=taskImg,proto3" json:"taskImg,omitempty"`
	// @inject_tag: json:"taskDesc" gorm:"default:任务描述;comment:任务描述;size:50;"
	TaskDesc string `protobuf:"bytes,109,opt,name=taskDesc,proto3" json:"taskDesc,omitempty"`
	// @inject_tag: json:"taskType" gorm:"default:任务类型（=1 延时 =2 设备执行 =3 场景开关）;comment:任务类型（=1 延时 =2 设备执行 =3 场景开关）;size:10;"
	TaskType int32 `protobuf:"varint,110,opt,name=taskType,proto3" json:"taskType,omitempty"`
	// @inject_tag: json:"objectId" gorm:"default:对象ID（设备Id、场景Id）;comment:对象ID（设备Id、场景Id）;size:50;"
	ObjectId string `protobuf:"bytes,111,opt,name=objectId,proto3" json:"objectId,omitempty"`
	// @inject_tag: json:"objectDesc" gorm:"default:对象的标题或者描述（设备名称、场景名称）;comment:对象的标题或者描述（设备名称、场景名称）;size:50;"
	ObjectDesc string `protobuf:"bytes,112,opt,name=objectDesc,proto3" json:"objectDesc,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:执行功能Key;comment:执行功能Key;size:50;"
	FuncKey string `protobuf:"bytes,113,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcDesc" gorm:"default:冗余：功能描述;comment:冗余：功能描述;size:50;"
	FuncDesc string `protobuf:"bytes,114,opt,name=funcDesc,proto3" json:"funcDesc,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:;comment:;size:50;"
	FuncValue string `protobuf:"bytes,115,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Functions  string                 `protobuf:"bytes,118,opt,name=functions,proto3" json:"functions,omitempty"`
	ProductKey string                 `protobuf:"bytes,119,opt,name=productKey,proto3" json:"productKey,omitempty"`
}

func (x *SceneIntelligenceResultTask) Reset() {
	*x = SceneIntelligenceResultTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTask) ProtoMessage() {}

func (x *SceneIntelligenceResultTask) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTask.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTask) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{0}
}

func (x *SceneIntelligenceResultTask) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneIntelligenceResultTask) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SceneIntelligenceResultTask) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SceneIntelligenceResultTask) GetIntelligenceId() int64 {
	if x != nil {
		return x.IntelligenceId
	}
	return 0
}

func (x *SceneIntelligenceResultTask) GetResultId() int64 {
	if x != nil {
		return x.ResultId
	}
	return 0
}

func (x *SceneIntelligenceResultTask) GetIsSuccess() int32 {
	if x != nil {
		return x.IsSuccess
	}
	return 0
}

func (x *SceneIntelligenceResultTask) GetResultMsg() string {
	if x != nil {
		return x.ResultMsg
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SceneIntelligenceResultTask) GetTaskImg() string {
	if x != nil {
		return x.TaskImg
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetTaskDesc() string {
	if x != nil {
		return x.TaskDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *SceneIntelligenceResultTask) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetObjectDesc() string {
	if x != nil {
		return x.ObjectDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetFuncDesc() string {
	if x != nil {
		return x.FuncDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SceneIntelligenceResultTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SceneIntelligenceResultTask) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *SceneIntelligenceResultTask) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

type SceneIntelligenceResultTaskFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"startTime" gorm:"default:运行时间;comment:运行时间;"
	StartTime *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// @inject_tag: json:"endTime" gorm:"default:;comment:;"
	EndTime *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// @inject_tag: json:"intelligenceId" gorm:"default:智能场景编号;comment:智能场景编号;size:19;"
	IntelligenceId int64 `protobuf:"varint,103,opt,name=intelligenceId,proto3" json:"intelligenceId,omitempty"`
	// @inject_tag: json:"resultId" gorm:"default:执行结果id;comment:执行结果id;size:19;"
	ResultId int64 `protobuf:"varint,104,opt,name=resultId,proto3" json:"resultId,omitempty"`
	// @inject_tag: json:"isSuccess" gorm:"default:是否成功;comment:是否成功;size:10;"
	IsSuccess int32 `protobuf:"varint,105,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	// @inject_tag: json:"resultMsg" gorm:"default:结果描述;comment:结果描述;size:100;"
	ResultMsg string `protobuf:"bytes,106,opt,name=resultMsg,proto3" json:"resultMsg,omitempty"`
	// @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:19;"
	TaskId int64 `protobuf:"varint,107,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// @inject_tag: json:"taskImg" gorm:"default:任务图片(产品图片、智能图片、功能图标）;comment:任务图片(产品图片、智能图片、功能图标）;size:255;"
	TaskImg string `protobuf:"bytes,108,opt,name=taskImg,proto3" json:"taskImg,omitempty"`
	// @inject_tag: json:"taskDesc" gorm:"default:任务描述;comment:任务描述;size:50;"
	TaskDesc string `protobuf:"bytes,109,opt,name=taskDesc,proto3" json:"taskDesc,omitempty"`
	// @inject_tag: json:"taskType" gorm:"default:任务类型（=1 延时 =2 设备执行 =3 场景开关）;comment:任务类型（=1 延时 =2 设备执行 =3 场景开关）;size:10;"
	TaskType int32 `protobuf:"varint,110,opt,name=taskType,proto3" json:"taskType,omitempty"`
	// @inject_tag: json:"objectId" gorm:"default:对象ID（设备Id、场景Id）;comment:对象ID（设备Id、场景Id）;size:50;"
	ObjectId string `protobuf:"bytes,111,opt,name=objectId,proto3" json:"objectId,omitempty"`
	// @inject_tag: json:"objectDesc" gorm:"default:对象的标题或者描述（设备名称、场景名称）;comment:对象的标题或者描述（设备名称、场景名称）;size:50;"
	ObjectDesc string `protobuf:"bytes,112,opt,name=objectDesc,proto3" json:"objectDesc,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:执行功能Key;comment:执行功能Key;size:50;"
	FuncKey string `protobuf:"bytes,113,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcDesc" gorm:"default:冗余：功能描述;comment:冗余：功能描述;size:50;"
	FuncDesc string `protobuf:"bytes,114,opt,name=funcDesc,proto3" json:"funcDesc,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:;comment:;size:50;"
	FuncValue string `protobuf:"bytes,115,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ProductKey string                 `protobuf:"bytes,118,opt,name=productKey,proto3" json:"productKey,omitempty"`
}

func (x *SceneIntelligenceResultTaskFilter) Reset() {
	*x = SceneIntelligenceResultTaskFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTaskFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTaskFilter) ProtoMessage() {}

func (x *SceneIntelligenceResultTaskFilter) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTaskFilter.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTaskFilter) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{1}
}

func (x *SceneIntelligenceResultTaskFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneIntelligenceResultTaskFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SceneIntelligenceResultTaskFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SceneIntelligenceResultTaskFilter) GetIntelligenceId() int64 {
	if x != nil {
		return x.IntelligenceId
	}
	return 0
}

func (x *SceneIntelligenceResultTaskFilter) GetResultId() int64 {
	if x != nil {
		return x.ResultId
	}
	return 0
}

func (x *SceneIntelligenceResultTaskFilter) GetIsSuccess() int32 {
	if x != nil {
		return x.IsSuccess
	}
	return 0
}

func (x *SceneIntelligenceResultTaskFilter) GetResultMsg() string {
	if x != nil {
		return x.ResultMsg
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SceneIntelligenceResultTaskFilter) GetTaskImg() string {
	if x != nil {
		return x.TaskImg
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetTaskDesc() string {
	if x != nil {
		return x.TaskDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *SceneIntelligenceResultTaskFilter) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetObjectDesc() string {
	if x != nil {
		return x.ObjectDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetFuncDesc() string {
	if x != nil {
		return x.FuncDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *SceneIntelligenceResultTaskFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SceneIntelligenceResultTaskFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SceneIntelligenceResultTaskFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

type SceneIntelligenceResultTaskListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *SceneIntelligenceResultTask `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                        `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                        `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string                       `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string                       `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string                       `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *SceneIntelligenceResultTaskListRequest) Reset() {
	*x = SceneIntelligenceResultTaskListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTaskListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTaskListRequest) ProtoMessage() {}

func (x *SceneIntelligenceResultTaskListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTaskListRequest.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTaskListRequest) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{2}
}

func (x *SceneIntelligenceResultTaskListRequest) GetQuery() *SceneIntelligenceResultTask {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SceneIntelligenceResultTaskListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SceneIntelligenceResultTaskListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SceneIntelligenceResultTaskListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *SceneIntelligenceResultTaskListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *SceneIntelligenceResultTaskListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type SceneIntelligenceResultTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                          `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*SceneIntelligenceResultTask `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SceneIntelligenceResultTaskResponse) Reset() {
	*x = SceneIntelligenceResultTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTaskResponse) ProtoMessage() {}

func (x *SceneIntelligenceResultTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTaskResponse.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTaskResponse) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{3}
}

func (x *SceneIntelligenceResultTaskResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SceneIntelligenceResultTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SceneIntelligenceResultTaskResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SceneIntelligenceResultTaskResponse) GetData() []*SceneIntelligenceResultTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type SceneIntelligenceResultTaskUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string                     `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *SceneIntelligenceResultTask `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SceneIntelligenceResultTaskUpdateFieldsRequest) Reset() {
	*x = SceneIntelligenceResultTaskUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTaskUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTaskUpdateFieldsRequest) ProtoMessage() {}

func (x *SceneIntelligenceResultTaskUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTaskUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTaskUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{4}
}

func (x *SceneIntelligenceResultTaskUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SceneIntelligenceResultTaskUpdateFieldsRequest) GetData() *SceneIntelligenceResultTask {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type SceneIntelligenceResultTaskPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SceneIntelligenceResultTaskPrimarykey) Reset() {
	*x = SceneIntelligenceResultTaskPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTaskPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTaskPrimarykey) ProtoMessage() {}

func (x *SceneIntelligenceResultTaskPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTaskPrimarykey.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTaskPrimarykey) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{5}
}

func (x *SceneIntelligenceResultTaskPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SceneIntelligenceResultTaskBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*SceneIntelligenceResultTaskPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *SceneIntelligenceResultTaskBatchDeleteRequest) Reset() {
	*x = SceneIntelligenceResultTaskBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_intelligence_result_task_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneIntelligenceResultTaskBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneIntelligenceResultTaskBatchDeleteRequest) ProtoMessage() {}

func (x *SceneIntelligenceResultTaskBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scene_intelligence_result_task_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneIntelligenceResultTaskBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*SceneIntelligenceResultTaskBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_scene_intelligence_result_task_model_proto_rawDescGZIP(), []int{6}
}

func (x *SceneIntelligenceResultTaskBatchDeleteRequest) GetKeys() []*SceneIntelligenceResultTaskPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_scene_intelligence_result_task_model_proto protoreflect.FileDescriptor

var file_scene_intelligence_result_task_model_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x05, 0x0a, 0x1b, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x67, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0xb1, 0x05, 0x0a, 0x21, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x67, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x6f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xec, 0x01, 0x0a, 0x26, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0xa3, 0x01, 0x0a, 0x23, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x37, 0x0a, 0x25, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69,
	0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x2d, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scene_intelligence_result_task_model_proto_rawDescOnce sync.Once
	file_scene_intelligence_result_task_model_proto_rawDescData = file_scene_intelligence_result_task_model_proto_rawDesc
)

func file_scene_intelligence_result_task_model_proto_rawDescGZIP() []byte {
	file_scene_intelligence_result_task_model_proto_rawDescOnce.Do(func() {
		file_scene_intelligence_result_task_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_scene_intelligence_result_task_model_proto_rawDescData)
	})
	return file_scene_intelligence_result_task_model_proto_rawDescData
}

var file_scene_intelligence_result_task_model_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_scene_intelligence_result_task_model_proto_goTypes = []interface{}{
	(*SceneIntelligenceResultTask)(nil),                    // 0: service.SceneIntelligenceResultTask
	(*SceneIntelligenceResultTaskFilter)(nil),              // 1: service.SceneIntelligenceResultTaskFilter
	(*SceneIntelligenceResultTaskListRequest)(nil),         // 2: service.SceneIntelligenceResultTaskListRequest
	(*SceneIntelligenceResultTaskResponse)(nil),            // 3: service.SceneIntelligenceResultTaskResponse
	(*SceneIntelligenceResultTaskUpdateFieldsRequest)(nil), // 4: service.SceneIntelligenceResultTaskUpdateFieldsRequest
	(*SceneIntelligenceResultTaskPrimarykey)(nil),          // 5: service.SceneIntelligenceResultTaskPrimarykey
	(*SceneIntelligenceResultTaskBatchDeleteRequest)(nil),  // 6: service.SceneIntelligenceResultTaskBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),                          // 7: google.protobuf.Timestamp
}
var file_scene_intelligence_result_task_model_proto_depIdxs = []int32{
	7,  // 0: service.SceneIntelligenceResultTask.startTime:type_name -> google.protobuf.Timestamp
	7,  // 1: service.SceneIntelligenceResultTask.endTime:type_name -> google.protobuf.Timestamp
	7,  // 2: service.SceneIntelligenceResultTask.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.SceneIntelligenceResultTask.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.SceneIntelligenceResultTaskFilter.startTime:type_name -> google.protobuf.Timestamp
	7,  // 5: service.SceneIntelligenceResultTaskFilter.endTime:type_name -> google.protobuf.Timestamp
	7,  // 6: service.SceneIntelligenceResultTaskFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 7: service.SceneIntelligenceResultTaskFilter.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 8: service.SceneIntelligenceResultTaskListRequest.query:type_name -> service.SceneIntelligenceResultTask
	0,  // 9: service.SceneIntelligenceResultTaskResponse.data:type_name -> service.SceneIntelligenceResultTask
	0,  // 10: service.SceneIntelligenceResultTaskUpdateFieldsRequest.data:type_name -> service.SceneIntelligenceResultTask
	5,  // 11: service.SceneIntelligenceResultTaskBatchDeleteRequest.keys:type_name -> service.SceneIntelligenceResultTaskPrimarykey
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_scene_intelligence_result_task_model_proto_init() }
func file_scene_intelligence_result_task_model_proto_init() {
	if File_scene_intelligence_result_task_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scene_intelligence_result_task_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_intelligence_result_task_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTaskFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_intelligence_result_task_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTaskListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_intelligence_result_task_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_intelligence_result_task_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTaskUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_intelligence_result_task_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTaskPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_intelligence_result_task_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneIntelligenceResultTaskBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scene_intelligence_result_task_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scene_intelligence_result_task_model_proto_goTypes,
		DependencyIndexes: file_scene_intelligence_result_task_model_proto_depIdxs,
		MessageInfos:      file_scene_intelligence_result_task_model_proto_msgTypes,
	}.Build()
	File_scene_intelligence_result_task_model_proto = out.File
	file_scene_intelligence_result_task_model_proto_rawDesc = nil
	file_scene_intelligence_result_task_model_proto_goTypes = nil
	file_scene_intelligence_result_task_model_proto_depIdxs = nil
}
