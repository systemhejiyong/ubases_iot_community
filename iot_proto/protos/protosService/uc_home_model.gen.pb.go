// Code generated by protoc,2022-04-18 21:26:14. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: uc_home_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type UcHome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一ID;comment:唯一ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"name" gorm:"default:家庭名称;comment:家庭名称;size:50;"
	Name string `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"iconUrl" gorm:"default:图标地址;comment:图标地址;size:255;"
	IconUrl string `protobuf:"bytes,102,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	// @inject_tag: json:"sid" gorm:"default:服务器唯一ID;comment:服务器唯一ID;size:19;"
	Sid int64 `protobuf:"varint,103,opt,name=sid,proto3" json:"sid,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:经度;comment:经度;size:10,6;"
	Lat float64 `protobuf:"fixed64,104,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:纬度;comment:纬度;size:10,6;"
	Lng float64 `protobuf:"fixed64,105,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:;comment:;size:50;"
	Country string `protobuf:"bytes,106,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:;comment:;size:50;"
	Province string `protobuf:"bytes,107,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:;comment:;size:50;"
	City string `protobuf:"bytes,108,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:;comment:;size:50;"
	District string `protobuf:"bytes,109,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"address" gorm:"default:家庭位置;comment:家庭位置;size:255;"
	Address string `protobuf:"bytes,110,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"coordType" gorm:"default:1-GPS   2-火星坐标系;comment:1-GPS   2-火星坐标系;size:10;"
	CoordType int32 `protobuf:"varint,111,opt,name=coordType,proto3" json:"coordType,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,112,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,113,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	CountryId  int64                  `protobuf:"varint,119,opt,name=countryId,proto3" json:"countryId,omitempty"`
	ProvinceId int64                  `protobuf:"varint,120,opt,name=provinceId,proto3" json:"provinceId,omitempty"`
	CityId     int64                  `protobuf:"varint,121,opt,name=cityId,proto3" json:"cityId,omitempty"`
}

func (x *UcHome) Reset() {
	*x = UcHome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHome) ProtoMessage() {}

func (x *UcHome) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHome.ProtoReflect.Descriptor instead.
func (*UcHome) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *UcHome) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcHome) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UcHome) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *UcHome) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *UcHome) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UcHome) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *UcHome) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UcHome) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UcHome) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UcHome) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UcHome) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UcHome) GetCoordType() int32 {
	if x != nil {
		return x.CoordType
	}
	return 0
}

func (x *UcHome) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcHome) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcHome) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcHome) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcHome) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcHome) GetCountryId() int64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *UcHome) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *UcHome) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type UcHomeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一ID;comment:唯一ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"name" gorm:"default:家庭名称;comment:家庭名称;size:50;"
	Name string `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"iconUrl" gorm:"default:图标地址;comment:图标地址;size:255;"
	IconUrl string `protobuf:"bytes,102,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	// @inject_tag: json:"sid" gorm:"default:服务器唯一ID;comment:服务器唯一ID;size:19;"
	Sid int64 `protobuf:"varint,103,opt,name=sid,proto3" json:"sid,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:经度;comment:经度;size:10,6;"
	Lat float64 `protobuf:"fixed64,104,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:纬度;comment:纬度;size:10,6;"
	Lng float64 `protobuf:"fixed64,105,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:;comment:;size:50;"
	Country string `protobuf:"bytes,106,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:;comment:;size:50;"
	Province string `protobuf:"bytes,107,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:;comment:;size:50;"
	City string `protobuf:"bytes,108,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:;comment:;size:50;"
	District string `protobuf:"bytes,109,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"address" gorm:"default:家庭位置;comment:家庭位置;size:255;"
	Address string `protobuf:"bytes,110,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"coordType" gorm:"default:1-GPS   2-火星坐标系;comment:1-GPS   2-火星坐标系;size:10;"
	CoordType int32 `protobuf:"varint,111,opt,name=coordType,proto3" json:"coordType,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,112,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,113,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	CountryId  int64                  `protobuf:"varint,119,opt,name=countryId,proto3" json:"countryId,omitempty"`
	ProvinceId int64                  `protobuf:"varint,120,opt,name=provinceId,proto3" json:"provinceId,omitempty"`
	CityId     int64                  `protobuf:"varint,121,opt,name=cityId,proto3" json:"cityId,omitempty"`
}

func (x *UcHomeFilter) Reset() {
	*x = UcHomeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeFilter) ProtoMessage() {}

func (x *UcHomeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeFilter.ProtoReflect.Descriptor instead.
func (*UcHomeFilter) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *UcHomeFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcHomeFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UcHomeFilter) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *UcHomeFilter) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *UcHomeFilter) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UcHomeFilter) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *UcHomeFilter) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UcHomeFilter) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UcHomeFilter) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UcHomeFilter) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UcHomeFilter) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UcHomeFilter) GetCoordType() int32 {
	if x != nil {
		return x.CoordType
	}
	return 0
}

func (x *UcHomeFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcHomeFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcHomeFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcHomeFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcHomeFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcHomeFilter) GetCountryId() int64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *UcHomeFilter) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *UcHomeFilter) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type UcHomeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                 `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	IconUrl    string                 `protobuf:"bytes,102,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	Sid        int64                  `protobuf:"varint,103,opt,name=sid,proto3" json:"sid,omitempty"`
	Lat        float64                `protobuf:"fixed64,104,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng        float64                `protobuf:"fixed64,105,opt,name=lng,proto3" json:"lng,omitempty"`
	Country    string                 `protobuf:"bytes,106,opt,name=country,proto3" json:"country,omitempty"`
	Province   string                 `protobuf:"bytes,107,opt,name=province,proto3" json:"province,omitempty"`
	City       string                 `protobuf:"bytes,108,opt,name=city,proto3" json:"city,omitempty"`
	District   string                 `protobuf:"bytes,109,opt,name=district,proto3" json:"district,omitempty"`
	Address    string                 `protobuf:"bytes,110,opt,name=address,proto3" json:"address,omitempty"`
	CoordType  int32                  `protobuf:"varint,111,opt,name=coordType,proto3" json:"coordType,omitempty"`
	CreatedBy  int64                  `protobuf:"varint,112,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy  int64                  `protobuf:"varint,113,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	UserId     int64                  `protobuf:"varint,117,opt,name=userId,proto3" json:"userId,omitempty"`
	RoomList   []*HomeRoom            `protobuf:"bytes,118,rep,name=roomList,proto3" json:"roomList,omitempty"`
	CountryId  int64                  `protobuf:"varint,119,opt,name=countryId,proto3" json:"countryId,omitempty"`
	ProvinceId int64                  `protobuf:"varint,120,opt,name=provinceId,proto3" json:"provinceId,omitempty"`
	CityId     int64                  `protobuf:"varint,121,opt,name=cityId,proto3" json:"cityId,omitempty"`
}

func (x *UcHomeReq) Reset() {
	*x = UcHomeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeReq) ProtoMessage() {}

func (x *UcHomeReq) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeReq.ProtoReflect.Descriptor instead.
func (*UcHomeReq) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *UcHomeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UcHomeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UcHomeReq) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *UcHomeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *UcHomeReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UcHomeReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *UcHomeReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UcHomeReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UcHomeReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UcHomeReq) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UcHomeReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UcHomeReq) GetCoordType() int32 {
	if x != nil {
		return x.CoordType
	}
	return 0
}

func (x *UcHomeReq) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UcHomeReq) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UcHomeReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UcHomeReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UcHomeReq) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UcHomeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UcHomeReq) GetRoomList() []*HomeRoom {
	if x != nil {
		return x.RoomList
	}
	return nil
}

func (x *UcHomeReq) GetCountryId() int64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *UcHomeReq) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *UcHomeReq) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type HomeRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,102,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *HomeRoom) Reset() {
	*x = HomeRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRoom) ProtoMessage() {}

func (x *HomeRoom) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRoom.ProtoReflect.Descriptor instead.
func (*HomeRoom) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *HomeRoom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeRoom) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type UcHomeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *UcHome `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64   `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64   `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string  `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string  `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *UcHomeListRequest) Reset() {
	*x = UcHomeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeListRequest) ProtoMessage() {}

func (x *UcHomeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeListRequest.ProtoReflect.Descriptor instead.
func (*UcHomeListRequest) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *UcHomeListRequest) GetQuery() *UcHome {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *UcHomeListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UcHomeListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UcHomeListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *UcHomeListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type UcHomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32     `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64     `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*UcHome `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UcHomeResponse) Reset() {
	*x = UcHomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeResponse) ProtoMessage() {}

func (x *UcHomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeResponse.ProtoReflect.Descriptor instead.
func (*UcHomeResponse) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *UcHomeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UcHomeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UcHomeResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UcHomeResponse) GetData() []*UcHome {
	if x != nil {
		return x.Data
	}
	return nil
}

type UcHomeUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *UcHome  `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UcHomeUpdateFieldsRequest) Reset() {
	*x = UcHomeUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeUpdateFieldsRequest) ProtoMessage() {}

func (x *UcHomeUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*UcHomeUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *UcHomeUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UcHomeUpdateFieldsRequest) GetData() *UcHome {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type UcHomePrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UcHomePrimarykey) Reset() {
	*x = UcHomePrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomePrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomePrimarykey) ProtoMessage() {}

func (x *UcHomePrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomePrimarykey.ProtoReflect.Descriptor instead.
func (*UcHomePrimarykey) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{7}
}

func (x *UcHomePrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UcHomeBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*UcHomePrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *UcHomeBatchDeleteRequest) Reset() {
	*x = UcHomeBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeBatchDeleteRequest) ProtoMessage() {}

func (x *UcHomeBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*UcHomeBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{8}
}

func (x *UcHomeBatchDeleteRequest) GetKeys() []*UcHomePrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type UcHomeDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeId      int64          `protobuf:"varint,101,opt,name=homeId,proto3" json:"homeId,omitempty"`
	UserId      int64          `protobuf:"varint,102,opt,name=userId,proto3" json:"userId,omitempty"`
	RoleType    int32          `protobuf:"varint,103,opt,name=roleType,proto3" json:"roleType,omitempty"`
	ThirdUserId int64          `protobuf:"varint,104,opt,name=thirdUserId,proto3" json:"thirdUserId,omitempty"`
	Ip          string         `protobuf:"bytes,105,opt,name=ip,proto3" json:"ip,omitempty"`               //ip地址
	UnloadSet   *UnLoadDataSet `protobuf:"bytes,106,opt,name=unloadSet,proto3" json:"unloadSet,omitempty"` //不加载数据设置
}

func (x *UcHomeDetailRequest) Reset() {
	*x = UcHomeDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeDetailRequest) ProtoMessage() {}

func (x *UcHomeDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeDetailRequest.ProtoReflect.Descriptor instead.
func (*UcHomeDetailRequest) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{9}
}

func (x *UcHomeDetailRequest) GetHomeId() int64 {
	if x != nil {
		return x.HomeId
	}
	return 0
}

func (x *UcHomeDetailRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UcHomeDetailRequest) GetRoleType() int32 {
	if x != nil {
		return x.RoleType
	}
	return 0
}

func (x *UcHomeDetailRequest) GetThirdUserId() int64 {
	if x != nil {
		return x.ThirdUserId
	}
	return 0
}

func (x *UcHomeDetailRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UcHomeDetailRequest) GetUnloadSet() *UnLoadDataSet {
	if x != nil {
		return x.UnloadSet
	}
	return nil
}

type UnLoadDataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnLoadDevices bool `protobuf:"varint,101,opt,name=UnLoadDevices,proto3" json:"UnLoadDevices,omitempty"` //不读取设备数据
	UnLoadRooms   bool `protobuf:"varint,102,opt,name=UnLoadRooms,proto3" json:"UnLoadRooms,omitempty"`     //不读取房间数据
	UnLoadUsers   bool `protobuf:"varint,103,opt,name=UnLoadUsers,proto3" json:"UnLoadUsers,omitempty"`     //不读取用列表数据
}

func (x *UnLoadDataSet) Reset() {
	*x = UnLoadDataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadDataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadDataSet) ProtoMessage() {}

func (x *UnLoadDataSet) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadDataSet.ProtoReflect.Descriptor instead.
func (*UnLoadDataSet) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{10}
}

func (x *UnLoadDataSet) GetUnLoadDevices() bool {
	if x != nil {
		return x.UnLoadDevices
	}
	return false
}

func (x *UnLoadDataSet) GetUnLoadRooms() bool {
	if x != nil {
		return x.UnLoadRooms
	}
	return false
}

func (x *UnLoadDataSet) GetUnLoadUsers() bool {
	if x != nil {
		return x.UnLoadUsers
	}
	return false
}

type UcHomeDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32         `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Data    *UcHomeDetail `protobuf:"bytes,103,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UcHomeDetailResponse) Reset() {
	*x = UcHomeDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeDetailResponse) ProtoMessage() {}

func (x *UcHomeDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeDetailResponse.ProtoReflect.Descriptor instead.
func (*UcHomeDetailResponse) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{11}
}

func (x *UcHomeDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UcHomeDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UcHomeDetailResponse) GetData() *UcHomeDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type UcHomeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *UcHome       `protobuf:"bytes,101,opt,name=data,proto3" json:"data,omitempty"`
	UserList   []*UserHome   `protobuf:"bytes,102,rep,name=userList,proto3" json:"userList,omitempty"`
	RoomList   []*RoomHome   `protobuf:"bytes,103,rep,name=roomList,proto3" json:"roomList,omitempty"`
	DeviceList []*DeviceInfo `protobuf:"bytes,104,rep,name=deviceList,proto3" json:"deviceList,omitempty"`
}

func (x *UcHomeDetail) Reset() {
	*x = UcHomeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcHomeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcHomeDetail) ProtoMessage() {}

func (x *UcHomeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcHomeDetail.ProtoReflect.Descriptor instead.
func (*UcHomeDetail) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{12}
}

func (x *UcHomeDetail) GetData() *UcHome {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UcHomeDetail) GetUserList() []*UserHome {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *UcHomeDetail) GetRoomList() []*RoomHome {
	if x != nil {
		return x.RoomList
	}
	return nil
}

func (x *UcHomeDetail) GetDeviceList() []*DeviceInfo {
	if x != nil {
		return x.DeviceList
	}
	return nil
}

type UserHome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,101,opt,name=uid,proto3" json:"uid,omitempty"`
	Role     int32  `protobuf:"varint,102,opt,name=role,proto3" json:"role,omitempty"`
	Photo    string `protobuf:"bytes,103,opt,name=photo,proto3" json:"photo,omitempty"`
	NickName string `protobuf:"bytes,104,opt,name=nickName,proto3" json:"nickName,omitempty"`
}

func (x *UserHome) Reset() {
	*x = UserHome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHome) ProtoMessage() {}

func (x *UserHome) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHome.ProtoReflect.Descriptor instead.
func (*UserHome) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{13}
}

func (x *UserHome) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserHome) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *UserHome) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *UserHome) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type RoomHome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         string `protobuf:"bytes,101,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Name           string `protobuf:"bytes,102,opt,name=name,proto3" json:"name,omitempty"`
	Sort           int32  `protobuf:"varint,103,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon           string `protobuf:"bytes,104,opt,name=icon,proto3" json:"icon,omitempty"`
	DeviceCount    int32  `protobuf:"varint,105,opt,name=deviceCount,proto3" json:"deviceCount,omitempty"`
	RoomTemplateId int64  `protobuf:"varint,106,opt,name=roomTemplateId,proto3" json:"roomTemplateId,omitempty"`
}

func (x *RoomHome) Reset() {
	*x = RoomHome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomHome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomHome) ProtoMessage() {}

func (x *RoomHome) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomHome.ProtoReflect.Descriptor instead.
func (*RoomHome) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{14}
}

func (x *RoomHome) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomHome) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomHome) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RoomHome) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RoomHome) GetDeviceCount() int32 {
	if x != nil {
		return x.DeviceCount
	}
	return 0
}

func (x *RoomHome) GetRoomTemplateId() int64 {
	if x != nil {
		return x.RoomTemplateId
	}
	return 0
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *HomeIotDevInfo `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{15}
}

func (x *DeviceInfo) GetData() *HomeIotDevInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

//来源于数据表
type HomeIotDevInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:36;"
	Did string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID(t_cloud_product.id);comment:产品ID(t_cloud_product.id);size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"onlineStatus" gorm:"default:在线状态（0 在线 1 不在线）;comment:在线状态（0 在线 1 不在线）;size:10;"
	OnlineStatus int32 `protobuf:"varint,103,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`
	// @inject_tag: json:"deviceName" gorm:"default:设备名称;comment:设备名称;size:50;"
	DeviceName string `protobuf:"bytes,104,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	// @inject_tag: json:"deviceNature" gorm:"default:设备性质;comment:设备性质;size:50;"
	DeviceNature string `protobuf:"bytes,105,opt,name=deviceNature,proto3" json:"deviceNature,omitempty"`
	// @inject_tag: json:"sn" gorm:"default:设备SN;comment:设备SN;size:50;"
	Sn string `protobuf:"bytes,106,opt,name=sn,proto3" json:"sn,omitempty"`
	// @inject_tag: json:"batchId" gorm:"default:批次ID(t_cloud_device_batch.id);comment:批次ID(t_cloud_device_batch.id);size:19;"
	BatchId int64 `protobuf:"varint,107,opt,name=batchId,proto3" json:"batchId,omitempty"`
	// @inject_tag: json:"groupId" gorm:"default:设备组ID（t_cloud_device_group.id）;comment:设备组ID（t_cloud_device_group.id）;size:19;"
	GroupId int64 `protobuf:"varint,108,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// @inject_tag: json:"deviceModel" gorm:"default:设备型号;comment:设备型号;size:20;"
	DeviceModel string `protobuf:"bytes,109,opt,name=deviceModel,proto3" json:"deviceModel,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:14;"
	UserName string `protobuf:"bytes,110,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"passward" gorm:"default:设备密码;comment:设备密码;size:50;"
	Passward string `protobuf:"bytes,111,opt,name=passward,proto3" json:"passward,omitempty"`
	// @inject_tag: json:"salt" gorm:"default:盐值;comment:盐值;size:20;"
	Salt string `protobuf:"bytes,112,opt,name=salt,proto3" json:"salt,omitempty"`
	// @inject_tag: json:"deviceSecretHttp" gorm:"default:设备密钥（http）;comment:设备密钥（http）;size:20;"
	DeviceSecretHttp string `protobuf:"bytes,113,opt,name=deviceSecretHttp,proto3" json:"deviceSecretHttp,omitempty"`
	// @inject_tag: json:"deviceSecretMqtt" gorm:"default:设备密钥（mqtt）;comment:设备密钥（mqtt）;size:20;"
	DeviceSecretMqtt string `protobuf:"bytes,114,opt,name=deviceSecretMqtt,proto3" json:"deviceSecretMqtt,omitempty"`
	// @inject_tag: json:"ipAddress" gorm:"default:ip地址;comment:ip地址;size:20;"
	IpAddress string `protobuf:"bytes,115,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:纬度;comment:纬度;size:19;"
	Lat float64 `protobuf:"fixed64,116,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:经度;comment:经度;size:19;"
	Lng float64 `protobuf:"fixed64,117,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:国家编码;comment:国家编码;size:19;"
	Country string `protobuf:"bytes,118,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:省份编码;comment:省份编码;size:100;"
	Province string `protobuf:"bytes,119,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:城市编码;comment:城市编码;size:255;"
	City string `protobuf:"bytes,120,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:地区编码;comment:地区编码;size:255;"
	District string `protobuf:"bytes,121,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"activatedTime" gorm:"default:激活时间;comment:激活时间;size:255;"
	ActivatedTime *timestamppb.Timestamp `protobuf:"bytes,122,opt,name=activatedTime,proto3" json:"activatedTime,omitempty"`
	// @inject_tag: json:"macAddress" gorm:"default:mac地址;comment:mac地址;size:255;"
	MacAddress string `protobuf:"bytes,123,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	// @inject_tag: json:"deviceVersion" gorm:"default:设备版本;comment:设备版本;size:255;"
	DeviceVersion string `protobuf:"bytes,124,opt,name=deviceVersion,proto3" json:"deviceVersion,omitempty"`
	// @inject_tag: json:"activeStatus" gorm:"default:激活状态[0:未激活,1:已激活];comment:激活状态[0:未激活,1:已激活];size:255;"
	ActiveStatus   string                 `protobuf:"bytes,125,opt,name=activeStatus,proto3" json:"activeStatus,omitempty"`
	ProductPic     string                 `protobuf:"bytes,126,opt,name=productPic,proto3" json:"productPic,omitempty"`
	RoomName       string                 `protobuf:"bytes,127,opt,name=roomName,proto3" json:"roomName,omitempty"`
	RoomId         string                 `protobuf:"bytes,128,opt,name=roomId,proto3" json:"roomId,omitempty"`
	ProductKey     string                 `protobuf:"bytes,129,opt,name=productKey,proto3" json:"productKey,omitempty"`
	SecretKey      string                 `protobuf:"bytes,130,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	MqttServer     string                 `protobuf:"bytes,131,opt,name=mqttServer,proto3" json:"mqttServer,omitempty"`
	Switch         int32                  `protobuf:"varint,132,opt,name=switch,proto3" json:"switch,omitempty"` //开关状态
	BindTime       *timestamppb.Timestamp `protobuf:"bytes,133,opt,name=bindTime,proto3" json:"bindTime,omitempty"`
	RoomTemplateId int64                  `protobuf:"varint,134,opt,name=roomTemplateId,proto3" json:"roomTemplateId,omitempty"` //房间模板Id
	//面板Id
	PanelId int64 `protobuf:"varint,135,opt,name=panelId,proto3" json:"panelId,omitempty"`
	//面板类型
	AppPanelType int32 `protobuf:"varint,136,opt,name=appPanelType,proto3" json:"appPanelType,omitempty"`
}

func (x *HomeIotDevInfo) Reset() {
	*x = HomeIotDevInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeIotDevInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeIotDevInfo) ProtoMessage() {}

func (x *HomeIotDevInfo) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeIotDevInfo.ProtoReflect.Descriptor instead.
func (*HomeIotDevInfo) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{16}
}

func (x *HomeIotDevInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeIotDevInfo) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *HomeIotDevInfo) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *HomeIotDevInfo) GetOnlineStatus() int32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

func (x *HomeIotDevInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *HomeIotDevInfo) GetDeviceNature() string {
	if x != nil {
		return x.DeviceNature
	}
	return ""
}

func (x *HomeIotDevInfo) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *HomeIotDevInfo) GetBatchId() int64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *HomeIotDevInfo) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *HomeIotDevInfo) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *HomeIotDevInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *HomeIotDevInfo) GetPassward() string {
	if x != nil {
		return x.Passward
	}
	return ""
}

func (x *HomeIotDevInfo) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *HomeIotDevInfo) GetDeviceSecretHttp() string {
	if x != nil {
		return x.DeviceSecretHttp
	}
	return ""
}

func (x *HomeIotDevInfo) GetDeviceSecretMqtt() string {
	if x != nil {
		return x.DeviceSecretMqtt
	}
	return ""
}

func (x *HomeIotDevInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *HomeIotDevInfo) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *HomeIotDevInfo) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *HomeIotDevInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *HomeIotDevInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *HomeIotDevInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *HomeIotDevInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *HomeIotDevInfo) GetActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedTime
	}
	return nil
}

func (x *HomeIotDevInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *HomeIotDevInfo) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *HomeIotDevInfo) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *HomeIotDevInfo) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *HomeIotDevInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *HomeIotDevInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *HomeIotDevInfo) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *HomeIotDevInfo) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *HomeIotDevInfo) GetMqttServer() string {
	if x != nil {
		return x.MqttServer
	}
	return ""
}

func (x *HomeIotDevInfo) GetSwitch() int32 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *HomeIotDevInfo) GetBindTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BindTime
	}
	return nil
}

func (x *HomeIotDevInfo) GetRoomTemplateId() int64 {
	if x != nil {
		return x.RoomTemplateId
	}
	return 0
}

func (x *HomeIotDevInfo) GetPanelId() int64 {
	if x != nil {
		return x.PanelId
	}
	return 0
}

func (x *HomeIotDevInfo) GetAppPanelType() int32 {
	if x != nil {
		return x.AppPanelType
	}
	return 0
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:36;"
	Did string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品ID(t_cloud_product.id);comment:产品ID(t_cloud_product.id);size:19;"
	ProductId int64 `protobuf:"varint,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"onlineStatus" gorm:"default:在线状态（0 在线 1 不在线）;comment:在线状态（0 在线 1 不在线）;size:10;"
	OnlineStatus int32 `protobuf:"varint,103,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`
	// @inject_tag: json:"deviceName" gorm:"default:设备名称;comment:设备名称;size:50;"
	DeviceName string `protobuf:"bytes,104,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	// @inject_tag: json:"deviceNature" gorm:"default:设备性质;comment:设备性质;size:50;"
	DeviceNature string `protobuf:"bytes,105,opt,name=deviceNature,proto3" json:"deviceNature,omitempty"`
	// @inject_tag: json:"sn" gorm:"default:设备SN;comment:设备SN;size:50;"
	Sn string `protobuf:"bytes,106,opt,name=sn,proto3" json:"sn,omitempty"`
	// @inject_tag: json:"batchId" gorm:"default:批次ID(t_cloud_device_batch.id);comment:批次ID(t_cloud_device_batch.id);size:19;"
	BatchId int64 `protobuf:"varint,107,opt,name=batchId,proto3" json:"batchId,omitempty"`
	// @inject_tag: json:"groupId" gorm:"default:设备组ID（t_cloud_device_group.id）;comment:设备组ID（t_cloud_device_group.id）;size:19;"
	GroupId int64 `protobuf:"varint,108,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// @inject_tag: json:"deviceModel" gorm:"default:设备型号;comment:设备型号;size:20;"
	DeviceModel string `protobuf:"bytes,109,opt,name=deviceModel,proto3" json:"deviceModel,omitempty"`
	// @inject_tag: json:"userName" gorm:"default:用户名;comment:用户名;size:14;"
	UserName string `protobuf:"bytes,110,opt,name=userName,proto3" json:"userName,omitempty"`
	// @inject_tag: json:"passward" gorm:"default:设备密码;comment:设备密码;size:50;"
	Passward string `protobuf:"bytes,111,opt,name=passward,proto3" json:"passward,omitempty"`
	// @inject_tag: json:"salt" gorm:"default:盐值;comment:盐值;size:20;"
	Salt string `protobuf:"bytes,112,opt,name=salt,proto3" json:"salt,omitempty"`
	// @inject_tag: json:"deviceSecretHttp" gorm:"default:设备密钥（http）;comment:设备密钥（http）;size:20;"
	DeviceSecretHttp string `protobuf:"bytes,113,opt,name=deviceSecretHttp,proto3" json:"deviceSecretHttp,omitempty"`
	// @inject_tag: json:"deviceSecretMqtt" gorm:"default:设备密钥（mqtt）;comment:设备密钥（mqtt）;size:20;"
	DeviceSecretMqtt string `protobuf:"bytes,114,opt,name=deviceSecretMqtt,proto3" json:"deviceSecretMqtt,omitempty"`
	// @inject_tag: json:"ipAddress" gorm:"default:ip地址;comment:ip地址;size:20;"
	IpAddress string `protobuf:"bytes,115,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	// @inject_tag: json:"lat" gorm:"default:纬度;comment:纬度;size:19;"
	Lat int64 `protobuf:"varint,116,opt,name=lat,proto3" json:"lat,omitempty"`
	// @inject_tag: json:"lng" gorm:"default:经度;comment:经度;size:19;"
	Lng int64 `protobuf:"varint,117,opt,name=lng,proto3" json:"lng,omitempty"`
	// @inject_tag: json:"country" gorm:"default:国家编码;comment:国家编码;size:19;"
	Country int64 `protobuf:"varint,118,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"province" gorm:"default:省份编码;comment:省份编码;size:100;"
	Province string `protobuf:"bytes,119,opt,name=province,proto3" json:"province,omitempty"`
	// @inject_tag: json:"city" gorm:"default:城市编码;comment:城市编码;size:255;"
	City string `protobuf:"bytes,120,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"district" gorm:"default:地区编码;comment:地区编码;size:255;"
	District string `protobuf:"bytes,121,opt,name=district,proto3" json:"district,omitempty"`
	// @inject_tag: json:"activatedTime" gorm:"default:激活时间;comment:激活时间;size:255;"
	ActivatedTime *timestamppb.Timestamp `protobuf:"bytes,122,opt,name=activatedTime,proto3" json:"activatedTime,omitempty"`
	// @inject_tag: json:"macAddress" gorm:"default:mac地址;comment:mac地址;size:255;"
	MacAddress string `protobuf:"bytes,123,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	// @inject_tag: json:"deviceVersion" gorm:"default:设备版本;comment:设备版本;size:255;"
	DeviceVersion string `protobuf:"bytes,124,opt,name=deviceVersion,proto3" json:"deviceVersion,omitempty"`
	// @inject_tag: json:"activeStatus" gorm:"default:激活状态[0:未激活,1:已激活];comment:激活状态[0:未激活,1:已激活];size:255;"
	ActiveStatus string `protobuf:"bytes,125,opt,name=activeStatus,proto3" json:"activeStatus,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,126,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,127,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,128,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,129,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,130,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"lastActivatedTime" gorm:"default:最后激活时间;comment:最后激活时间;size:20;"
	LastActivatedTime *timestamppb.Timestamp `protobuf:"bytes,131,opt,name=lastActivatedTime,proto3" json:"lastActivatedTime,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_home_model_gen_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_uc_home_model_gen_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_uc_home_model_gen_proto_rawDescGZIP(), []int{17}
}

func (x *Device) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Device) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Device) GetOnlineStatus() int32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

func (x *Device) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Device) GetDeviceNature() string {
	if x != nil {
		return x.DeviceNature
	}
	return ""
}

func (x *Device) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *Device) GetBatchId() int64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *Device) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Device) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *Device) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Device) GetPassward() string {
	if x != nil {
		return x.Passward
	}
	return ""
}

func (x *Device) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *Device) GetDeviceSecretHttp() string {
	if x != nil {
		return x.DeviceSecretHttp
	}
	return ""
}

func (x *Device) GetDeviceSecretMqtt() string {
	if x != nil {
		return x.DeviceSecretMqtt
	}
	return ""
}

func (x *Device) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Device) GetLat() int64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Device) GetLng() int64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Device) GetCountry() int64 {
	if x != nil {
		return x.Country
	}
	return 0
}

func (x *Device) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Device) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Device) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Device) GetActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedTime
	}
	return nil
}

func (x *Device) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Device) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *Device) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *Device) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Device) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Device) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Device) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Device) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Device) GetLastActivatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivatedTime
	}
	return nil
}

var File_uc_home_model_gen_proto protoreflect.FileDescriptor

var file_uc_home_model_gen_proto_rawDesc = []byte{
	0x0a, 0x17, 0x75, 0x63, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xda, 0x04, 0x0a, 0x06, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x69, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x77, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x79, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x22, 0xe0, 0x04, 0x0a, 0x0c, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x69, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x70, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x77, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x79, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0xa4, 0x05, 0x0a, 0x09, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x69, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x70, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x75, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x76, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x77, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x78, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x79, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x08, 0x48, 0x6f,
	0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xa4,
	0x01, 0x0a, 0x11, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63,
	0x48, 0x6f, 0x6d, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x22, 0x79, 0x0a, 0x0e, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x58, 0x0a, 0x19, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63,
	0x48, 0x6f, 0x6d, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x10, 0x55, 0x63,
	0x48, 0x6f, 0x6d, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49,
	0x0a, 0x18, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x55, 0x63,
	0x48, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x34, 0x0a, 0x09, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x74, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x52, 0x09, 0x75, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x65, 0x74, 0x22, 0x79, 0x0a, 0x0d, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x55,
	0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x6f, 0x0a, 0x14, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x63, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x55, 0x63, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x63, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x66, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x68,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa8,
	0x01, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x09, 0x0a, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x18, 0x6f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x48, 0x74, 0x74, 0x70, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74,
	0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x74,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67,
	0x18, 0x75, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x18, 0x7e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x71, 0x74, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x71, 0x74, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x84, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x37, 0x0a, 0x08,
	0x62, 0x69, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x07, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x87, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x88, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc6,
	0x08, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x74, 0x74, 0x70, 0x12,
	0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d,
	0x71, 0x74, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6e, 0x67, 0x18, 0x75, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x7d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x82,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x49, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_uc_home_model_gen_proto_rawDescOnce sync.Once
	file_uc_home_model_gen_proto_rawDescData = file_uc_home_model_gen_proto_rawDesc
)

func file_uc_home_model_gen_proto_rawDescGZIP() []byte {
	file_uc_home_model_gen_proto_rawDescOnce.Do(func() {
		file_uc_home_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_uc_home_model_gen_proto_rawDescData)
	})
	return file_uc_home_model_gen_proto_rawDescData
}

var file_uc_home_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_uc_home_model_gen_proto_goTypes = []interface{}{
	(*UcHome)(nil),                    // 0: service.UcHome
	(*UcHomeFilter)(nil),              // 1: service.UcHomeFilter
	(*UcHomeReq)(nil),                 // 2: service.UcHomeReq
	(*HomeRoom)(nil),                  // 3: service.HomeRoom
	(*UcHomeListRequest)(nil),         // 4: service.UcHomeListRequest
	(*UcHomeResponse)(nil),            // 5: service.UcHomeResponse
	(*UcHomeUpdateFieldsRequest)(nil), // 6: service.UcHomeUpdateFieldsRequest
	(*UcHomePrimarykey)(nil),          // 7: service.UcHomePrimarykey
	(*UcHomeBatchDeleteRequest)(nil),  // 8: service.UcHomeBatchDeleteRequest
	(*UcHomeDetailRequest)(nil),       // 9: service.UcHomeDetailRequest
	(*UnLoadDataSet)(nil),             // 10: service.UnLoadDataSet
	(*UcHomeDetailResponse)(nil),      // 11: service.UcHomeDetailResponse
	(*UcHomeDetail)(nil),              // 12: service.UcHomeDetail
	(*UserHome)(nil),                  // 13: service.UserHome
	(*RoomHome)(nil),                  // 14: service.RoomHome
	(*DeviceInfo)(nil),                // 15: service.DeviceInfo
	(*HomeIotDevInfo)(nil),            // 16: service.HomeIotDevInfo
	(*Device)(nil),                    // 17: service.Device
	(*timestamppb.Timestamp)(nil),     // 18: google.protobuf.Timestamp
}
var file_uc_home_model_gen_proto_depIdxs = []int32{
	18, // 0: service.UcHome.createdAt:type_name -> google.protobuf.Timestamp
	18, // 1: service.UcHome.updatedAt:type_name -> google.protobuf.Timestamp
	18, // 2: service.UcHome.deletedAt:type_name -> google.protobuf.Timestamp
	18, // 3: service.UcHomeFilter.createdAt:type_name -> google.protobuf.Timestamp
	18, // 4: service.UcHomeFilter.updatedAt:type_name -> google.protobuf.Timestamp
	18, // 5: service.UcHomeFilter.deletedAt:type_name -> google.protobuf.Timestamp
	18, // 6: service.UcHomeReq.createdAt:type_name -> google.protobuf.Timestamp
	18, // 7: service.UcHomeReq.updatedAt:type_name -> google.protobuf.Timestamp
	18, // 8: service.UcHomeReq.deletedAt:type_name -> google.protobuf.Timestamp
	3,  // 9: service.UcHomeReq.roomList:type_name -> service.HomeRoom
	0,  // 10: service.UcHomeListRequest.query:type_name -> service.UcHome
	0,  // 11: service.UcHomeResponse.data:type_name -> service.UcHome
	0,  // 12: service.UcHomeUpdateFieldsRequest.data:type_name -> service.UcHome
	7,  // 13: service.UcHomeBatchDeleteRequest.keys:type_name -> service.UcHomePrimarykey
	10, // 14: service.UcHomeDetailRequest.unloadSet:type_name -> service.UnLoadDataSet
	12, // 15: service.UcHomeDetailResponse.data:type_name -> service.UcHomeDetail
	0,  // 16: service.UcHomeDetail.data:type_name -> service.UcHome
	13, // 17: service.UcHomeDetail.userList:type_name -> service.UserHome
	14, // 18: service.UcHomeDetail.roomList:type_name -> service.RoomHome
	15, // 19: service.UcHomeDetail.deviceList:type_name -> service.DeviceInfo
	16, // 20: service.DeviceInfo.data:type_name -> service.HomeIotDevInfo
	18, // 21: service.HomeIotDevInfo.activatedTime:type_name -> google.protobuf.Timestamp
	18, // 22: service.HomeIotDevInfo.bindTime:type_name -> google.protobuf.Timestamp
	18, // 23: service.Device.activatedTime:type_name -> google.protobuf.Timestamp
	18, // 24: service.Device.createdAt:type_name -> google.protobuf.Timestamp
	18, // 25: service.Device.updatedAt:type_name -> google.protobuf.Timestamp
	18, // 26: service.Device.deletedAt:type_name -> google.protobuf.Timestamp
	18, // 27: service.Device.lastActivatedTime:type_name -> google.protobuf.Timestamp
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_uc_home_model_gen_proto_init() }
func file_uc_home_model_gen_proto_init() {
	if File_uc_home_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uc_home_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomePrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadDataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcHomeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomHome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeIotDevInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_home_model_gen_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uc_home_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_uc_home_model_gen_proto_goTypes,
		DependencyIndexes: file_uc_home_model_gen_proto_depIdxs,
		MessageInfos:      file_uc_home_model_gen_proto_msgTypes,
	}.Build()
	File_uc_home_model_gen_proto = out.File
	file_uc_home_model_gen_proto_rawDesc = nil
	file_uc_home_model_gen_proto_goTypes = nil
	file_uc_home_model_gen_proto_depIdxs = nil
}
