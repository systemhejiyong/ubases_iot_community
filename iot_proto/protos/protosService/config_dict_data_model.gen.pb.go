// Code generated by protoc,2022-05-16 10:53:27. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: config_dict_data_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type ConfigDictData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dictCode" gorm:"primary_key;AUTO_INCREMENT;default:字典编码;comment:字典编码;size:19;"
	DictCode int64 `protobuf:"varint,100,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	// @inject_tag: json:"dictSort" gorm:"default:字典排序;comment:字典排序;size:10;"
	DictSort int32 `protobuf:"varint,101,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	// @inject_tag: json:"dictLabel" gorm:"default:字典标签;comment:字典标签;size:100;"
	DictLabel string `protobuf:"bytes,102,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	// @inject_tag: json:"dictValue" gorm:"default:字典键值;comment:字典键值;size:100;"
	DictValue string `protobuf:"bytes,103,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	// @inject_tag: json:"dictType" gorm:"default:字典类型;comment:字典类型;size:100;"
	DictType string `protobuf:"bytes,104,opt,name=dictType,proto3" json:"dictType,omitempty"`
	// @inject_tag: json:"valueType" gorm:"default:1-整形，2-浮点,  3-字符串;comment:1-整形，2-浮点,  3-字符串;size:10;"
	ValueType int32 `protobuf:"varint,105,opt,name=valueType,proto3" json:"valueType,omitempty"`
	// @inject_tag: json:"cssClass" gorm:"default:样式属性（其他样式扩展）;comment:样式属性（其他样式扩展）;size:100;"
	CssClass string `protobuf:"bytes,106,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	// @inject_tag: json:"listClass" gorm:"default:表格回显样式;comment:表格回显样式;size:100;"
	ListClass string `protobuf:"bytes,107,opt,name=listClass,proto3" json:"listClass,omitempty"`
	// @inject_tag: json:"isDefault" gorm:"default:是否默认（1是 0否）;comment:是否默认（1是 0否）;size:10;"
	IsDefault int32 `protobuf:"varint,108,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（0正常 1停用）;comment:状态（0正常 1停用）;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:500;"
	Remark string `protobuf:"bytes,110,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"pinyin" gorm:"default:拼音;comment:拼音;size:100;"
	Pinyin string `protobuf:"bytes,111,opt,name=pinyin,proto3" json:"pinyin,omitempty"`
	// @inject_tag: json:"firstletter" gorm:"default:首字母;comment:首字母;size:64;"
	Firstletter string `protobuf:"bytes,112,opt,name=firstletter,proto3" json:"firstletter,omitempty"`
	// @inject_tag: json:"listimg" gorm:"default:图片;comment:图片;size:255;"
	Listimg string `protobuf:"bytes,113,opt,name=listimg,proto3" json:"listimg,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,114,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,115,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt    *timestamppb.Timestamp `protobuf:"bytes,118,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	DictTypeList []string               `protobuf:"bytes,119,rep,name=dictTypeList,proto3" json:"dictTypeList,omitempty"`
}

func (x *ConfigDictData) Reset() {
	*x = ConfigDictData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictData) ProtoMessage() {}

func (x *ConfigDictData) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictData.ProtoReflect.Descriptor instead.
func (*ConfigDictData) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigDictData) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *ConfigDictData) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *ConfigDictData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *ConfigDictData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *ConfigDictData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *ConfigDictData) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

func (x *ConfigDictData) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *ConfigDictData) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *ConfigDictData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *ConfigDictData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ConfigDictData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ConfigDictData) GetPinyin() string {
	if x != nil {
		return x.Pinyin
	}
	return ""
}

func (x *ConfigDictData) GetFirstletter() string {
	if x != nil {
		return x.Firstletter
	}
	return ""
}

func (x *ConfigDictData) GetListimg() string {
	if x != nil {
		return x.Listimg
	}
	return ""
}

func (x *ConfigDictData) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *ConfigDictData) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *ConfigDictData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConfigDictData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConfigDictData) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ConfigDictData) GetDictTypeList() []string {
	if x != nil {
		return x.DictTypeList
	}
	return nil
}

type ConfigDictDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dictCode" gorm:"primary_key;AUTO_INCREMENT;default:字典编码;comment:字典编码;size:19;"
	DictCode int64 `protobuf:"varint,100,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	// @inject_tag: json:"dictSort" gorm:"default:字典排序;comment:字典排序;size:10;"
	DictSort int32 `protobuf:"varint,101,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	// @inject_tag: json:"dictLabel" gorm:"default:字典标签;comment:字典标签;size:100;"
	DictLabel string `protobuf:"bytes,102,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	// @inject_tag: json:"dictValue" gorm:"default:字典键值;comment:字典键值;size:100;"
	DictValue string `protobuf:"bytes,103,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	// @inject_tag: json:"dictType" gorm:"default:字典类型;comment:字典类型;size:100;"
	DictType string `protobuf:"bytes,104,opt,name=dictType,proto3" json:"dictType,omitempty"`
	// @inject_tag: json:"valueType" gorm:"default:1-整形，2-浮点,  3-字符串;comment:1-整形，2-浮点,  3-字符串;size:10;"
	ValueType int32 `protobuf:"varint,105,opt,name=valueType,proto3" json:"valueType,omitempty"`
	// @inject_tag: json:"cssClass" gorm:"default:样式属性（其他样式扩展）;comment:样式属性（其他样式扩展）;size:100;"
	CssClass string `protobuf:"bytes,106,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	// @inject_tag: json:"listClass" gorm:"default:表格回显样式;comment:表格回显样式;size:100;"
	ListClass string `protobuf:"bytes,107,opt,name=listClass,proto3" json:"listClass,omitempty"`
	// @inject_tag: json:"isDefault" gorm:"default:是否默认（1是 0否）;comment:是否默认（1是 0否）;size:10;"
	IsDefault int32 `protobuf:"varint,108,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（0正常 1停用）;comment:状态（0正常 1停用）;size:10;"
	Status int32 `protobuf:"varint,109,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"remark" gorm:"default:备注;comment:备注;size:500;"
	Remark string `protobuf:"bytes,110,opt,name=remark,proto3" json:"remark,omitempty"`
	// @inject_tag: json:"pinyin" gorm:"default:拼音;comment:拼音;size:100;"
	Pinyin string `protobuf:"bytes,111,opt,name=pinyin,proto3" json:"pinyin,omitempty"`
	// @inject_tag: json:"firstletter" gorm:"default:首字母;comment:首字母;size:64;"
	Firstletter string `protobuf:"bytes,112,opt,name=firstletter,proto3" json:"firstletter,omitempty"`
	// @inject_tag: json:"listimg" gorm:"default:图片;comment:图片;size:255;"
	Listimg string `protobuf:"bytes,113,opt,name=listimg,proto3" json:"listimg,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,114,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,115,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,118,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *ConfigDictDataFilter) Reset() {
	*x = ConfigDictDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictDataFilter) ProtoMessage() {}

func (x *ConfigDictDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictDataFilter.ProtoReflect.Descriptor instead.
func (*ConfigDictDataFilter) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigDictDataFilter) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *ConfigDictDataFilter) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *ConfigDictDataFilter) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *ConfigDictDataFilter) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *ConfigDictDataFilter) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *ConfigDictDataFilter) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

func (x *ConfigDictDataFilter) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *ConfigDictDataFilter) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *ConfigDictDataFilter) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *ConfigDictDataFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ConfigDictDataFilter) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ConfigDictDataFilter) GetPinyin() string {
	if x != nil {
		return x.Pinyin
	}
	return ""
}

func (x *ConfigDictDataFilter) GetFirstletter() string {
	if x != nil {
		return x.Firstletter
	}
	return ""
}

func (x *ConfigDictDataFilter) GetListimg() string {
	if x != nil {
		return x.Listimg
	}
	return ""
}

func (x *ConfigDictDataFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *ConfigDictDataFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *ConfigDictDataFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConfigDictDataFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConfigDictDataFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ConfigDictDataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *ConfigDictData `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64           `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64           `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string          `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string          `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string          `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *ConfigDictDataListRequest) Reset() {
	*x = ConfigDictDataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictDataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictDataListRequest) ProtoMessage() {}

func (x *ConfigDictDataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictDataListRequest.ProtoReflect.Descriptor instead.
func (*ConfigDictDataListRequest) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigDictDataListRequest) GetQuery() *ConfigDictData {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ConfigDictDataListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ConfigDictDataListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ConfigDictDataListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *ConfigDictDataListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *ConfigDictDataListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type ConfigDictDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64             `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*ConfigDictData `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConfigDictDataResponse) Reset() {
	*x = ConfigDictDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictDataResponse) ProtoMessage() {}

func (x *ConfigDictDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictDataResponse.ProtoReflect.Descriptor instead.
func (*ConfigDictDataResponse) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigDictDataResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigDictDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfigDictDataResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ConfigDictDataResponse) GetData() []*ConfigDictData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConfigDictDataUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *ConfigDictData `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ConfigDictDataUpdateFieldsRequest) Reset() {
	*x = ConfigDictDataUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictDataUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictDataUpdateFieldsRequest) ProtoMessage() {}

func (x *ConfigDictDataUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictDataUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*ConfigDictDataUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigDictDataUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ConfigDictDataUpdateFieldsRequest) GetData() *ConfigDictData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type ConfigDictDataPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,100,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *ConfigDictDataPrimarykey) Reset() {
	*x = ConfigDictDataPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictDataPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictDataPrimarykey) ProtoMessage() {}

func (x *ConfigDictDataPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictDataPrimarykey.ProtoReflect.Descriptor instead.
func (*ConfigDictDataPrimarykey) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigDictDataPrimarykey) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type ConfigDictDataBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*ConfigDictDataPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ConfigDictDataBatchDeleteRequest) Reset() {
	*x = ConfigDictDataBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_dict_data_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDictDataBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDictDataBatchDeleteRequest) ProtoMessage() {}

func (x *ConfigDictDataBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_dict_data_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDictDataBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*ConfigDictDataBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_config_dict_data_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigDictDataBatchDeleteRequest) GetKeys() []*ConfigDictDataPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_config_dict_data_model_gen_proto protoreflect.FileDescriptor

var file_config_dict_data_model_gen_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x05, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6d, 0x67, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6d, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x77, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8a, 0x05, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e,
	0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6d, 0x67, 0x18, 0x71, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6d, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x36, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_dict_data_model_gen_proto_rawDescOnce sync.Once
	file_config_dict_data_model_gen_proto_rawDescData = file_config_dict_data_model_gen_proto_rawDesc
)

func file_config_dict_data_model_gen_proto_rawDescGZIP() []byte {
	file_config_dict_data_model_gen_proto_rawDescOnce.Do(func() {
		file_config_dict_data_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_dict_data_model_gen_proto_rawDescData)
	})
	return file_config_dict_data_model_gen_proto_rawDescData
}

var file_config_dict_data_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_config_dict_data_model_gen_proto_goTypes = []interface{}{
	(*ConfigDictData)(nil),                    // 0: service.ConfigDictData
	(*ConfigDictDataFilter)(nil),              // 1: service.ConfigDictDataFilter
	(*ConfigDictDataListRequest)(nil),         // 2: service.ConfigDictDataListRequest
	(*ConfigDictDataResponse)(nil),            // 3: service.ConfigDictDataResponse
	(*ConfigDictDataUpdateFieldsRequest)(nil), // 4: service.ConfigDictDataUpdateFieldsRequest
	(*ConfigDictDataPrimarykey)(nil),          // 5: service.ConfigDictDataPrimarykey
	(*ConfigDictDataBatchDeleteRequest)(nil),  // 6: service.ConfigDictDataBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),             // 7: google.protobuf.Timestamp
}
var file_config_dict_data_model_gen_proto_depIdxs = []int32{
	7,  // 0: service.ConfigDictData.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 1: service.ConfigDictData.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.ConfigDictData.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.ConfigDictDataFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.ConfigDictDataFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 5: service.ConfigDictDataFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.ConfigDictDataListRequest.query:type_name -> service.ConfigDictData
	0,  // 7: service.ConfigDictDataResponse.data:type_name -> service.ConfigDictData
	0,  // 8: service.ConfigDictDataUpdateFieldsRequest.data:type_name -> service.ConfigDictData
	5,  // 9: service.ConfigDictDataBatchDeleteRequest.keys:type_name -> service.ConfigDictDataPrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_config_dict_data_model_gen_proto_init() }
func file_config_dict_data_model_gen_proto_init() {
	if File_config_dict_data_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_dict_data_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_dict_data_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_dict_data_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictDataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_dict_data_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_dict_data_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictDataUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_dict_data_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictDataPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_dict_data_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDictDataBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_dict_data_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_dict_data_model_gen_proto_goTypes,
		DependencyIndexes: file_config_dict_data_model_gen_proto_depIdxs,
		MessageInfos:      file_config_dict_data_model_gen_proto_msgTypes,
	}.Build()
	File_config_dict_data_model_gen_proto = out.File
	file_config_dict_data_model_gen_proto_rawDesc = nil
	file_config_dict_data_model_gen_proto_goTypes = nil
	file_config_dict_data_model_gen_proto_depIdxs = nil
}
