// Code generated by sgen.exe,2022-05-11 16:38:45. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: opm_thing_model_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type OpmThingModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"standard" gorm:"default:是否标准品类 0-否 1-是;comment:是否标准品类 0-否 1-是;"
	Standard int32 `protobuf:"varint,102,opt,name=standard,proto3" json:"standard,omitempty"`
	// @inject_tag: json:"version" gorm:"default:物模型版本号;comment:物模型版本号;size:10;"
	Version string `protobuf:"bytes,103,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"description" gorm:"default:物模型描述;comment:物模型描述;size:64;"
	Description string `protobuf:"bytes,104,opt,name=description,proto3" json:"description,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,105,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,106,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,107,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
	TenantId string `protobuf:"bytes,110,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	//标准功能类型
	StandardFuncType int32 `protobuf:"varint,111,opt,name=standardFuncType,proto3" json:"standardFuncType,omitempty"`
	//标准功能编号集合
	StandardFuncs []*OpmStandardFuncs      `protobuf:"bytes,112,rep,name=standardFuncs,proto3" json:"standardFuncs,omitempty"`
	Properties    *OpmThingModelProperties `protobuf:"bytes,113,opt,name=properties,proto3" json:"properties,omitempty"`
	Events        *OpmThingModelEvents     `protobuf:"bytes,114,opt,name=events,proto3" json:"events,omitempty"`
	Services      *OpmThingModelServices   `protobuf:"bytes,115,opt,name=services,proto3" json:"services,omitempty"`
}

func (x *OpmThingModel) Reset() {
	*x = OpmThingModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModel) ProtoMessage() {}

func (x *OpmThingModel) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModel.ProtoReflect.Descriptor instead.
func (*OpmThingModel) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{0}
}

func (x *OpmThingModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmThingModel) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmThingModel) GetStandard() int32 {
	if x != nil {
		return x.Standard
	}
	return 0
}

func (x *OpmThingModel) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpmThingModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OpmThingModel) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmThingModel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpmThingModel) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *OpmThingModel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpmThingModel) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpmThingModel) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *OpmThingModel) GetStandardFuncType() int32 {
	if x != nil {
		return x.StandardFuncType
	}
	return 0
}

func (x *OpmThingModel) GetStandardFuncs() []*OpmStandardFuncs {
	if x != nil {
		return x.StandardFuncs
	}
	return nil
}

func (x *OpmThingModel) GetProperties() *OpmThingModelProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *OpmThingModel) GetEvents() *OpmThingModelEvents {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *OpmThingModel) GetServices() *OpmThingModelServices {
	if x != nil {
		return x.Services
	}
	return nil
}

//来源于数据表
type OpmThingModelEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"modelId" gorm:"default:物模型ID(t_pm_thing_model.id);comment:物模型ID(t_pm_thing_model.id);size:19;"
	ModelId int64 `protobuf:"varint,101,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:50;"
	ProductId string `protobuf:"bytes,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"createTs" gorm:"default:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;comment:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;size:20;"
	CreateTs string `protobuf:"bytes,103,opt,name=createTs,proto3" json:"createTs,omitempty"`
	// @inject_tag: json:"identifier" gorm:"default:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;comment:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;size:50;"
	Identifier string `protobuf:"bytes,104,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// @inject_tag: json:"eventName" gorm:"default:事件名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文或数字开头，长度不超过30个字符，一个中文计为一个字符。;comment:事件名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文或数字开头，长度不超过30个字符，一个中文计为一个字符。;size:64;"
	EventName string `protobuf:"bytes,105,opt,name=eventName,proto3" json:"eventName,omitempty"`
	// @inject_tag: json:"eventType" gorm:"default:事件类型。INFO_EVENT_TYPE：信息。ALERT_EVENT_TYPE：告警。ERROR_EVENT_TYPE：故障。;comment:事件类型。INFO_EVENT_TYPE：信息。ALERT_EVENT_TYPE：告警。ERROR_EVENT_TYPE：故障。;size:20;"
	EventType string `protobuf:"bytes,106,opt,name=eventType,proto3" json:"eventType,omitempty"`
	// @inject_tag: json:"outputdata" gorm:"default:服务的输出参数;comment:服务的输出参数;"
	Outputdata string `protobuf:"bytes,107,opt,name=outputdata,proto3" json:"outputdata,omitempty"`
	// @inject_tag: json:"required" gorm:"default:是否是标准品类的必选服务。1：是, 0：否;comment:是否是标准品类的必选服务。1：是, 0：否;"
	Required int32 `protobuf:"varint,108,opt,name=required,proto3" json:"required,omitempty"`
	// @inject_tag: json:"custom" gorm:"default:是否是自定义功能。1：是, 0：否;comment:是否是自定义功能。1：是, 0：否;"
	Custom      int32  `protobuf:"varint,109,opt,name=custom,proto3" json:"custom,omitempty"` // @inject_tag: json:"extension" gorm:"default:扩展字段;comment:扩展字段;size:200;"
	FuncType    string `protobuf:"bytes,110,opt,name=funcType,proto3" json:"funcType,omitempty"`
	Desc        string `protobuf:"bytes,111,opt,name=desc,proto3" json:"desc,omitempty"`
	TriggerCond int32  `protobuf:"varint,112,opt,name=trigger_cond,json=triggerCond,proto3" json:"trigger_cond,omitempty"`
	ExecCond    int32  `protobuf:"varint,113,opt,name=exec_cond,json=execCond,proto3" json:"exec_cond,omitempty"`
	StdId       int64  `protobuf:"varint,114,opt,name=std_id,json=stdId,proto3" json:"std_id,omitempty"`
	Valid       int32  `protobuf:"varint,115,opt,name=valid,proto3" json:"valid,omitempty"`
	ProductKey  string `protobuf:"bytes,116,opt,name=productKey,proto3" json:"productKey,omitempty"`
	Dpid        int32  `protobuf:"varint,117,opt,name=dpid,proto3" json:"dpid,omitempty"`
}

func (x *OpmThingModelEvents) Reset() {
	*x = OpmThingModelEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelEvents) ProtoMessage() {}

func (x *OpmThingModelEvents) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelEvents.ProtoReflect.Descriptor instead.
func (*OpmThingModelEvents) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{1}
}

func (x *OpmThingModelEvents) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmThingModelEvents) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpmThingModelEvents) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OpmThingModelEvents) GetCreateTs() string {
	if x != nil {
		return x.CreateTs
	}
	return ""
}

func (x *OpmThingModelEvents) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *OpmThingModelEvents) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *OpmThingModelEvents) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *OpmThingModelEvents) GetOutputdata() string {
	if x != nil {
		return x.Outputdata
	}
	return ""
}

func (x *OpmThingModelEvents) GetRequired() int32 {
	if x != nil {
		return x.Required
	}
	return 0
}

func (x *OpmThingModelEvents) GetCustom() int32 {
	if x != nil {
		return x.Custom
	}
	return 0
}

func (x *OpmThingModelEvents) GetFuncType() string {
	if x != nil {
		return x.FuncType
	}
	return ""
}

func (x *OpmThingModelEvents) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OpmThingModelEvents) GetTriggerCond() int32 {
	if x != nil {
		return x.TriggerCond
	}
	return 0
}

func (x *OpmThingModelEvents) GetExecCond() int32 {
	if x != nil {
		return x.ExecCond
	}
	return 0
}

func (x *OpmThingModelEvents) GetStdId() int64 {
	if x != nil {
		return x.StdId
	}
	return 0
}

func (x *OpmThingModelEvents) GetValid() int32 {
	if x != nil {
		return x.Valid
	}
	return 0
}

func (x *OpmThingModelEvents) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *OpmThingModelEvents) GetDpid() int32 {
	if x != nil {
		return x.Dpid
	}
	return 0
}

//来源于数据表
type OpmThingModelProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"modelId" gorm:"default:物模型ID(t_pm_thing_model.id);comment:物模型ID(t_pm_thing_model.id);size:19;"
	ModelId int64 `protobuf:"varint,101,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:50;"
	ProductId string `protobuf:"bytes,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"createTs" gorm:"default:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;comment:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;size:20;"
	CreateTs string `protobuf:"bytes,103,opt,name=createTs,proto3" json:"createTs,omitempty"`
	// @inject_tag: json:"identifier" gorm:"default:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;comment:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;size:50;"
	Identifier string `protobuf:"bytes,104,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// @inject_tag: json:"dataType" gorm:"default:属性值的数据类型。可选值：ARRAY、STRUCT、INT、FLOAT、DOUBLE、TEXT、DATE、JSON、ENUM、BOOL。不同数据类型，可传入的参数不同。;comment:属性值的数据类型。可选值：ARRAY、STRUCT、INT、FLOAT、DOUBLE、TEXT、DATE、JSON、ENUM、BOOL。不同数据类型，可传入的参数不同。;size:64;"
	DataType string `protobuf:"bytes,105,opt,name=dataType,proto3" json:"dataType,omitempty"`
	// @inject_tag: json:"name" gorm:"default:属性名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;comment:属性名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;size:30;"
	Name string `protobuf:"bytes,106,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"rwFlag" gorm:"default:在云端可以对该属性进行的操作类型。READ_WRITE：读写。READ_ONLY：只读。WRITE_ONLY：只写。;comment:在云端可以对该属性进行的操作类型。READ_WRITE：读写。READ_ONLY：只读。WRITE_ONLY：只写。;size:10;"
	RwFlag string `protobuf:"bytes,107,opt,name=rwFlag,proto3" json:"rwFlag,omitempty"`
	// @inject_tag: json:"dataSpecs" gorm:"default:数据类型（dataType）为非列表型（INT、FLOAT、DOUBLE、TEXT、DATE、ARRAY）的数据规范存储在dataSpecs中;comment:数据类型（dataType）为非列表型（INT、FLOAT、DOUBLE、TEXT、DATE、ARRAY）的数据规范存储在dataSpecs中;"
	DataSpecs string `protobuf:"bytes,108,opt,name=dataSpecs,proto3" json:"dataSpecs,omitempty"`
	// @inject_tag: json:"dataSpecsList" gorm:"default:数据类型（dataType）为列表型（ENUM、BOOL、STRUCT）的数据规范存储在dataSpecsList中;comment:数据类型（dataType）为列表型（ENUM、BOOL、STRUCT）的数据规范存储在dataSpecsList中;"
	DataSpecsList string `protobuf:"bytes,109,opt,name=dataSpecsList,proto3" json:"dataSpecsList,omitempty"`
	// @inject_tag: json:"required" gorm:"default:是否是标准品类的必选属性。1：是, 0：否;comment:是否是标准品类的必选属性。1：是, 0：否;"
	Required int32 `protobuf:"varint,110,opt,name=required,proto3" json:"required,omitempty"`
	// @inject_tag: json:"custom" gorm:"default:是否是自定义功能。1：是, 0：否;comment:是否是自定义功能。1：是, 0：否;"
	Custom int32 `protobuf:"varint,111,opt,name=custom,proto3" json:"custom,omitempty"`
	// @inject_tag: json:"extension" gorm:"default:扩展字段;comment:扩展字段;size:200;"
	Extension string `protobuf:"bytes,112,opt,name=extension,proto3" json:"extension,omitempty"`
	Unit      string `protobuf:"bytes,113,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Step      int32  `protobuf:"varint,114,opt,name=Step,proto3" json:"Step,omitempty"`
	Multiple  string `protobuf:"bytes,115,opt,name=Multiple,proto3" json:"Multiple,omitempty"`
	//功能定义 properties、events、services
	FuncType         string `protobuf:"bytes,116,opt,name=funcType,proto3" json:"funcType,omitempty"`
	Desc             string `protobuf:"bytes,117,opt,name=desc,proto3" json:"desc,omitempty"`
	TriggerCond      int32  `protobuf:"varint,118,opt,name=trigger_cond,json=triggerCond,proto3" json:"trigger_cond,omitempty"`
	ExecCond         int32  `protobuf:"varint,119,opt,name=exec_cond,json=execCond,proto3" json:"exec_cond,omitempty"`
	StdId            int64  `protobuf:"varint,120,opt,name=std_id,json=stdId,proto3" json:"std_id,omitempty"`
	Valid            int32  `protobuf:"varint,121,opt,name=valid,proto3" json:"valid,omitempty"`
	ProductKey       string `protobuf:"bytes,122,opt,name=productKey,proto3" json:"productKey,omitempty"`
	Dpid             int32  `protobuf:"varint,123,opt,name=dpid,proto3" json:"dpid,omitempty"`
	DefaultVal       string `protobuf:"bytes,124,opt,name=defaultVal,proto3" json:"defaultVal,omitempty"`              //默认值
	TriggerCondArgs  string `protobuf:"bytes,125,opt,name=triggerCondArgs,proto3" json:"triggerCondArgs,omitempty"`    //触发条件参数
	ExecCondArgs     string `protobuf:"bytes,126,opt,name=execCondArgs,proto3" json:"execCondArgs,omitempty"`          //执行条件参数
	AllowAppointment int32  `protobuf:"varint,127,opt,name=allowAppointment,proto3" json:"allowAppointment,omitempty"` //允许预约
	AppointmentArgs  string `protobuf:"bytes,128,opt,name=appointmentArgs,proto3" json:"appointmentArgs,omitempty"`    //预约参数
	IsTop            int32  `protobuf:"varint,129,opt,name=isTop,proto3" json:"isTop,omitempty"`                       //是否顶级功能
	ParentId         int64  `protobuf:"varint,130,opt,name=parentId,proto3" json:"parentId,omitempty"`                 //父级功能 isTop=0 的时候parentId具有值
	Sort             int32  `protobuf:"varint,131,opt,name=sort,proto3" json:"sort,omitempty"`                         //排序序号
}

func (x *OpmThingModelProperties) Reset() {
	*x = OpmThingModelProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelProperties) ProtoMessage() {}

func (x *OpmThingModelProperties) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelProperties.ProtoReflect.Descriptor instead.
func (*OpmThingModelProperties) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{2}
}

func (x *OpmThingModelProperties) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmThingModelProperties) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpmThingModelProperties) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OpmThingModelProperties) GetCreateTs() string {
	if x != nil {
		return x.CreateTs
	}
	return ""
}

func (x *OpmThingModelProperties) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *OpmThingModelProperties) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *OpmThingModelProperties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpmThingModelProperties) GetRwFlag() string {
	if x != nil {
		return x.RwFlag
	}
	return ""
}

func (x *OpmThingModelProperties) GetDataSpecs() string {
	if x != nil {
		return x.DataSpecs
	}
	return ""
}

func (x *OpmThingModelProperties) GetDataSpecsList() string {
	if x != nil {
		return x.DataSpecsList
	}
	return ""
}

func (x *OpmThingModelProperties) GetRequired() int32 {
	if x != nil {
		return x.Required
	}
	return 0
}

func (x *OpmThingModelProperties) GetCustom() int32 {
	if x != nil {
		return x.Custom
	}
	return 0
}

func (x *OpmThingModelProperties) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *OpmThingModelProperties) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *OpmThingModelProperties) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *OpmThingModelProperties) GetMultiple() string {
	if x != nil {
		return x.Multiple
	}
	return ""
}

func (x *OpmThingModelProperties) GetFuncType() string {
	if x != nil {
		return x.FuncType
	}
	return ""
}

func (x *OpmThingModelProperties) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OpmThingModelProperties) GetTriggerCond() int32 {
	if x != nil {
		return x.TriggerCond
	}
	return 0
}

func (x *OpmThingModelProperties) GetExecCond() int32 {
	if x != nil {
		return x.ExecCond
	}
	return 0
}

func (x *OpmThingModelProperties) GetStdId() int64 {
	if x != nil {
		return x.StdId
	}
	return 0
}

func (x *OpmThingModelProperties) GetValid() int32 {
	if x != nil {
		return x.Valid
	}
	return 0
}

func (x *OpmThingModelProperties) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *OpmThingModelProperties) GetDpid() int32 {
	if x != nil {
		return x.Dpid
	}
	return 0
}

func (x *OpmThingModelProperties) GetDefaultVal() string {
	if x != nil {
		return x.DefaultVal
	}
	return ""
}

func (x *OpmThingModelProperties) GetTriggerCondArgs() string {
	if x != nil {
		return x.TriggerCondArgs
	}
	return ""
}

func (x *OpmThingModelProperties) GetExecCondArgs() string {
	if x != nil {
		return x.ExecCondArgs
	}
	return ""
}

func (x *OpmThingModelProperties) GetAllowAppointment() int32 {
	if x != nil {
		return x.AllowAppointment
	}
	return 0
}

func (x *OpmThingModelProperties) GetAppointmentArgs() string {
	if x != nil {
		return x.AppointmentArgs
	}
	return ""
}

func (x *OpmThingModelProperties) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *OpmThingModelProperties) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *OpmThingModelProperties) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

//来源于数据表
type OpmThingModelServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"modelId" gorm:"default:物模型ID(t_pm_thing_model.id);comment:物模型ID(t_pm_thing_model.id);size:19;"
	ModelId int64 `protobuf:"varint,101,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:50;"
	ProductId string `protobuf:"bytes,102,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"createTs" gorm:"default:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;comment:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;size:20;"
	CreateTs string `protobuf:"bytes,103,opt,name=createTs,proto3" json:"createTs,omitempty"`
	// @inject_tag: json:"identifier" gorm:"default:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;comment:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;size:50;"
	Identifier string `protobuf:"bytes,104,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// @inject_tag: json:"serviceName" gorm:"default:服务名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;comment:服务名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;size:64;"
	ServiceName string `protobuf:"bytes,105,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	// @inject_tag: json:"inputParams" gorm:"default:服务的输入参数;comment:服务的输入参数;"
	InputParams string `protobuf:"bytes,106,opt,name=inputParams,proto3" json:"inputParams,omitempty"`
	// @inject_tag: json:"outputParams" gorm:"default:服务的输出参数;comment:服务的输出参数;"
	OutputParams string `protobuf:"bytes,107,opt,name=outputParams,proto3" json:"outputParams,omitempty"`
	// @inject_tag: json:"required" gorm:"default:是否是标准品类的必选服务。1：是, 0：否;comment:是否是标准品类的必选服务。1：是, 0：否;"
	Required int32 `protobuf:"varint,108,opt,name=required,proto3" json:"required,omitempty"`
	// @inject_tag: json:"callType" gorm:"default:服务的调用方式。1：异步调用, 0：同步调用;comment:服务的调用方式。1：异步调用, 0：同步调用;"
	CallType int32 `protobuf:"varint,109,opt,name=callType,proto3" json:"callType,omitempty"`
	// @inject_tag: json:"custom" gorm:"default:是否是自定义功能。1：是, 0：否;comment:是否是自定义功能。1：是, 0：否;"
	Custom int32 `protobuf:"varint,110,opt,name=custom,proto3" json:"custom,omitempty"`
	// @inject_tag: json:"extension" gorm:"default:扩展字段;comment:扩展字段;size:200;"
	Extension   string `protobuf:"bytes,111,opt,name=extension,proto3" json:"extension,omitempty"`
	FuncType    string `protobuf:"bytes,112,opt,name=funcType,proto3" json:"funcType,omitempty"`
	Desc        string `protobuf:"bytes,113,opt,name=desc,proto3" json:"desc,omitempty"`
	TriggerCond int32  `protobuf:"varint,114,opt,name=trigger_cond,json=triggerCond,proto3" json:"trigger_cond,omitempty"`
	ExecCond    int32  `protobuf:"varint,115,opt,name=exec_cond,json=execCond,proto3" json:"exec_cond,omitempty"`
	StdId       int64  `protobuf:"varint,116,opt,name=std_id,json=stdId,proto3" json:"std_id,omitempty"`
	Valid       int32  `protobuf:"varint,117,opt,name=valid,proto3" json:"valid,omitempty"`
	ProductKey  string `protobuf:"bytes,118,opt,name=productKey,proto3" json:"productKey,omitempty"`
	Dpid        int32  `protobuf:"varint,119,opt,name=dpid,proto3" json:"dpid,omitempty"`
}

func (x *OpmThingModelServices) Reset() {
	*x = OpmThingModelServices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelServices) ProtoMessage() {}

func (x *OpmThingModelServices) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelServices.ProtoReflect.Descriptor instead.
func (*OpmThingModelServices) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{3}
}

func (x *OpmThingModelServices) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmThingModelServices) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpmThingModelServices) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OpmThingModelServices) GetCreateTs() string {
	if x != nil {
		return x.CreateTs
	}
	return ""
}

func (x *OpmThingModelServices) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *OpmThingModelServices) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *OpmThingModelServices) GetInputParams() string {
	if x != nil {
		return x.InputParams
	}
	return ""
}

func (x *OpmThingModelServices) GetOutputParams() string {
	if x != nil {
		return x.OutputParams
	}
	return ""
}

func (x *OpmThingModelServices) GetRequired() int32 {
	if x != nil {
		return x.Required
	}
	return 0
}

func (x *OpmThingModelServices) GetCallType() int32 {
	if x != nil {
		return x.CallType
	}
	return 0
}

func (x *OpmThingModelServices) GetCustom() int32 {
	if x != nil {
		return x.Custom
	}
	return 0
}

func (x *OpmThingModelServices) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *OpmThingModelServices) GetFuncType() string {
	if x != nil {
		return x.FuncType
	}
	return ""
}

func (x *OpmThingModelServices) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OpmThingModelServices) GetTriggerCond() int32 {
	if x != nil {
		return x.TriggerCond
	}
	return 0
}

func (x *OpmThingModelServices) GetExecCond() int32 {
	if x != nil {
		return x.ExecCond
	}
	return 0
}

func (x *OpmThingModelServices) GetStdId() int64 {
	if x != nil {
		return x.StdId
	}
	return 0
}

func (x *OpmThingModelServices) GetValid() int32 {
	if x != nil {
		return x.Valid
	}
	return 0
}

func (x *OpmThingModelServices) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *OpmThingModelServices) GetDpid() int32 {
	if x != nil {
		return x.Dpid
	}
	return 0
}

type OpmStandardFuncs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId          int64  `protobuf:"varint,100,opt,name=modelId,proto3" json:"modelId,omitempty"`
	FuncId           int64  `protobuf:"varint,101,opt,name=funcId,proto3" json:"funcId,omitempty"`
	FuncType         string `protobuf:"bytes,102,opt,name=funcType,proto3" json:"funcType,omitempty"`
	Identifier       string `protobuf:"bytes,103,opt,name=identifier,proto3" json:"identifier,omitempty"`
	TriggerCond      int32  `protobuf:"varint,104,opt,name=trigger_cond,json=triggerCond,proto3" json:"trigger_cond,omitempty"`
	ExecCond         int32  `protobuf:"varint,105,opt,name=exec_cond,json=execCond,proto3" json:"exec_cond,omitempty"`
	TriggerCondArgs  string `protobuf:"bytes,106,opt,name=triggerCondArgs,proto3" json:"triggerCondArgs,omitempty"`
	ExecCondArgs     string `protobuf:"bytes,107,opt,name=execCondArgs,proto3" json:"execCondArgs,omitempty"`
	AllowAppointment int32  `protobuf:"varint,108,opt,name=allowAppointment,proto3" json:"allowAppointment,omitempty"` //允许预约
	AppointmentArgs  string `protobuf:"bytes,109,opt,name=appointmentArgs,proto3" json:"appointmentArgs,omitempty"`    //预约参数
	IsTop            int32  `protobuf:"varint,110,opt,name=isTop,proto3" json:"isTop,omitempty"`                       //是否顶级功能
	ParentId         int64  `protobuf:"varint,111,opt,name=parentId,proto3" json:"parentId,omitempty"`                 //父级功能 isTop=0 的时候parentId具有值
	Sort             int32  `protobuf:"varint,112,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *OpmStandardFuncs) Reset() {
	*x = OpmStandardFuncs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmStandardFuncs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmStandardFuncs) ProtoMessage() {}

func (x *OpmStandardFuncs) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmStandardFuncs.ProtoReflect.Descriptor instead.
func (*OpmStandardFuncs) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{4}
}

func (x *OpmStandardFuncs) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *OpmStandardFuncs) GetFuncId() int64 {
	if x != nil {
		return x.FuncId
	}
	return 0
}

func (x *OpmStandardFuncs) GetFuncType() string {
	if x != nil {
		return x.FuncType
	}
	return ""
}

func (x *OpmStandardFuncs) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *OpmStandardFuncs) GetTriggerCond() int32 {
	if x != nil {
		return x.TriggerCond
	}
	return 0
}

func (x *OpmStandardFuncs) GetExecCond() int32 {
	if x != nil {
		return x.ExecCond
	}
	return 0
}

func (x *OpmStandardFuncs) GetTriggerCondArgs() string {
	if x != nil {
		return x.TriggerCondArgs
	}
	return ""
}

func (x *OpmStandardFuncs) GetExecCondArgs() string {
	if x != nil {
		return x.ExecCondArgs
	}
	return ""
}

func (x *OpmStandardFuncs) GetAllowAppointment() int32 {
	if x != nil {
		return x.AllowAppointment
	}
	return 0
}

func (x *OpmStandardFuncs) GetAppointmentArgs() string {
	if x != nil {
		return x.AppointmentArgs
	}
	return ""
}

func (x *OpmStandardFuncs) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *OpmStandardFuncs) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *OpmStandardFuncs) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type OpmThingModelFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"standard" gorm:"default:是否标准品类 0-否 1-是;comment:是否标准品类 0-否 1-是;"
	Standard int32 `protobuf:"varint,102,opt,name=standard,proto3" json:"standard,omitempty"`
	// @inject_tag: json:"version" gorm:"default:物模型版本号;comment:物模型版本号;size:10;"
	Version string `protobuf:"bytes,103,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"description" gorm:"default:物模型描述;comment:物模型描述;size:64;"
	Description string `protobuf:"bytes,104,opt,name=description,proto3" json:"description,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,105,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,106,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,107,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
	TenantId string `protobuf:"bytes,110,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *OpmThingModelFilter) Reset() {
	*x = OpmThingModelFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelFilter) ProtoMessage() {}

func (x *OpmThingModelFilter) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelFilter.ProtoReflect.Descriptor instead.
func (*OpmThingModelFilter) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{5}
}

func (x *OpmThingModelFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmThingModelFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmThingModelFilter) GetStandard() int32 {
	if x != nil {
		return x.Standard
	}
	return 0
}

func (x *OpmThingModelFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpmThingModelFilter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OpmThingModelFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmThingModelFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpmThingModelFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *OpmThingModelFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpmThingModelFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpmThingModelFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type OpmThingModelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *OpmThingModel `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64          `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64          `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string         `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string         `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string         `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *OpmThingModelListRequest) Reset() {
	*x = OpmThingModelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelListRequest) ProtoMessage() {}

func (x *OpmThingModelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelListRequest.ProtoReflect.Descriptor instead.
func (*OpmThingModelListRequest) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{6}
}

func (x *OpmThingModelListRequest) GetQuery() *OpmThingModel {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *OpmThingModelListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OpmThingModelListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OpmThingModelListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OpmThingModelListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *OpmThingModelListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type OpmThingModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64            `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OpmThingModel `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmThingModelResponse) Reset() {
	*x = OpmThingModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelResponse) ProtoMessage() {}

func (x *OpmThingModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelResponse.ProtoReflect.Descriptor instead.
func (*OpmThingModelResponse) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{7}
}

func (x *OpmThingModelResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpmThingModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpmThingModelResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpmThingModelResponse) GetData() []*OpmThingModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpmThingModelUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string       `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *OpmThingModel `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmThingModelUpdateFieldsRequest) Reset() {
	*x = OpmThingModelUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelUpdateFieldsRequest) ProtoMessage() {}

func (x *OpmThingModelUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*OpmThingModelUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{8}
}

func (x *OpmThingModelUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *OpmThingModelUpdateFieldsRequest) GetData() *OpmThingModel {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type OpmThingModelPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpmThingModelPrimarykey) Reset() {
	*x = OpmThingModelPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelPrimarykey) ProtoMessage() {}

func (x *OpmThingModelPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelPrimarykey.ProtoReflect.Descriptor instead.
func (*OpmThingModelPrimarykey) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{9}
}

func (x *OpmThingModelPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpmThingModelBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*OpmThingModelPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *OpmThingModelBatchDeleteRequest) Reset() {
	*x = OpmThingModelBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelBatchDeleteRequest) ProtoMessage() {}

func (x *OpmThingModelBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpmThingModelBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{10}
}

func (x *OpmThingModelBatchDeleteRequest) GetKeys() []*OpmThingModelPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type OpmThingModelByProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId         int64  `protobuf:"varint,100,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductTypeId     int64  `protobuf:"varint,101,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	ProductKey        string `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	Custom            int32  `protobuf:"varint,103,opt,name=custom,proto3" json:"custom,omitempty"`
	UnQueryService    bool   `protobuf:"varint,104,opt,name=unQueryService,proto3" json:"unQueryService,omitempty"`       //不查詢服務
	UnQueryEvent      bool   `protobuf:"varint,105,opt,name=unQueryEvent,proto3" json:"unQueryEvent,omitempty"`           //不查詢事件
	UnQueryProperties bool   `protobuf:"varint,106,opt,name=unQueryProperties,proto3" json:"unQueryProperties,omitempty"` //不查詢屬性
	DataType          string `protobuf:"bytes,107,opt,name=dataType,proto3" json:"dataType,omitempty"`                    //過濾數據類型
}

func (x *OpmThingModelByProductRequest) Reset() {
	*x = OpmThingModelByProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelByProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelByProductRequest) ProtoMessage() {}

func (x *OpmThingModelByProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelByProductRequest.ProtoReflect.Descriptor instead.
func (*OpmThingModelByProductRequest) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{11}
}

func (x *OpmThingModelByProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmThingModelByProductRequest) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *OpmThingModelByProductRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *OpmThingModelByProductRequest) GetCustom() int32 {
	if x != nil {
		return x.Custom
	}
	return 0
}

func (x *OpmThingModelByProductRequest) GetUnQueryService() bool {
	if x != nil {
		return x.UnQueryService
	}
	return false
}

func (x *OpmThingModelByProductRequest) GetUnQueryEvent() bool {
	if x != nil {
		return x.UnQueryEvent
	}
	return false
}

func (x *OpmThingModelByProductRequest) GetUnQueryProperties() bool {
	if x != nil {
		return x.UnQueryProperties
	}
	return false
}

func (x *OpmThingModelByProductRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

type OpmThingModelAllList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model      *OpmThingModel             `protobuf:"bytes,101,opt,name=model,proto3" json:"model,omitempty"`
	Properties []*OpmThingModelProperties `protobuf:"bytes,102,rep,name=properties,proto3" json:"properties,omitempty"`
	Events     []*OpmThingModelEvents     `protobuf:"bytes,103,rep,name=events,proto3" json:"events,omitempty"`
	Services   []*OpmThingModelServices   `protobuf:"bytes,104,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *OpmThingModelAllList) Reset() {
	*x = OpmThingModelAllList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelAllList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelAllList) ProtoMessage() {}

func (x *OpmThingModelAllList) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelAllList.ProtoReflect.Descriptor instead.
func (*OpmThingModelAllList) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{12}
}

func (x *OpmThingModelAllList) GetModel() *OpmThingModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *OpmThingModelAllList) GetProperties() []*OpmThingModelProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *OpmThingModelAllList) GetEvents() []*OpmThingModelEvents {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *OpmThingModelAllList) GetServices() []*OpmThingModelServices {
	if x != nil {
		return x.Services
	}
	return nil
}

type OpmThingModelByProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Data    *OpmThingModelAllList `protobuf:"bytes,103,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmThingModelByProductResponse) Reset() {
	*x = OpmThingModelByProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelByProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelByProductResponse) ProtoMessage() {}

func (x *OpmThingModelByProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelByProductResponse.ProtoReflect.Descriptor instead.
func (*OpmThingModelByProductResponse) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{13}
}

func (x *OpmThingModelByProductResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpmThingModelByProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpmThingModelByProductResponse) GetData() *OpmThingModelAllList {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpmThingModelDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64  `protobuf:"varint,100,opt,name=productId,proto3" json:"productId,omitempty"`
	FuncId    int64  `protobuf:"varint,101,opt,name=funcId,proto3" json:"funcId,omitempty"`
	FuncType  string `protobuf:"bytes,102,opt,name=funcType,proto3" json:"funcType,omitempty"`
}

func (x *OpmThingModelDeleteRequest) Reset() {
	*x = OpmThingModelDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_thing_model_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmThingModelDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmThingModelDeleteRequest) ProtoMessage() {}

func (x *OpmThingModelDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_thing_model_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmThingModelDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpmThingModelDeleteRequest) Descriptor() ([]byte, []int) {
	return file_opm_thing_model_model_proto_rawDescGZIP(), []int{14}
}

func (x *OpmThingModelDeleteRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmThingModelDeleteRequest) GetFuncId() int64 {
	if x != nil {
		return x.FuncId
	}
	return 0
}

func (x *OpmThingModelDeleteRequest) GetFuncType() string {
	if x != nil {
		return x.FuncType
	}
	return ""
}

var File_opm_thing_model_model_proto protoreflect.FileDescriptor

var file_opm_thing_model_model_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x70, 0x6d, 0x5f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x05, 0x0a, 0x0d, 0x4f, 0x70, 0x6d, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x46, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x73, 0x18, 0x70, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x75,
	0x6e, 0x63, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x72,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f,
	0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xfa, 0x03, 0x0a, 0x13, 0x4f, 0x70, 0x6d, 0x54, 0x68,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x64, 0x61, 0x74, 0x61, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f,
	0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x72, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x73, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x74, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x70, 0x69, 0x64, 0x18, 0x75, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64,
	0x70, 0x69, 0x64, 0x22, 0x9e, 0x07, 0x0a, 0x17, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x6b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x73, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x77, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x65,
	0x63, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x79, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x70, 0x69, 0x64, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x64, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73,
	0x18, 0x7e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x64,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x67, 0x73, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x15, 0x0a, 0x05, 0x69,
	0x73, 0x54, 0x6f, 0x70, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x54,
	0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x82,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x13, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0xc2, 0x04, 0x0a, 0x15, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x72, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x73, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x65, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x64, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x75, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x70, 0x69, 0x64, 0x18, 0x77, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x70, 0x69, 0x64, 0x22, 0xaa, 0x03, 0x0a, 0x10, 0x4f, 0x70,
	0x6d, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x6e, 0x63,
	0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f,
	0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78,
	0x65, 0x63, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x67, 0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0xa1, 0x03, 0x0a, 0x13, 0x4f, 0x70, 0x6d, 0x54, 0x68,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x69, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x18, 0x4f,
	0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x87, 0x01,
	0x0a, 0x15, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x20, 0x4f, 0x70, 0x6d, 0x54, 0x68,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x29, 0x0a, 0x17, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x1f, 0x4f, 0x70,
	0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x1d, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x14, 0x4f, 0x70, 0x6d, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x40,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x66, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d,
	0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1e, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x1a, 0x4f, 0x70, 0x6d, 0x54, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_opm_thing_model_model_proto_rawDescOnce sync.Once
	file_opm_thing_model_model_proto_rawDescData = file_opm_thing_model_model_proto_rawDesc
)

func file_opm_thing_model_model_proto_rawDescGZIP() []byte {
	file_opm_thing_model_model_proto_rawDescOnce.Do(func() {
		file_opm_thing_model_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_opm_thing_model_model_proto_rawDescData)
	})
	return file_opm_thing_model_model_proto_rawDescData
}

var file_opm_thing_model_model_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_opm_thing_model_model_proto_goTypes = []interface{}{
	(*OpmThingModel)(nil),                    // 0: service.OpmThingModel
	(*OpmThingModelEvents)(nil),              // 1: service.OpmThingModelEvents
	(*OpmThingModelProperties)(nil),          // 2: service.OpmThingModelProperties
	(*OpmThingModelServices)(nil),            // 3: service.OpmThingModelServices
	(*OpmStandardFuncs)(nil),                 // 4: service.OpmStandardFuncs
	(*OpmThingModelFilter)(nil),              // 5: service.OpmThingModelFilter
	(*OpmThingModelListRequest)(nil),         // 6: service.OpmThingModelListRequest
	(*OpmThingModelResponse)(nil),            // 7: service.OpmThingModelResponse
	(*OpmThingModelUpdateFieldsRequest)(nil), // 8: service.OpmThingModelUpdateFieldsRequest
	(*OpmThingModelPrimarykey)(nil),          // 9: service.OpmThingModelPrimarykey
	(*OpmThingModelBatchDeleteRequest)(nil),  // 10: service.OpmThingModelBatchDeleteRequest
	(*OpmThingModelByProductRequest)(nil),    // 11: service.OpmThingModelByProductRequest
	(*OpmThingModelAllList)(nil),             // 12: service.OpmThingModelAllList
	(*OpmThingModelByProductResponse)(nil),   // 13: service.OpmThingModelByProductResponse
	(*OpmThingModelDeleteRequest)(nil),       // 14: service.OpmThingModelDeleteRequest
	(*timestamppb.Timestamp)(nil),            // 15: google.protobuf.Timestamp
}
var file_opm_thing_model_model_proto_depIdxs = []int32{
	15, // 0: service.OpmThingModel.createdAt:type_name -> google.protobuf.Timestamp
	15, // 1: service.OpmThingModel.updatedAt:type_name -> google.protobuf.Timestamp
	15, // 2: service.OpmThingModel.deletedAt:type_name -> google.protobuf.Timestamp
	4,  // 3: service.OpmThingModel.standardFuncs:type_name -> service.OpmStandardFuncs
	2,  // 4: service.OpmThingModel.properties:type_name -> service.OpmThingModelProperties
	1,  // 5: service.OpmThingModel.events:type_name -> service.OpmThingModelEvents
	3,  // 6: service.OpmThingModel.services:type_name -> service.OpmThingModelServices
	15, // 7: service.OpmThingModelFilter.createdAt:type_name -> google.protobuf.Timestamp
	15, // 8: service.OpmThingModelFilter.updatedAt:type_name -> google.protobuf.Timestamp
	15, // 9: service.OpmThingModelFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: service.OpmThingModelListRequest.query:type_name -> service.OpmThingModel
	0,  // 11: service.OpmThingModelResponse.data:type_name -> service.OpmThingModel
	0,  // 12: service.OpmThingModelUpdateFieldsRequest.data:type_name -> service.OpmThingModel
	9,  // 13: service.OpmThingModelBatchDeleteRequest.keys:type_name -> service.OpmThingModelPrimarykey
	0,  // 14: service.OpmThingModelAllList.model:type_name -> service.OpmThingModel
	2,  // 15: service.OpmThingModelAllList.properties:type_name -> service.OpmThingModelProperties
	1,  // 16: service.OpmThingModelAllList.events:type_name -> service.OpmThingModelEvents
	3,  // 17: service.OpmThingModelAllList.services:type_name -> service.OpmThingModelServices
	12, // 18: service.OpmThingModelByProductResponse.data:type_name -> service.OpmThingModelAllList
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_opm_thing_model_model_proto_init() }
func file_opm_thing_model_model_proto_init() {
	if File_opm_thing_model_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opm_thing_model_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelServices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmStandardFuncs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelByProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelAllList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelByProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_thing_model_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmThingModelDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opm_thing_model_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opm_thing_model_model_proto_goTypes,
		DependencyIndexes: file_opm_thing_model_model_proto_depIdxs,
		MessageInfos:      file_opm_thing_model_model_proto_msgTypes,
	}.Build()
	File_opm_thing_model_model_proto = out.File
	file_opm_thing_model_model_proto_rawDesc = nil
	file_opm_thing_model_model_proto_goTypes = nil
	file_opm_thing_model_model_proto_depIdxs = nil
}
