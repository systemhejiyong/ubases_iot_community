// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: opm_panel_auth_relation_service.gen.proto

package protosService

import (
	fmt "fmt"
	math "math"

	proto "google.golang.org/protobuf/proto"

	context "context"

	api "go-micro.dev/v4/api"

	client "go-micro.dev/v4/client"

	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for OpmPanelAuthRelationService service

func NewOpmPanelAuthRelationServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{
		{
			Name:    "OpmPanelAuthRelationService.Create",
			Path:    []string{"/v1/opmPanelAuthRelation/create"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.Delete",
			Path:    []string{"/v1/opmPanelAuthRelation/delete"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.DeleteById",
			Path:    []string{"/v1/opmPanelAuthRelation/deleteById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.DeleteByIds",
			Path:    []string{"/v1/opmPanelAuthRelation/DeleteByIds"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.Update",
			Path:    []string{"/v1/opmPanelAuthRelation/update"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.UpdateAll",
			Path:    []string{"/v1/opmPanelAuthRelation/updateAll"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.UpdateFields",
			Path:    []string{"/v1/opmPanelAuthRelation/updateFields"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.FindById",
			Path:    []string{"/v1/opmPanelAuthRelation/findById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.Find",
			Path:    []string{"/v1/opmPanelAuthRelation/find"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmPanelAuthRelationService.Lists",
			Path:    []string{"/v1/opmPanelAuthRelation/lists"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
	}
}

// Client API for OpmPanelAuthRelationService service

type OpmPanelAuthRelationService interface {
	//创建
	Create(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error)
	//匹配多条件删除
	Delete(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error)
	//匹配主键删除,一般是Id
	DeleteById(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error)
	//匹配主键批量删除
	DeleteByIds(ctx context.Context, in *OpmPanelAuthRelationBatchDeleteRequest, opts ...client.CallOption) (*Response, error)
	//根据主键更新非空字段
	Update(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error)
	//根据主键更新所有字段
	UpdateAll(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error)
	//根据主键更新指定列
	UpdateFields(ctx context.Context, in *OpmPanelAuthRelationUpdateFieldsRequest, opts ...client.CallOption) (*Response, error)
	//根据主键查找,一般是Id,返回单条数据
	FindById(ctx context.Context, in *OpmPanelAuthRelationFilter, opts ...client.CallOption) (*OpmPanelAuthRelationResponse, error)
	//多条件查找，返回单条数据
	Find(ctx context.Context, in *OpmPanelAuthRelationFilter, opts ...client.CallOption) (*OpmPanelAuthRelationResponse, error)
	//查找，支持分页，可返回多条数据
	Lists(ctx context.Context, in *OpmPanelAuthRelationListRequest, opts ...client.CallOption) (*OpmPanelAuthRelationResponse, error)
}

type opmPanelAuthRelationService struct {
	c    client.Client
	name string
}

func NewOpmPanelAuthRelationService(name string, c client.Client) OpmPanelAuthRelationService {
	return &opmPanelAuthRelationService{
		c:    c,
		name: name,
	}
}

func (c *opmPanelAuthRelationService) Create(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) Delete(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) DeleteById(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.DeleteById", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) DeleteByIds(ctx context.Context, in *OpmPanelAuthRelationBatchDeleteRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.DeleteByIds", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) Update(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) UpdateAll(ctx context.Context, in *OpmPanelAuthRelation, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.UpdateAll", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) UpdateFields(ctx context.Context, in *OpmPanelAuthRelationUpdateFieldsRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.UpdateFields", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) FindById(ctx context.Context, in *OpmPanelAuthRelationFilter, opts ...client.CallOption) (*OpmPanelAuthRelationResponse, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.FindById", in)
	out := new(OpmPanelAuthRelationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) Find(ctx context.Context, in *OpmPanelAuthRelationFilter, opts ...client.CallOption) (*OpmPanelAuthRelationResponse, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.Find", in)
	out := new(OpmPanelAuthRelationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmPanelAuthRelationService) Lists(ctx context.Context, in *OpmPanelAuthRelationListRequest, opts ...client.CallOption) (*OpmPanelAuthRelationResponse, error) {
	req := c.c.NewRequest(c.name, "OpmPanelAuthRelationService.Lists", in)
	out := new(OpmPanelAuthRelationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpmPanelAuthRelationService service

type OpmPanelAuthRelationServiceHandler interface {
	//创建
	Create(context.Context, *OpmPanelAuthRelation, *Response) error
	//匹配多条件删除
	Delete(context.Context, *OpmPanelAuthRelation, *Response) error
	//匹配主键删除,一般是Id
	DeleteById(context.Context, *OpmPanelAuthRelation, *Response) error
	//匹配主键批量删除
	DeleteByIds(context.Context, *OpmPanelAuthRelationBatchDeleteRequest, *Response) error
	//根据主键更新非空字段
	Update(context.Context, *OpmPanelAuthRelation, *Response) error
	//根据主键更新所有字段
	UpdateAll(context.Context, *OpmPanelAuthRelation, *Response) error
	//根据主键更新指定列
	UpdateFields(context.Context, *OpmPanelAuthRelationUpdateFieldsRequest, *Response) error
	//根据主键查找,一般是Id,返回单条数据
	FindById(context.Context, *OpmPanelAuthRelationFilter, *OpmPanelAuthRelationResponse) error
	//多条件查找，返回单条数据
	Find(context.Context, *OpmPanelAuthRelationFilter, *OpmPanelAuthRelationResponse) error
	//查找，支持分页，可返回多条数据
	Lists(context.Context, *OpmPanelAuthRelationListRequest, *OpmPanelAuthRelationResponse) error
}

func RegisterOpmPanelAuthRelationServiceHandler(s server.Server, hdlr OpmPanelAuthRelationServiceHandler, opts ...server.HandlerOption) error {
	type opmPanelAuthRelationService interface {
		Create(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error
		Delete(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error
		DeleteById(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error
		DeleteByIds(ctx context.Context, in *OpmPanelAuthRelationBatchDeleteRequest, out *Response) error
		Update(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error
		UpdateAll(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error
		UpdateFields(ctx context.Context, in *OpmPanelAuthRelationUpdateFieldsRequest, out *Response) error
		FindById(ctx context.Context, in *OpmPanelAuthRelationFilter, out *OpmPanelAuthRelationResponse) error
		Find(ctx context.Context, in *OpmPanelAuthRelationFilter, out *OpmPanelAuthRelationResponse) error
		Lists(ctx context.Context, in *OpmPanelAuthRelationListRequest, out *OpmPanelAuthRelationResponse) error
	}
	type OpmPanelAuthRelationService struct {
		opmPanelAuthRelationService
	}
	h := &opmPanelAuthRelationServiceHandler{hdlr}
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.Create",
		Path:    []string{"/v1/opmPanelAuthRelation/create"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.Delete",
		Path:    []string{"/v1/opmPanelAuthRelation/delete"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.DeleteById",
		Path:    []string{"/v1/opmPanelAuthRelation/deleteById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.DeleteByIds",
		Path:    []string{"/v1/opmPanelAuthRelation/DeleteByIds"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.Update",
		Path:    []string{"/v1/opmPanelAuthRelation/update"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.UpdateAll",
		Path:    []string{"/v1/opmPanelAuthRelation/updateAll"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.UpdateFields",
		Path:    []string{"/v1/opmPanelAuthRelation/updateFields"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.FindById",
		Path:    []string{"/v1/opmPanelAuthRelation/findById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.Find",
		Path:    []string{"/v1/opmPanelAuthRelation/find"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmPanelAuthRelationService.Lists",
		Path:    []string{"/v1/opmPanelAuthRelation/lists"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	return s.Handle(s.NewHandler(&OpmPanelAuthRelationService{h}, opts...))
}

type opmPanelAuthRelationServiceHandler struct {
	OpmPanelAuthRelationServiceHandler
}

func (h *opmPanelAuthRelationServiceHandler) Create(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.Create(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) Delete(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.Delete(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) DeleteById(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.DeleteById(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) DeleteByIds(ctx context.Context, in *OpmPanelAuthRelationBatchDeleteRequest, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.DeleteByIds(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) Update(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.Update(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) UpdateAll(ctx context.Context, in *OpmPanelAuthRelation, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.UpdateAll(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) UpdateFields(ctx context.Context, in *OpmPanelAuthRelationUpdateFieldsRequest, out *Response) error {
	return h.OpmPanelAuthRelationServiceHandler.UpdateFields(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) FindById(ctx context.Context, in *OpmPanelAuthRelationFilter, out *OpmPanelAuthRelationResponse) error {
	return h.OpmPanelAuthRelationServiceHandler.FindById(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) Find(ctx context.Context, in *OpmPanelAuthRelationFilter, out *OpmPanelAuthRelationResponse) error {
	return h.OpmPanelAuthRelationServiceHandler.Find(ctx, in, out)
}

func (h *opmPanelAuthRelationServiceHandler) Lists(ctx context.Context, in *OpmPanelAuthRelationListRequest, out *OpmPanelAuthRelationResponse) error {
	return h.OpmPanelAuthRelationServiceHandler.Lists(ctx, in, out)
}
