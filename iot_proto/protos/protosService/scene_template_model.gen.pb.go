// Code generated by protoc,2022-11-11 13:33:29. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: scene_template_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type SceneTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"type" gorm:"default:=1 一键执行任务 =2 自动化场景任务;comment:=1 一键执行任务 =2 自动化场景任务;size:10;"
	Type int32 `protobuf:"varint,101,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"title" gorm:"default:场景名称（中文）;comment:场景名称（中文）;size:50;"
	Title string `protobuf:"bytes,102,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"titleEn" gorm:"default:场景名称（英文）;comment:场景名称（英文）;size:100;"
	TitleEn string `protobuf:"bytes,103,opt,name=titleEn,proto3" json:"titleEn,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:场景描述（中文）;comment:场景描述（中文）;size:500;"
	Desc string `protobuf:"bytes,104,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"descEn" gorm:"default:场景描述（英文）;comment:场景描述（英文）;size:500;"
	DescEn string `protobuf:"bytes,105,opt,name=descEn,proto3" json:"descEn,omitempty"`
	// @inject_tag: json:"sortNo" gorm:"default:序号;comment:序号;"
	SortNo int32 `protobuf:"varint,106,opt,name=sortNo,proto3" json:"sortNo,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（=1 启用 =2 禁用）;comment:状态（=1 启用 =2 禁用）;"
	Status int32 `protobuf:"varint,107,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"conditionMode" gorm:"default:条件模式 =1 所有条件满足 =2 任意条件满足;comment:条件模式 =1 所有条件满足 =2 任意条件满足;"
	ConditionMode int32 `protobuf:"varint,108,opt,name=conditionMode,proto3" json:"conditionMode,omitempty"`
	// @inject_tag: json:"icon" gorm:"default:图标;comment:图标;size:500;"
	Icon string `protobuf:"bytes,109,opt,name=icon,proto3" json:"icon,omitempty"`
	// @inject_tag: json:"useCount" gorm:"default:使用总数;comment:使用总数;size:10;"
	UseCount int32 `protobuf:"varint,110,opt,name=useCount,proto3" json:"useCount,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,111,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,112,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	//是否指定APP
	IsSpecifyApp int32 `protobuf:"varint,116,opt,name=IsSpecifyApp,proto3" json:"IsSpecifyApp,omitempty"`
	//tasks
	Tasks []*SceneTemplateTask `protobuf:"bytes,117,rep,name=tasks,proto3" json:"tasks,omitempty"`
	//conditions
	Conditions []*SceneTemplateCondition `protobuf:"bytes,118,rep,name=conditions,proto3" json:"conditions,omitempty"`
	//appList
	AppList  []*SceneTemplateAppRelation `protobuf:"bytes,119,rep,name=appList,proto3" json:"appList,omitempty"`
	TenantId string                      `protobuf:"bytes,120,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SceneTemplate) Reset() {
	*x = SceneTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplate) ProtoMessage() {}

func (x *SceneTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplate.ProtoReflect.Descriptor instead.
func (*SceneTemplate) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *SceneTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneTemplate) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SceneTemplate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SceneTemplate) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *SceneTemplate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SceneTemplate) GetDescEn() string {
	if x != nil {
		return x.DescEn
	}
	return ""
}

func (x *SceneTemplate) GetSortNo() int32 {
	if x != nil {
		return x.SortNo
	}
	return 0
}

func (x *SceneTemplate) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneTemplate) GetConditionMode() int32 {
	if x != nil {
		return x.ConditionMode
	}
	return 0
}

func (x *SceneTemplate) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SceneTemplate) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *SceneTemplate) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SceneTemplate) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *SceneTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SceneTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SceneTemplate) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *SceneTemplate) GetIsSpecifyApp() int32 {
	if x != nil {
		return x.IsSpecifyApp
	}
	return 0
}

func (x *SceneTemplate) GetTasks() []*SceneTemplateTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *SceneTemplate) GetConditions() []*SceneTemplateCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *SceneTemplate) GetAppList() []*SceneTemplateAppRelation {
	if x != nil {
		return x.AppList
	}
	return nil
}

func (x *SceneTemplate) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type SceneTemplateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"type" gorm:"default:=1 一键执行任务 =2 自动化场景任务;comment:=1 一键执行任务 =2 自动化场景任务;size:10;"
	Type int32 `protobuf:"varint,101,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"title" gorm:"default:场景名称（中文）;comment:场景名称（中文）;size:50;"
	Title string `protobuf:"bytes,102,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"titleEn" gorm:"default:场景名称（英文）;comment:场景名称（英文）;size:100;"
	TitleEn string `protobuf:"bytes,103,opt,name=titleEn,proto3" json:"titleEn,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:场景描述（中文）;comment:场景描述（中文）;size:500;"
	Desc string `protobuf:"bytes,104,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"descEn" gorm:"default:场景描述（英文）;comment:场景描述（英文）;size:500;"
	DescEn string `protobuf:"bytes,105,opt,name=descEn,proto3" json:"descEn,omitempty"`
	// @inject_tag: json:"sortNo" gorm:"default:序号;comment:序号;"
	SortNo int32 `protobuf:"varint,106,opt,name=sortNo,proto3" json:"sortNo,omitempty"`
	// @inject_tag: json:"status" gorm:"default:状态（=1 启用 =2 禁用）;comment:状态（=1 启用 =2 禁用）;"
	Status int32 `protobuf:"varint,107,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"conditionMode" gorm:"default:条件模式 =1 所有条件满足 =2 任意条件满足;comment:条件模式 =1 所有条件满足 =2 任意条件满足;"
	ConditionMode int32 `protobuf:"varint,108,opt,name=conditionMode,proto3" json:"conditionMode,omitempty"`
	// @inject_tag: json:"icon" gorm:"default:图标;comment:图标;size:500;"
	Icon string `protobuf:"bytes,109,opt,name=icon,proto3" json:"icon,omitempty"`
	// @inject_tag: json:"useCount" gorm:"default:使用总数;comment:使用总数;size:10;"
	UseCount int32 `protobuf:"varint,110,opt,name=useCount,proto3" json:"useCount,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,111,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,112,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	TenantId  string                 `protobuf:"bytes,120,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SceneTemplateFilter) Reset() {
	*x = SceneTemplateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplateFilter) ProtoMessage() {}

func (x *SceneTemplateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplateFilter.ProtoReflect.Descriptor instead.
func (*SceneTemplateFilter) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *SceneTemplateFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneTemplateFilter) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SceneTemplateFilter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SceneTemplateFilter) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *SceneTemplateFilter) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SceneTemplateFilter) GetDescEn() string {
	if x != nil {
		return x.DescEn
	}
	return ""
}

func (x *SceneTemplateFilter) GetSortNo() int32 {
	if x != nil {
		return x.SortNo
	}
	return 0
}

func (x *SceneTemplateFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneTemplateFilter) GetConditionMode() int32 {
	if x != nil {
		return x.ConditionMode
	}
	return 0
}

func (x *SceneTemplateFilter) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SceneTemplateFilter) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *SceneTemplateFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SceneTemplateFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *SceneTemplateFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SceneTemplateFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SceneTemplateFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *SceneTemplateFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type SceneTemplateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *SceneTemplate `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64          `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64          `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string         `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string         `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string         `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *SceneTemplateListRequest) Reset() {
	*x = SceneTemplateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplateListRequest) ProtoMessage() {}

func (x *SceneTemplateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplateListRequest.ProtoReflect.Descriptor instead.
func (*SceneTemplateListRequest) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *SceneTemplateListRequest) GetQuery() *SceneTemplate {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SceneTemplateListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SceneTemplateListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SceneTemplateListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *SceneTemplateListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *SceneTemplateListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type SceneTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64            `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*SceneTemplate `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SceneTemplateResponse) Reset() {
	*x = SceneTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplateResponse) ProtoMessage() {}

func (x *SceneTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplateResponse.ProtoReflect.Descriptor instead.
func (*SceneTemplateResponse) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *SceneTemplateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SceneTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SceneTemplateResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SceneTemplateResponse) GetData() []*SceneTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

type SceneTemplateUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string       `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *SceneTemplate `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SceneTemplateUpdateFieldsRequest) Reset() {
	*x = SceneTemplateUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplateUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplateUpdateFieldsRequest) ProtoMessage() {}

func (x *SceneTemplateUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplateUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*SceneTemplateUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *SceneTemplateUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SceneTemplateUpdateFieldsRequest) GetData() *SceneTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type SceneTemplatePrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SceneTemplatePrimarykey) Reset() {
	*x = SceneTemplatePrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplatePrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplatePrimarykey) ProtoMessage() {}

func (x *SceneTemplatePrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplatePrimarykey.ProtoReflect.Descriptor instead.
func (*SceneTemplatePrimarykey) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *SceneTemplatePrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SceneTemplateBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*SceneTemplatePrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *SceneTemplateBatchDeleteRequest) Reset() {
	*x = SceneTemplateBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scene_template_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTemplateBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTemplateBatchDeleteRequest) ProtoMessage() {}

func (x *SceneTemplateBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scene_template_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTemplateBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*SceneTemplateBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_scene_template_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *SceneTemplateBatchDeleteRequest) GetKeys() []*SceneTemplatePrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_scene_template_model_gen_proto protoreflect.FileDescriptor

var file_scene_template_model_gen_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x05, 0x0a, 0x0d, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x63, 0x45, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x73, 0x63, 0x45, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x4e, 0x6f, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x70, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x18, 0x74, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x49, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x12, 0x30, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x75, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x3f,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x76, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x77, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x04, 0x0a, 0x13, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x45, 0x6e, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x45, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x63,
	0x45, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x63, 0x45, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x6d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x70, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd0, 0x01, 0x0a,
	0x18, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22,
	0x87, 0x01, 0x0a, 0x15, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x20, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x29, 0x0a, 0x17, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x1f,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scene_template_model_gen_proto_rawDescOnce sync.Once
	file_scene_template_model_gen_proto_rawDescData = file_scene_template_model_gen_proto_rawDesc
)

func file_scene_template_model_gen_proto_rawDescGZIP() []byte {
	file_scene_template_model_gen_proto_rawDescOnce.Do(func() {
		file_scene_template_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_scene_template_model_gen_proto_rawDescData)
	})
	return file_scene_template_model_gen_proto_rawDescData
}

var file_scene_template_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_scene_template_model_gen_proto_goTypes = []interface{}{
	(*SceneTemplate)(nil),                    // 0: service.SceneTemplate
	(*SceneTemplateFilter)(nil),              // 1: service.SceneTemplateFilter
	(*SceneTemplateListRequest)(nil),         // 2: service.SceneTemplateListRequest
	(*SceneTemplateResponse)(nil),            // 3: service.SceneTemplateResponse
	(*SceneTemplateUpdateFieldsRequest)(nil), // 4: service.SceneTemplateUpdateFieldsRequest
	(*SceneTemplatePrimarykey)(nil),          // 5: service.SceneTemplatePrimarykey
	(*SceneTemplateBatchDeleteRequest)(nil),  // 6: service.SceneTemplateBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),            // 7: google.protobuf.Timestamp
	(*SceneTemplateTask)(nil),                // 8: service.SceneTemplateTask
	(*SceneTemplateCondition)(nil),           // 9: service.SceneTemplateCondition
	(*SceneTemplateAppRelation)(nil),         // 10: service.SceneTemplateAppRelation
}
var file_scene_template_model_gen_proto_depIdxs = []int32{
	7,  // 0: service.SceneTemplate.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 1: service.SceneTemplate.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.SceneTemplate.deletedAt:type_name -> google.protobuf.Timestamp
	8,  // 3: service.SceneTemplate.tasks:type_name -> service.SceneTemplateTask
	9,  // 4: service.SceneTemplate.conditions:type_name -> service.SceneTemplateCondition
	10, // 5: service.SceneTemplate.appList:type_name -> service.SceneTemplateAppRelation
	7,  // 6: service.SceneTemplateFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 7: service.SceneTemplateFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 8: service.SceneTemplateFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 9: service.SceneTemplateListRequest.query:type_name -> service.SceneTemplate
	0,  // 10: service.SceneTemplateResponse.data:type_name -> service.SceneTemplate
	0,  // 11: service.SceneTemplateUpdateFieldsRequest.data:type_name -> service.SceneTemplate
	5,  // 12: service.SceneTemplateBatchDeleteRequest.keys:type_name -> service.SceneTemplatePrimarykey
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_scene_template_model_gen_proto_init() }
func file_scene_template_model_gen_proto_init() {
	if File_scene_template_model_gen_proto != nil {
		return
	}
	file_scene_template_task_model_gen_proto_init()
	file_scene_template_condition_model_gen_proto_init()
	file_scene_template_app_relation_model_gen_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scene_template_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_template_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_template_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_template_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_template_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplateUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_template_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplatePrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scene_template_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTemplateBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scene_template_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scene_template_model_gen_proto_goTypes,
		DependencyIndexes: file_scene_template_model_gen_proto_depIdxs,
		MessageInfos:      file_scene_template_model_gen_proto_msgTypes,
	}.Build()
	File_scene_template_model_gen_proto = out.File
	file_scene_template_model_gen_proto_rawDesc = nil
	file_scene_template_model_gen_proto_goTypes = nil
	file_scene_template_model_gen_proto_depIdxs = nil
}
