// Code generated by sgen,2024-06-11 17:59:56. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: ms_notice_record_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type MsNoticeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:10;"
	Lang string `protobuf:"bytes,101,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"platform" gorm:"default:平台 =1 云管&开放 =2 APP =3 其它;comment:平台 =1 云管&开放 =2 APP =3 其它;"
	Platform int32 `protobuf:"varint,102,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: json:"account" gorm:"default:账号手机号或者邮箱;comment:账号手机号或者邮箱;size:50;"
	Account string `protobuf:"bytes,103,opt,name=account,proto3" json:"account,omitempty"`
	// @inject_tag: json:"method" gorm:"default:通知方式[1:邮件，2：短信];comment:通知方式[1:邮件，2：短信];size:10;"
	Method int32 `protobuf:"varint,104,opt,name=method,proto3" json:"method,omitempty"`
	// @inject_tag: json:"smsSupplier" gorm:"default:短信服务供应商（短信服务提供商, 默认0）;comment:短信服务供应商（短信服务提供商, 默认0）;size:10;"
	SmsSupplier int32 `protobuf:"varint,105,opt,name=smsSupplier,proto3" json:"smsSupplier,omitempty"`
	// @inject_tag: json:"type" gorm:"default:消息类型 1-注册 2-忘记密码 3-修改密码 4-注销账号 5-绑定第三方账号 6-绑定手机或邮箱 7-验证码登录;comment:消息类型 1-注册 2-忘记密码 3-修改密码 4-注销账号 5-绑定第三方账号 6-绑定手机或邮箱 7-验证码登录;size:10;"
	Type int32 `protobuf:"varint,106,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"thirdparyCode" gorm:"default:第三方模板编码（当method=2的时候，值为对应短信平台的编码）;comment:第三方模板编码（当method=2的时候，值为对应短信平台的编码）;size:64;"
	ThirdparyCode string `protobuf:"bytes,107,opt,name=thirdparyCode,proto3" json:"thirdparyCode,omitempty"`
	// @inject_tag: json:"noticeTempateId" gorm:"default:通知模板Id;comment:通知模板Id;size:19;"
	NoticeTempateId int64 `protobuf:"varint,108,opt,name=noticeTempateId,proto3" json:"noticeTempateId,omitempty"`
	// @inject_tag: json:"title" gorm:"default:标题;comment:标题;size:50;"
	Title string `protobuf:"bytes,109,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"content" gorm:"default:发送内容;comment:发送内容;size:255;"
	Content string `protobuf:"bytes,110,opt,name=content,proto3" json:"content,omitempty"`
	// @inject_tag: json:"appKey" gorm:"default:app key;comment:app key;size:50;"
	AppKey string `protobuf:"bytes,111,opt,name=appKey,proto3" json:"appKey,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:开发者租户编号;comment:开发者租户编号;size:20;"
	TenantId string `protobuf:"bytes,112,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"status" gorm:"default:发送状态 =1 发送成功 =2 发送失败;comment:发送状态 =1 发送成功 =2 发送失败;size:10;"
	Status int32 `protobuf:"varint,113,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"sendErrMsg" gorm:"default:发送结果描述，失败原因展示;comment:发送结果描述，失败原因展示;size:20;"
	SendErrMsg string `protobuf:"bytes,114,opt,name=sendErrMsg,proto3" json:"sendErrMsg,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,115,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *MsNoticeRecord) Reset() {
	*x = MsNoticeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecord) ProtoMessage() {}

func (x *MsNoticeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecord.ProtoReflect.Descriptor instead.
func (*MsNoticeRecord) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *MsNoticeRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsNoticeRecord) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MsNoticeRecord) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *MsNoticeRecord) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MsNoticeRecord) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *MsNoticeRecord) GetSmsSupplier() int32 {
	if x != nil {
		return x.SmsSupplier
	}
	return 0
}

func (x *MsNoticeRecord) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MsNoticeRecord) GetThirdparyCode() string {
	if x != nil {
		return x.ThirdparyCode
	}
	return ""
}

func (x *MsNoticeRecord) GetNoticeTempateId() int64 {
	if x != nil {
		return x.NoticeTempateId
	}
	return 0
}

func (x *MsNoticeRecord) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsNoticeRecord) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsNoticeRecord) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *MsNoticeRecord) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *MsNoticeRecord) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MsNoticeRecord) GetSendErrMsg() string {
	if x != nil {
		return x.SendErrMsg
	}
	return ""
}

func (x *MsNoticeRecord) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *MsNoticeRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type MsNoticeRecordFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];comment:语言编码[zh_CN:简体中文,zh_TW:繁体中文,en_US:英语,es:西班牙语];size:10;"
	Lang string `protobuf:"bytes,101,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"platform" gorm:"default:平台 =1 云管&开放 =2 APP =3 其它;comment:平台 =1 云管&开放 =2 APP =3 其它;"
	Platform int32 `protobuf:"varint,102,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: json:"account" gorm:"default:账号手机号或者邮箱;comment:账号手机号或者邮箱;size:50;"
	Account string `protobuf:"bytes,103,opt,name=account,proto3" json:"account,omitempty"`
	// @inject_tag: json:"method" gorm:"default:通知方式[1:邮件，2：短信];comment:通知方式[1:邮件，2：短信];size:10;"
	Method int32 `protobuf:"varint,104,opt,name=method,proto3" json:"method,omitempty"`
	// @inject_tag: json:"smsSupplier" gorm:"default:短信服务供应商（短信服务提供商, 默认0）;comment:短信服务供应商（短信服务提供商, 默认0）;size:10;"
	SmsSupplier int32 `protobuf:"varint,105,opt,name=smsSupplier,proto3" json:"smsSupplier,omitempty"`
	// @inject_tag: json:"type" gorm:"default:消息类型 1-注册 2-忘记密码 3-修改密码 4-注销账号 5-绑定第三方账号 6-绑定手机或邮箱 7-验证码登录;comment:消息类型 1-注册 2-忘记密码 3-修改密码 4-注销账号 5-绑定第三方账号 6-绑定手机或邮箱 7-验证码登录;size:10;"
	Type int32 `protobuf:"varint,106,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"thirdparyCode" gorm:"default:第三方模板编码（当method=2的时候，值为对应短信平台的编码）;comment:第三方模板编码（当method=2的时候，值为对应短信平台的编码）;size:64;"
	ThirdparyCode string `protobuf:"bytes,107,opt,name=thirdparyCode,proto3" json:"thirdparyCode,omitempty"`
	// @inject_tag: json:"noticeTempateId" gorm:"default:通知模板Id;comment:通知模板Id;size:19;"
	NoticeTempateId int64 `protobuf:"varint,108,opt,name=noticeTempateId,proto3" json:"noticeTempateId,omitempty"`
	// @inject_tag: json:"title" gorm:"default:标题;comment:标题;size:50;"
	Title string `protobuf:"bytes,109,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: json:"content" gorm:"default:发送内容;comment:发送内容;size:255;"
	Content string `protobuf:"bytes,110,opt,name=content,proto3" json:"content,omitempty"`
	// @inject_tag: json:"appKey" gorm:"default:app key;comment:app key;size:50;"
	AppKey string `protobuf:"bytes,111,opt,name=appKey,proto3" json:"appKey,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:开发者租户编号;comment:开发者租户编号;size:20;"
	TenantId string `protobuf:"bytes,112,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"status" gorm:"default:发送状态 =1 发送成功 =2 发送失败;comment:发送状态 =1 发送成功 =2 发送失败;size:10;"
	Status int32 `protobuf:"varint,113,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"sendErrMsg" gorm:"default:发送结果描述，失败原因展示;comment:发送结果描述，失败原因展示;size:20;"
	SendErrMsg string `protobuf:"bytes,114,opt,name=sendErrMsg,proto3" json:"sendErrMsg,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,115,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	BeginTime int64                  `protobuf:"varint,117,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime   int64                  `protobuf:"varint,118,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Methods   []int32                `protobuf:"varint,119,rep,packed,name=methods,proto3" json:"methods,omitempty"`
}

func (x *MsNoticeRecordFilter) Reset() {
	*x = MsNoticeRecordFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecordFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecordFilter) ProtoMessage() {}

func (x *MsNoticeRecordFilter) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecordFilter.ProtoReflect.Descriptor instead.
func (*MsNoticeRecordFilter) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *MsNoticeRecordFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetSmsSupplier() int32 {
	if x != nil {
		return x.SmsSupplier
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetThirdparyCode() string {
	if x != nil {
		return x.ThirdparyCode
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetNoticeTempateId() int64 {
	if x != nil {
		return x.NoticeTempateId
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetSendErrMsg() string {
	if x != nil {
		return x.SendErrMsg
	}
	return ""
}

func (x *MsNoticeRecordFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MsNoticeRecordFilter) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MsNoticeRecordFilter) GetMethods() []int32 {
	if x != nil {
		return x.Methods
	}
	return nil
}

type MsNoticeRecordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *MsNoticeRecordFilter `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                 `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                 `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string                `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string                `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string                `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *MsNoticeRecordListRequest) Reset() {
	*x = MsNoticeRecordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecordListRequest) ProtoMessage() {}

func (x *MsNoticeRecordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecordListRequest.ProtoReflect.Descriptor instead.
func (*MsNoticeRecordListRequest) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *MsNoticeRecordListRequest) GetQuery() *MsNoticeRecordFilter {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *MsNoticeRecordListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MsNoticeRecordListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MsNoticeRecordListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *MsNoticeRecordListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *MsNoticeRecordListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type MsNoticeRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64             `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*MsNoticeRecord `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MsNoticeRecordResponse) Reset() {
	*x = MsNoticeRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecordResponse) ProtoMessage() {}

func (x *MsNoticeRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecordResponse.ProtoReflect.Descriptor instead.
func (*MsNoticeRecordResponse) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *MsNoticeRecordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MsNoticeRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MsNoticeRecordResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MsNoticeRecordResponse) GetData() []*MsNoticeRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsNoticeRecordUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *MsNoticeRecord `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MsNoticeRecordUpdateFieldsRequest) Reset() {
	*x = MsNoticeRecordUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecordUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecordUpdateFieldsRequest) ProtoMessage() {}

func (x *MsNoticeRecordUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecordUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*MsNoticeRecordUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *MsNoticeRecordUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *MsNoticeRecordUpdateFieldsRequest) GetData() *MsNoticeRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type MsNoticeRecordPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsNoticeRecordPrimarykey) Reset() {
	*x = MsNoticeRecordPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecordPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecordPrimarykey) ProtoMessage() {}

func (x *MsNoticeRecordPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecordPrimarykey.ProtoReflect.Descriptor instead.
func (*MsNoticeRecordPrimarykey) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *MsNoticeRecordPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsNoticeRecordBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*MsNoticeRecordPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *MsNoticeRecordBatchDeleteRequest) Reset() {
	*x = MsNoticeRecordBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ms_notice_record_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsNoticeRecordBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsNoticeRecordBatchDeleteRequest) ProtoMessage() {}

func (x *MsNoticeRecordBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ms_notice_record_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsNoticeRecordBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*MsNoticeRecordBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_ms_notice_record_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *MsNoticeRecordBatchDeleteRequest) GetKeys() []*MsNoticeRecordPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_ms_notice_record_model_gen_proto protoreflect.FileDescriptor

var file_ms_notice_record_model_gen_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x03, 0x0a,
	0x0e, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6d, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6d, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd4, 0x04, 0x0a, 0x14,
	0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6d, 0x73, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6d, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x6b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x75, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x76, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x18, 0x77, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x19, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x89, 0x01,
	0x0a, 0x16, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x21, 0x4d, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x59, 0x0a, 0x20, 0x4d, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ms_notice_record_model_gen_proto_rawDescOnce sync.Once
	file_ms_notice_record_model_gen_proto_rawDescData = file_ms_notice_record_model_gen_proto_rawDesc
)

func file_ms_notice_record_model_gen_proto_rawDescGZIP() []byte {
	file_ms_notice_record_model_gen_proto_rawDescOnce.Do(func() {
		file_ms_notice_record_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_ms_notice_record_model_gen_proto_rawDescData)
	})
	return file_ms_notice_record_model_gen_proto_rawDescData
}

var file_ms_notice_record_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ms_notice_record_model_gen_proto_goTypes = []interface{}{
	(*MsNoticeRecord)(nil),                    // 0: service.MsNoticeRecord
	(*MsNoticeRecordFilter)(nil),              // 1: service.MsNoticeRecordFilter
	(*MsNoticeRecordListRequest)(nil),         // 2: service.MsNoticeRecordListRequest
	(*MsNoticeRecordResponse)(nil),            // 3: service.MsNoticeRecordResponse
	(*MsNoticeRecordUpdateFieldsRequest)(nil), // 4: service.MsNoticeRecordUpdateFieldsRequest
	(*MsNoticeRecordPrimarykey)(nil),          // 5: service.MsNoticeRecordPrimarykey
	(*MsNoticeRecordBatchDeleteRequest)(nil),  // 6: service.MsNoticeRecordBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),             // 7: google.protobuf.Timestamp
}
var file_ms_notice_record_model_gen_proto_depIdxs = []int32{
	7, // 0: service.MsNoticeRecord.createdAt:type_name -> google.protobuf.Timestamp
	7, // 1: service.MsNoticeRecordFilter.createdAt:type_name -> google.protobuf.Timestamp
	1, // 2: service.MsNoticeRecordListRequest.query:type_name -> service.MsNoticeRecordFilter
	0, // 3: service.MsNoticeRecordResponse.data:type_name -> service.MsNoticeRecord
	0, // 4: service.MsNoticeRecordUpdateFieldsRequest.data:type_name -> service.MsNoticeRecord
	5, // 5: service.MsNoticeRecordBatchDeleteRequest.keys:type_name -> service.MsNoticeRecordPrimarykey
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ms_notice_record_model_gen_proto_init() }
func file_ms_notice_record_model_gen_proto_init() {
	if File_ms_notice_record_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ms_notice_record_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ms_notice_record_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecordFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ms_notice_record_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ms_notice_record_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ms_notice_record_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecordUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ms_notice_record_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecordPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ms_notice_record_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsNoticeRecordBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ms_notice_record_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ms_notice_record_model_gen_proto_goTypes,
		DependencyIndexes: file_ms_notice_record_model_gen_proto_depIdxs,
		MessageInfos:      file_ms_notice_record_model_gen_proto_msgTypes,
	}.Build()
	File_ms_notice_record_model_gen_proto = out.File
	file_ms_notice_record_model_gen_proto_rawDesc = nil
	file_ms_notice_record_model_gen_proto_goTypes = nil
	file_ms_notice_record_model_gen_proto_depIdxs = nil
}
