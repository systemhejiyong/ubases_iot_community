// Code generated by protoc,2022-08-18 08:44:03. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: iot_ota_upgrade_record_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type IotOtaUpgradeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"version" gorm:"default:升级版本号;comment:升级版本号;size:20;"
	Version string `protobuf:"bytes,101,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"publishId" gorm:"default:推送编号;comment:推送编号;size:19;"
	PublishId int64 `protobuf:"varint,102,opt,name=publishId,proto3" json:"publishId,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:20;"
	ProductKey string `protobuf:"bytes,103,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"deviceId" gorm:"default:设备编号;comment:设备编号;size:20;"
	DeviceId string `protobuf:"bytes,104,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// @inject_tag: json:"originalVersion" gorm:"default:设备原始版本;comment:设备原始版本;size:20;"
	OriginalVersion string `protobuf:"bytes,105,opt,name=originalVersion,proto3" json:"originalVersion,omitempty"`
	// @inject_tag: json:"status" gorm:"default:升级状态[1:升级中,2:升级成功,3:升级暂停,4:升级失败];comment:升级状态[1:升级中,2:升级成功,3:升级暂停,4:升级失败];size:10;"
	Status int32 `protobuf:"varint,106,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"isGray" gorm:"default:是否灰度发布 0：否，1：是;comment:是否灰度发布 0：否，1：是;size:10;"
	IsGray int32 `protobuf:"varint,107,opt,name=isGray,proto3" json:"isGray,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户编号;comment:租户编号;size:20;"
	TenantId string `protobuf:"bytes,108,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OtaState    string                 `protobuf:"bytes,111,opt,name=ota_state,json=otaState,proto3" json:"ota_state,omitempty"`
	OtaCode     int32                  `protobuf:"varint,112,opt,name=ota_code,json=otaCode,proto3" json:"ota_code,omitempty"`
	OtaProgress int32                  `protobuf:"varint,113,opt,name=ota_progress,json=otaProgress,proto3" json:"ota_progress,omitempty"`
	Area        string                 `protobuf:"bytes,114,opt,name=area,proto3" json:"area,omitempty"`
	StatusList  []int32                `protobuf:"varint,115,rep,packed,name=statusList,proto3" json:"statusList,omitempty"`
}

func (x *IotOtaUpgradeRecord) Reset() {
	*x = IotOtaUpgradeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecord) ProtoMessage() {}

func (x *IotOtaUpgradeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecord.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecord) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{0}
}

func (x *IotOtaUpgradeRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotOtaUpgradeRecord) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetPublishId() int64 {
	if x != nil {
		return x.PublishId
	}
	return 0
}

func (x *IotOtaUpgradeRecord) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetOriginalVersion() string {
	if x != nil {
		return x.OriginalVersion
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IotOtaUpgradeRecord) GetIsGray() int32 {
	if x != nil {
		return x.IsGray
	}
	return 0
}

func (x *IotOtaUpgradeRecord) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotOtaUpgradeRecord) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotOtaUpgradeRecord) GetOtaState() string {
	if x != nil {
		return x.OtaState
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetOtaCode() int32 {
	if x != nil {
		return x.OtaCode
	}
	return 0
}

func (x *IotOtaUpgradeRecord) GetOtaProgress() int32 {
	if x != nil {
		return x.OtaProgress
	}
	return 0
}

func (x *IotOtaUpgradeRecord) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *IotOtaUpgradeRecord) GetStatusList() []int32 {
	if x != nil {
		return x.StatusList
	}
	return nil
}

type IotOtaUpgradeRecordFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"version" gorm:"default:升级版本号;comment:升级版本号;size:20;"
	Version string `protobuf:"bytes,101,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"publishId" gorm:"default:推送编号;comment:推送编号;size:19;"
	PublishId int64 `protobuf:"varint,102,opt,name=publishId,proto3" json:"publishId,omitempty"`
	// @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:20;"
	ProductKey string `protobuf:"bytes,103,opt,name=productKey,proto3" json:"productKey,omitempty"`
	// @inject_tag: json:"deviceId" gorm:"default:设备编号;comment:设备编号;size:20;"
	DeviceId string `protobuf:"bytes,104,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// @inject_tag: json:"originalVersion" gorm:"default:设备原始版本;comment:设备原始版本;size:20;"
	OriginalVersion string `protobuf:"bytes,105,opt,name=originalVersion,proto3" json:"originalVersion,omitempty"`
	// @inject_tag: json:"status" gorm:"default:升级状态[1:升级中,2:升级成功,3:升级暂停,4:升级失败];comment:升级状态[1:升级中,2:升级成功,3:升级暂停,4:升级失败];size:10;"
	Status int32 `protobuf:"varint,106,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"isGray" gorm:"default:是否灰度发布 0：否，1：是;comment:是否灰度发布 0：否，1：是;size:10;"
	IsGray int32 `protobuf:"varint,107,opt,name=isGray,proto3" json:"isGray,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户编号;comment:租户编号;size:20;"
	TenantId string `protobuf:"bytes,108,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,110,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OtaState    string                 `protobuf:"bytes,111,opt,name=ota_state,json=otaState,proto3" json:"ota_state,omitempty"`
	OtaCode     int32                  `protobuf:"varint,112,opt,name=ota_code,json=otaCode,proto3" json:"ota_code,omitempty"`
	OtaProgress int32                  `protobuf:"varint,113,opt,name=ota_progress,json=otaProgress,proto3" json:"ota_progress,omitempty"`
}

func (x *IotOtaUpgradeRecordFilter) Reset() {
	*x = IotOtaUpgradeRecordFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecordFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecordFilter) ProtoMessage() {}

func (x *IotOtaUpgradeRecordFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecordFilter.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecordFilter) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{1}
}

func (x *IotOtaUpgradeRecordFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotOtaUpgradeRecordFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *IotOtaUpgradeRecordFilter) GetPublishId() int64 {
	if x != nil {
		return x.PublishId
	}
	return 0
}

func (x *IotOtaUpgradeRecordFilter) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *IotOtaUpgradeRecordFilter) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IotOtaUpgradeRecordFilter) GetOriginalVersion() string {
	if x != nil {
		return x.OriginalVersion
	}
	return ""
}

func (x *IotOtaUpgradeRecordFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IotOtaUpgradeRecordFilter) GetIsGray() int32 {
	if x != nil {
		return x.IsGray
	}
	return 0
}

func (x *IotOtaUpgradeRecordFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *IotOtaUpgradeRecordFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IotOtaUpgradeRecordFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *IotOtaUpgradeRecordFilter) GetOtaState() string {
	if x != nil {
		return x.OtaState
	}
	return ""
}

func (x *IotOtaUpgradeRecordFilter) GetOtaCode() int32 {
	if x != nil {
		return x.OtaCode
	}
	return 0
}

func (x *IotOtaUpgradeRecordFilter) GetOtaProgress() int32 {
	if x != nil {
		return x.OtaProgress
	}
	return 0
}

type IotOtaUpgradeRecordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *IotOtaUpgradeRecord `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string               `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string               `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string               `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *IotOtaUpgradeRecordListRequest) Reset() {
	*x = IotOtaUpgradeRecordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecordListRequest) ProtoMessage() {}

func (x *IotOtaUpgradeRecordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecordListRequest.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecordListRequest) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{2}
}

func (x *IotOtaUpgradeRecordListRequest) GetQuery() *IotOtaUpgradeRecord {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *IotOtaUpgradeRecordListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IotOtaUpgradeRecordListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IotOtaUpgradeRecordListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *IotOtaUpgradeRecordListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *IotOtaUpgradeRecordListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type IotOtaUpgradeRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32                  `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message      string                 `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total        int64                  `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data         []*IotOtaUpgradeRecord `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
	SuccessTotal int64                  `protobuf:"varint,105,opt,name=successTotal,proto3" json:"successTotal,omitempty"`
	FailTotal    int64                  `protobuf:"varint,106,opt,name=failTotal,proto3" json:"failTotal,omitempty"`
}

func (x *IotOtaUpgradeRecordResponse) Reset() {
	*x = IotOtaUpgradeRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecordResponse) ProtoMessage() {}

func (x *IotOtaUpgradeRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecordResponse.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecordResponse) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{3}
}

func (x *IotOtaUpgradeRecordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotOtaUpgradeRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotOtaUpgradeRecordResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotOtaUpgradeRecordResponse) GetData() []*IotOtaUpgradeRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IotOtaUpgradeRecordResponse) GetSuccessTotal() int64 {
	if x != nil {
		return x.SuccessTotal
	}
	return 0
}

func (x *IotOtaUpgradeRecordResponse) GetFailTotal() int64 {
	if x != nil {
		return x.FailTotal
	}
	return 0
}

type IotOtaUpgradeRecordUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string             `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *IotOtaUpgradeRecord `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotOtaUpgradeRecordUpdateFieldsRequest) Reset() {
	*x = IotOtaUpgradeRecordUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecordUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecordUpdateFieldsRequest) ProtoMessage() {}

func (x *IotOtaUpgradeRecordUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecordUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecordUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{4}
}

func (x *IotOtaUpgradeRecordUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *IotOtaUpgradeRecordUpdateFieldsRequest) GetData() *IotOtaUpgradeRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type IotOtaUpgradeRecordPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotOtaUpgradeRecordPrimarykey) Reset() {
	*x = IotOtaUpgradeRecordPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecordPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecordPrimarykey) ProtoMessage() {}

func (x *IotOtaUpgradeRecordPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecordPrimarykey.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecordPrimarykey) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{5}
}

func (x *IotOtaUpgradeRecordPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IotOtaUpgradeRecordBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*IotOtaUpgradeRecordPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *IotOtaUpgradeRecordBatchDeleteRequest) Reset() {
	*x = IotOtaUpgradeRecordBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotOtaUpgradeRecordBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotOtaUpgradeRecordBatchDeleteRequest) ProtoMessage() {}

func (x *IotOtaUpgradeRecordBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotOtaUpgradeRecordBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*IotOtaUpgradeRecordBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{6}
}

func (x *IotOtaUpgradeRecordBatchDeleteRequest) GetKeys() []*IotOtaUpgradeRecordPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

//生成升级设备列表请求
type GenerateUpgradeDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishId int64 `protobuf:"varint,101,opt,name=publishId,proto3" json:"publishId,omitempty"`
	// 是否灰度发布
	IsGray int32 `protobuf:"varint,102,opt,name=isGray,proto3" json:"isGray,omitempty"`
	// 灰度类型[1:按比例灰度, 2:按数量灰度]
	GrayType int32 `protobuf:"varint,103,opt,name=grayType,proto3" json:"grayType,omitempty"`
	// 灰度比例
	GrayScale int32 `protobuf:"varint,104,opt,name=grayScale,proto3" json:"grayScale,omitempty"`
	// 租户id
	TenantId string `protobuf:"bytes,105,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	// 是否自动升级
	IsAuto int32 `protobuf:"varint,106,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	// 自动升级开始时间
	AutoStartAt string `protobuf:"bytes,107,opt,name=autoStartAt,proto3" json:"autoStartAt,omitempty"`
	// 自动升级结束时间
	AutoEndAt string `protobuf:"bytes,108,opt,name=autoEndAt,proto3" json:"autoEndAt,omitempty"`
	// 指定升级版本
	SpecifiedVersionMode int32 `protobuf:"varint,109,opt,name=specifiedVersionMode,proto3" json:"specifiedVersionMode,omitempty"`
	// 指定版本号
	SpecifiedVersion string `protobuf:"bytes,110,opt,name=specifiedVersion,proto3" json:"specifiedVersion,omitempty"`
	// 指定区域模式
	SpecifiedAreaMode int32 `protobuf:"varint,111,opt,name=specifiedAreaMode,proto3" json:"specifiedAreaMode,omitempty"`
	// 指定区域
	SpecifiedArea string `protobuf:"bytes,112,opt,name=specifiedArea,proto3" json:"specifiedArea,omitempty"`
	// 固件版本Id
	VersionId int64 `protobuf:"varint,113,opt,name=versionId,proto3" json:"versionId,omitempty"`
	//固件版本号
	Version string `protobuf:"bytes,114,opt,name=version,proto3" json:"version,omitempty"`
	// 升级方式 1: APP提醒升级, 2: APP强制升级, 3: APP检测升级
	UpgradeMode int32 `protobuf:"varint,115,opt,name=upgradeMode,proto3" json:"upgradeMode,omitempty"`
	// 产品Key
	ProductKey string `protobuf:"bytes,116,opt,name=productKey,proto3" json:"productKey,omitempty"`
	//固件类型
	FirmwareType int32 `protobuf:"varint,117,opt,name=firmwareType,proto3" json:"firmwareType,omitempty"`
	//固件地址
	FirmwareUrl string `protobuf:"bytes,118,opt,name=firmwareUrl,proto3" json:"firmwareUrl,omitempty"`
	//固件Md5
	FirmwareMd5 string `protobuf:"bytes,119,opt,name=firmwareMd5,proto3" json:"firmwareMd5,omitempty"`
	//固件Mcu地址
	FirmwareMcuUrl string `protobuf:"bytes,120,opt,name=firmwareMcuUrl,proto3" json:"firmwareMcuUrl,omitempty"`
	//固件Key
	FirmwareKey string `protobuf:"bytes,121,opt,name=firmwareKey,proto3" json:"firmwareKey,omitempty"`
	//升级的超时时间
	UpgradeOvertime int32 `protobuf:"varint,122,opt,name=upgradeOvertime,proto3" json:"upgradeOvertime,omitempty"`
	//指定的设备Id
	DeviceIds []string `protobuf:"bytes,123,rep,name=deviceIds,proto3" json:"deviceIds,omitempty"`
}

func (x *GenerateUpgradeDeviceRequest) Reset() {
	*x = GenerateUpgradeDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUpgradeDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUpgradeDeviceRequest) ProtoMessage() {}

func (x *GenerateUpgradeDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUpgradeDeviceRequest.ProtoReflect.Descriptor instead.
func (*GenerateUpgradeDeviceRequest) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateUpgradeDeviceRequest) GetPublishId() int64 {
	if x != nil {
		return x.PublishId
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetIsGray() int32 {
	if x != nil {
		return x.IsGray
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetGrayType() int32 {
	if x != nil {
		return x.GrayType
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetGrayScale() int32 {
	if x != nil {
		return x.GrayScale
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetIsAuto() int32 {
	if x != nil {
		return x.IsAuto
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetAutoStartAt() string {
	if x != nil {
		return x.AutoStartAt
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetAutoEndAt() string {
	if x != nil {
		return x.AutoEndAt
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetSpecifiedVersionMode() int32 {
	if x != nil {
		return x.SpecifiedVersionMode
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetSpecifiedVersion() string {
	if x != nil {
		return x.SpecifiedVersion
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetSpecifiedAreaMode() int32 {
	if x != nil {
		return x.SpecifiedAreaMode
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetSpecifiedArea() string {
	if x != nil {
		return x.SpecifiedArea
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetUpgradeMode() int32 {
	if x != nil {
		return x.UpgradeMode
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetFirmwareType() int32 {
	if x != nil {
		return x.FirmwareType
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetFirmwareUrl() string {
	if x != nil {
		return x.FirmwareUrl
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetFirmwareMd5() string {
	if x != nil {
		return x.FirmwareMd5
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetFirmwareMcuUrl() string {
	if x != nil {
		return x.FirmwareMcuUrl
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetFirmwareKey() string {
	if x != nil {
		return x.FirmwareKey
	}
	return ""
}

func (x *GenerateUpgradeDeviceRequest) GetUpgradeOvertime() int32 {
	if x != nil {
		return x.UpgradeOvertime
	}
	return 0
}

func (x *GenerateUpgradeDeviceRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

//生成升级设备列表响应
type GenerateUpgradeDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64  `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GenerateUpgradeDeviceResponse) Reset() {
	*x = GenerateUpgradeDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUpgradeDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUpgradeDeviceResponse) ProtoMessage() {}

func (x *GenerateUpgradeDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_ota_upgrade_record_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUpgradeDeviceResponse.ProtoReflect.Descriptor instead.
func (*GenerateUpgradeDeviceResponse) Descriptor() ([]byte, []int) {
	return file_iot_ota_upgrade_record_model_proto_rawDescGZIP(), []int{8}
}

func (x *GenerateUpgradeDeviceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GenerateUpgradeDeviceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenerateUpgradeDeviceResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_iot_ota_upgrade_record_model_proto protoreflect.FileDescriptor

var file_iot_ota_upgrade_record_model_proto_rawDesc = []byte{
	0x0a, 0x22, 0x69, 0x6f, 0x74, 0x5f, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92,
	0x04, 0x0a, 0x13, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x47, 0x72, 0x61, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73,
	0x47, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6f, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x73, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xe4, 0x03, 0x0a, 0x19, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x47, 0x72, 0x61,
	0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x47, 0x72, 0x61, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6f, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x61, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x1e, 0x49,
	0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0xd5, 0x01, 0x0a, 0x1b, 0x49, 0x6f,
	0x74, 0x4f, 0x74, 0x61, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x72, 0x0a, 0x26, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x4f,
	0x74, 0x61, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x1d, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x25, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x4f, 0x74, 0x61, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xaa, 0x06, 0x0a, 0x1c,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x47, 0x72, 0x61, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x47, 0x72,
	0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x67, 0x72, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18,
	0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18,
	0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x41, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x41, 0x72, 0x65, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x71, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x74, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x75,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x4d, 0x64, 0x35, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x4d, 0x63, 0x75, 0x55, 0x72, 0x6c, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4d, 0x63, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x79, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x7b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x11, 0x5a,
	0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_ota_upgrade_record_model_proto_rawDescOnce sync.Once
	file_iot_ota_upgrade_record_model_proto_rawDescData = file_iot_ota_upgrade_record_model_proto_rawDesc
)

func file_iot_ota_upgrade_record_model_proto_rawDescGZIP() []byte {
	file_iot_ota_upgrade_record_model_proto_rawDescOnce.Do(func() {
		file_iot_ota_upgrade_record_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_ota_upgrade_record_model_proto_rawDescData)
	})
	return file_iot_ota_upgrade_record_model_proto_rawDescData
}

var file_iot_ota_upgrade_record_model_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_iot_ota_upgrade_record_model_proto_goTypes = []interface{}{
	(*IotOtaUpgradeRecord)(nil),                    // 0: service.IotOtaUpgradeRecord
	(*IotOtaUpgradeRecordFilter)(nil),              // 1: service.IotOtaUpgradeRecordFilter
	(*IotOtaUpgradeRecordListRequest)(nil),         // 2: service.IotOtaUpgradeRecordListRequest
	(*IotOtaUpgradeRecordResponse)(nil),            // 3: service.IotOtaUpgradeRecordResponse
	(*IotOtaUpgradeRecordUpdateFieldsRequest)(nil), // 4: service.IotOtaUpgradeRecordUpdateFieldsRequest
	(*IotOtaUpgradeRecordPrimarykey)(nil),          // 5: service.IotOtaUpgradeRecordPrimarykey
	(*IotOtaUpgradeRecordBatchDeleteRequest)(nil),  // 6: service.IotOtaUpgradeRecordBatchDeleteRequest
	(*GenerateUpgradeDeviceRequest)(nil),           // 7: service.GenerateUpgradeDeviceRequest
	(*GenerateUpgradeDeviceResponse)(nil),          // 8: service.GenerateUpgradeDeviceResponse
	(*timestamppb.Timestamp)(nil),                  // 9: google.protobuf.Timestamp
}
var file_iot_ota_upgrade_record_model_proto_depIdxs = []int32{
	9, // 0: service.IotOtaUpgradeRecord.createdAt:type_name -> google.protobuf.Timestamp
	9, // 1: service.IotOtaUpgradeRecord.updatedAt:type_name -> google.protobuf.Timestamp
	9, // 2: service.IotOtaUpgradeRecordFilter.createdAt:type_name -> google.protobuf.Timestamp
	9, // 3: service.IotOtaUpgradeRecordFilter.updatedAt:type_name -> google.protobuf.Timestamp
	0, // 4: service.IotOtaUpgradeRecordListRequest.query:type_name -> service.IotOtaUpgradeRecord
	0, // 5: service.IotOtaUpgradeRecordResponse.data:type_name -> service.IotOtaUpgradeRecord
	0, // 6: service.IotOtaUpgradeRecordUpdateFieldsRequest.data:type_name -> service.IotOtaUpgradeRecord
	5, // 7: service.IotOtaUpgradeRecordBatchDeleteRequest.keys:type_name -> service.IotOtaUpgradeRecordPrimarykey
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_iot_ota_upgrade_record_model_proto_init() }
func file_iot_ota_upgrade_record_model_proto_init() {
	if File_iot_ota_upgrade_record_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_ota_upgrade_record_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecordFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecordUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecordPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotOtaUpgradeRecordBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUpgradeDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_ota_upgrade_record_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUpgradeDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_ota_upgrade_record_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iot_ota_upgrade_record_model_proto_goTypes,
		DependencyIndexes: file_iot_ota_upgrade_record_model_proto_depIdxs,
		MessageInfos:      file_iot_ota_upgrade_record_model_proto_msgTypes,
	}.Build()
	File_iot_ota_upgrade_record_model_proto = out.File
	file_iot_ota_upgrade_record_model_proto_rawDesc = nil
	file_iot_ota_upgrade_record_model_proto_goTypes = nil
	file_iot_ota_upgrade_record_model_proto_depIdxs = nil
}
