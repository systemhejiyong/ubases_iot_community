// Code generated by protoc,2022-05-06 14:01:20. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: opm_control_panels_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type OpmControlPanels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:面板模板 - 唯一主键 ;comment:面板模板 - 唯一主键 ;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"name" gorm:"default:面板名称;comment:面板名称;size:50;"
	Name string `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"nameEn" gorm:"default:面板英文名称;comment:面板英文名称;size:50;"
	NameEn string `protobuf:"bytes,102,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:面板语言,预留;comment:面板语言,预留;size:36;"
	Lang string `protobuf:"bytes,103,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:面板描述;comment:面板描述;size:255;"
	Desc string `protobuf:"bytes,104,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"url" gorm:"default:面板地址;comment:面板地址;size:255;"
	Url string `protobuf:"bytes,105,opt,name=url,proto3" json:"url,omitempty"`
	// @inject_tag: json:"urlName" gorm:"default:面板文件名称;comment:面板文件名称;size:64;"
	UrlName string `protobuf:"bytes,106,opt,name=urlName,proto3" json:"urlName,omitempty"`
	// @inject_tag: json:"panelSize" gorm:"default:面板大小;comment:面板大小;size:10;"
	PanelSize int32 `protobuf:"varint,107,opt,name=panelSize,proto3" json:"panelSize,omitempty"`
	// @inject_tag: json:"previewName" gorm:"default:预览图名称;comment:预览图名称;size:64;"
	PreviewName string `protobuf:"bytes,108,opt,name=previewName,proto3" json:"previewName,omitempty"`
	// @inject_tag: json:"previewUrl" gorm:"default:面板地址;comment:面板地址;size:255;"
	PreviewUrl string `protobuf:"bytes,109,opt,name=previewUrl,proto3" json:"previewUrl,omitempty"`
	// @inject_tag: json:"previewSize" gorm:"default:预览图大小;comment:预览图大小;size:10;"
	PreviewSize int32 `protobuf:"varint,110,opt,name=previewSize,proto3" json:"previewSize,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:产品分类编号;comment:产品分类编号;size:19;"
	ProductTypeId int64 `protobuf:"varint,111,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品品类编号;comment:产品品类编号;size:19;"
	ProductId int64 `protobuf:"varint,112,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,113,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,114,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
	TenantId string `protobuf:"bytes,118,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *OpmControlPanels) Reset() {
	*x = OpmControlPanels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanels) ProtoMessage() {}

func (x *OpmControlPanels) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanels.ProtoReflect.Descriptor instead.
func (*OpmControlPanels) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *OpmControlPanels) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmControlPanels) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpmControlPanels) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *OpmControlPanels) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *OpmControlPanels) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OpmControlPanels) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpmControlPanels) GetUrlName() string {
	if x != nil {
		return x.UrlName
	}
	return ""
}

func (x *OpmControlPanels) GetPanelSize() int32 {
	if x != nil {
		return x.PanelSize
	}
	return 0
}

func (x *OpmControlPanels) GetPreviewName() string {
	if x != nil {
		return x.PreviewName
	}
	return ""
}

func (x *OpmControlPanels) GetPreviewUrl() string {
	if x != nil {
		return x.PreviewUrl
	}
	return ""
}

func (x *OpmControlPanels) GetPreviewSize() int32 {
	if x != nil {
		return x.PreviewSize
	}
	return 0
}

func (x *OpmControlPanels) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *OpmControlPanels) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmControlPanels) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmControlPanels) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *OpmControlPanels) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpmControlPanels) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpmControlPanels) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpmControlPanels) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type OpmControlPanelsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:面板模板 - 唯一主键 ;comment:面板模板 - 唯一主键 ;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"name" gorm:"default:面板名称;comment:面板名称;size:50;"
	Name string `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"nameEn" gorm:"default:面板英文名称;comment:面板英文名称;size:50;"
	NameEn string `protobuf:"bytes,102,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	// @inject_tag: json:"lang" gorm:"default:面板语言,预留;comment:面板语言,预留;size:36;"
	Lang string `protobuf:"bytes,103,opt,name=lang,proto3" json:"lang,omitempty"`
	// @inject_tag: json:"desc" gorm:"default:面板描述;comment:面板描述;size:255;"
	Desc string `protobuf:"bytes,104,opt,name=desc,proto3" json:"desc,omitempty"`
	// @inject_tag: json:"url" gorm:"default:面板地址;comment:面板地址;size:255;"
	Url string `protobuf:"bytes,105,opt,name=url,proto3" json:"url,omitempty"`
	// @inject_tag: json:"urlName" gorm:"default:面板文件名称;comment:面板文件名称;size:64;"
	UrlName string `protobuf:"bytes,106,opt,name=urlName,proto3" json:"urlName,omitempty"`
	// @inject_tag: json:"panelSize" gorm:"default:面板大小;comment:面板大小;size:10;"
	PanelSize int32 `protobuf:"varint,107,opt,name=panelSize,proto3" json:"panelSize,omitempty"`
	// @inject_tag: json:"previewName" gorm:"default:预览图名称;comment:预览图名称;size:64;"
	PreviewName string `protobuf:"bytes,108,opt,name=previewName,proto3" json:"previewName,omitempty"`
	// @inject_tag: json:"previewUrl" gorm:"default:面板地址;comment:面板地址;size:255;"
	PreviewUrl string `protobuf:"bytes,109,opt,name=previewUrl,proto3" json:"previewUrl,omitempty"`
	// @inject_tag: json:"previewSize" gorm:"default:预览图大小;comment:预览图大小;size:10;"
	PreviewSize int32 `protobuf:"varint,110,opt,name=previewSize,proto3" json:"previewSize,omitempty"`
	// @inject_tag: json:"productTypeId" gorm:"default:产品分类编号;comment:产品分类编号;size:19;"
	ProductTypeId int64 `protobuf:"varint,111,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品品类编号;comment:产品品类编号;size:19;"
	ProductId int64 `protobuf:"varint,112,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,113,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,114,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,115,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,116,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,117,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
	TenantId string `protobuf:"bytes,118,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *OpmControlPanelsFilter) Reset() {
	*x = OpmControlPanelsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanelsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanelsFilter) ProtoMessage() {}

func (x *OpmControlPanelsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanelsFilter.ProtoReflect.Descriptor instead.
func (*OpmControlPanelsFilter) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *OpmControlPanelsFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetUrlName() string {
	if x != nil {
		return x.UrlName
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetPanelSize() int32 {
	if x != nil {
		return x.PanelSize
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetPreviewName() string {
	if x != nil {
		return x.PreviewName
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetPreviewUrl() string {
	if x != nil {
		return x.PreviewUrl
	}
	return ""
}

func (x *OpmControlPanelsFilter) GetPreviewSize() int32 {
	if x != nil {
		return x.PreviewSize
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *OpmControlPanelsFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OpmControlPanelsFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OpmControlPanelsFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *OpmControlPanelsFilter) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type OpmControlPanelsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *OpmControlPanels `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64             `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64             `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string            `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string            `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string            `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *OpmControlPanelsListRequest) Reset() {
	*x = OpmControlPanelsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanelsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanelsListRequest) ProtoMessage() {}

func (x *OpmControlPanelsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanelsListRequest.ProtoReflect.Descriptor instead.
func (*OpmControlPanelsListRequest) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *OpmControlPanelsListRequest) GetQuery() *OpmControlPanels {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *OpmControlPanelsListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OpmControlPanelsListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OpmControlPanelsListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OpmControlPanelsListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *OpmControlPanelsListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type OpmControlPanelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64               `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OpmControlPanels `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmControlPanelsResponse) Reset() {
	*x = OpmControlPanelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanelsResponse) ProtoMessage() {}

func (x *OpmControlPanelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanelsResponse.ProtoReflect.Descriptor instead.
func (*OpmControlPanelsResponse) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *OpmControlPanelsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpmControlPanelsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpmControlPanelsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpmControlPanelsResponse) GetData() []*OpmControlPanels {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpmControlPanelsUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string          `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *OpmControlPanels `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmControlPanelsUpdateFieldsRequest) Reset() {
	*x = OpmControlPanelsUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanelsUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanelsUpdateFieldsRequest) ProtoMessage() {}

func (x *OpmControlPanelsUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanelsUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*OpmControlPanelsUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *OpmControlPanelsUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *OpmControlPanelsUpdateFieldsRequest) GetData() *OpmControlPanels {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type OpmControlPanelsPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpmControlPanelsPrimarykey) Reset() {
	*x = OpmControlPanelsPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanelsPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanelsPrimarykey) ProtoMessage() {}

func (x *OpmControlPanelsPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanelsPrimarykey.ProtoReflect.Descriptor instead.
func (*OpmControlPanelsPrimarykey) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *OpmControlPanelsPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpmControlPanelsBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*OpmControlPanelsPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *OpmControlPanelsBatchDeleteRequest) Reset() {
	*x = OpmControlPanelsBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_control_panels_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmControlPanelsBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmControlPanelsBatchDeleteRequest) ProtoMessage() {}

func (x *OpmControlPanelsBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_control_panels_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmControlPanelsBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpmControlPanelsBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_opm_control_panels_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *OpmControlPanelsBatchDeleteRequest) GetKeys() []*OpmControlPanelsPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_opm_control_panels_model_gen_proto protoreflect.FileDescriptor

var file_opm_control_panels_model_gen_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6f, 0x70, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee,
	0x04, 0x0a, 0x10, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x72, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72,
	0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xf4, 0x04, 0x0a, 0x16, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x6f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x71, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x75, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x1b, 0x4f, 0x70, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22,
	0x8d, 0x01, 0x0a, 0x18, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x6c, 0x0a, 0x23, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a,
	0x1a, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x22, 0x4f,
	0x70, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opm_control_panels_model_gen_proto_rawDescOnce sync.Once
	file_opm_control_panels_model_gen_proto_rawDescData = file_opm_control_panels_model_gen_proto_rawDesc
)

func file_opm_control_panels_model_gen_proto_rawDescGZIP() []byte {
	file_opm_control_panels_model_gen_proto_rawDescOnce.Do(func() {
		file_opm_control_panels_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_opm_control_panels_model_gen_proto_rawDescData)
	})
	return file_opm_control_panels_model_gen_proto_rawDescData
}

var file_opm_control_panels_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_opm_control_panels_model_gen_proto_goTypes = []interface{}{
	(*OpmControlPanels)(nil),                    // 0: service.OpmControlPanels
	(*OpmControlPanelsFilter)(nil),              // 1: service.OpmControlPanelsFilter
	(*OpmControlPanelsListRequest)(nil),         // 2: service.OpmControlPanelsListRequest
	(*OpmControlPanelsResponse)(nil),            // 3: service.OpmControlPanelsResponse
	(*OpmControlPanelsUpdateFieldsRequest)(nil), // 4: service.OpmControlPanelsUpdateFieldsRequest
	(*OpmControlPanelsPrimarykey)(nil),          // 5: service.OpmControlPanelsPrimarykey
	(*OpmControlPanelsBatchDeleteRequest)(nil),  // 6: service.OpmControlPanelsBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),               // 7: google.protobuf.Timestamp
}
var file_opm_control_panels_model_gen_proto_depIdxs = []int32{
	7,  // 0: service.OpmControlPanels.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 1: service.OpmControlPanels.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.OpmControlPanels.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.OpmControlPanelsFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.OpmControlPanelsFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 5: service.OpmControlPanelsFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 6: service.OpmControlPanelsListRequest.query:type_name -> service.OpmControlPanels
	0,  // 7: service.OpmControlPanelsResponse.data:type_name -> service.OpmControlPanels
	0,  // 8: service.OpmControlPanelsUpdateFieldsRequest.data:type_name -> service.OpmControlPanels
	5,  // 9: service.OpmControlPanelsBatchDeleteRequest.keys:type_name -> service.OpmControlPanelsPrimarykey
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_opm_control_panels_model_gen_proto_init() }
func file_opm_control_panels_model_gen_proto_init() {
	if File_opm_control_panels_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opm_control_panels_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_control_panels_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanelsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_control_panels_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanelsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_control_panels_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_control_panels_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanelsUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_control_panels_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanelsPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_control_panels_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmControlPanelsBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opm_control_panels_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opm_control_panels_model_gen_proto_goTypes,
		DependencyIndexes: file_opm_control_panels_model_gen_proto_depIdxs,
		MessageInfos:      file_opm_control_panels_model_gen_proto_msgTypes,
	}.Build()
	File_opm_control_panels_model_gen_proto = out.File
	file_opm_control_panels_model_gen_proto_rawDesc = nil
	file_opm_control_panels_model_gen_proto_goTypes = nil
	file_opm_control_panels_model_gen_proto_depIdxs = nil
}
