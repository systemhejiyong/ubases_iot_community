// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: t_pm_product_type.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TPmProductTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //主键（雪花算法19位）
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                   //分类名称
	NameEn      string        `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                 //分类名称（英文）
	Identifier  string        `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`                       //属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。
	Sort        int32         `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                  //排序
	ParentId    int64         `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`          //父ID
	Desc        string        `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                                   //描述
	CreatedBy   int64         `protobuf:"varint,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`       //创建人
	CreatedTime string        `protobuf:"bytes,9,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`  //创建时间
	UpdatedBy   int64         `protobuf:"varint,10,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`      //修改人
	UpdatedTime string        `protobuf:"bytes,11,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"` //修改时间
	Deleted     int32         `protobuf:"varint,12,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //删除的标识 0-正常 1-删除
	ParentName  string        `protobuf:"bytes,13,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`    //父级分类名称
	ImgSize     int32         `protobuf:"varint,14,opt,name=imgSize,proto3" json:"imgSize,omitempty"`                           //图片大小
	ImgPath     string        `protobuf:"bytes,15,opt,name=imgPath,proto3" json:"imgPath,omitempty"`                            //图片路径
	ImgFullPath string        `protobuf:"bytes,16,opt,name=imgFullPath,proto3" json:"imgFullPath,omitempty"`                    //图片完整路径
	ImgName     string        `protobuf:"bytes,17,opt,name=imgName,proto3" json:"imgName,omitempty"`                            //图片名称
	ImgType     string        `protobuf:"bytes,18,opt,name=imgType,proto3" json:"imgType,omitempty"`                            //图片类型
	Imgkey      string        `protobuf:"bytes,19,opt,name=imgkey,proto3" json:"imgkey,omitempty"`                              //图片MD5
	ModelsItems []*ModelsItem `protobuf:"bytes,20,rep,name=modelsItems,proto3" json:"modelsItems,omitempty"`                    //图片
	Count       int64         `protobuf:"varint,21,opt,name=count,proto3" json:"count,omitempty"`                               //关联产品类型数量
}

func (x *TPmProductTypeRequest) Reset() {
	*x = TPmProductTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeRequest) ProtoMessage() {}

func (x *TPmProductTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeRequest.ProtoReflect.Descriptor instead.
func (*TPmProductTypeRequest) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{0}
}

func (x *TPmProductTypeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TPmProductTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TPmProductTypeRequest) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *TPmProductTypeRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *TPmProductTypeRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *TPmProductTypeRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *TPmProductTypeRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TPmProductTypeRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TPmProductTypeRequest) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *TPmProductTypeRequest) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TPmProductTypeRequest) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *TPmProductTypeRequest) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *TPmProductTypeRequest) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *TPmProductTypeRequest) GetImgSize() int32 {
	if x != nil {
		return x.ImgSize
	}
	return 0
}

func (x *TPmProductTypeRequest) GetImgPath() string {
	if x != nil {
		return x.ImgPath
	}
	return ""
}

func (x *TPmProductTypeRequest) GetImgFullPath() string {
	if x != nil {
		return x.ImgFullPath
	}
	return ""
}

func (x *TPmProductTypeRequest) GetImgName() string {
	if x != nil {
		return x.ImgName
	}
	return ""
}

func (x *TPmProductTypeRequest) GetImgType() string {
	if x != nil {
		return x.ImgType
	}
	return ""
}

func (x *TPmProductTypeRequest) GetImgkey() string {
	if x != nil {
		return x.Imgkey
	}
	return ""
}

func (x *TPmProductTypeRequest) GetModelsItems() []*ModelsItem {
	if x != nil {
		return x.ModelsItems
	}
	return nil
}

func (x *TPmProductTypeRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TPmProductTypeFilterById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TPmProductTypeFilterById) Reset() {
	*x = TPmProductTypeFilterById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeFilterById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeFilterById) ProtoMessage() {}

func (x *TPmProductTypeFilterById) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeFilterById.ProtoReflect.Descriptor instead.
func (*TPmProductTypeFilterById) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{1}
}

func (x *TPmProductTypeFilterById) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TPmProductTypeFilterPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int64                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort      int64                 `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	SortField int64                 `protobuf:"varint,4,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SearchKey string                `protobuf:"bytes,5,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	QueryObj  *TPmProductTypeFilter `protobuf:"bytes,6,opt,name=queryObj,proto3" json:"queryObj,omitempty"`
	QueryStr  string                `protobuf:"bytes,7,opt,name=queryStr,proto3" json:"queryStr,omitempty"`
}

func (x *TPmProductTypeFilterPage) Reset() {
	*x = TPmProductTypeFilterPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeFilterPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeFilterPage) ProtoMessage() {}

func (x *TPmProductTypeFilterPage) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeFilterPage.ProtoReflect.Descriptor instead.
func (*TPmProductTypeFilterPage) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{2}
}

func (x *TPmProductTypeFilterPage) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TPmProductTypeFilterPage) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TPmProductTypeFilterPage) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *TPmProductTypeFilterPage) GetSortField() int64 {
	if x != nil {
		return x.SortField
	}
	return 0
}

func (x *TPmProductTypeFilterPage) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *TPmProductTypeFilterPage) GetQueryObj() *TPmProductTypeFilter {
	if x != nil {
		return x.QueryObj
	}
	return nil
}

func (x *TPmProductTypeFilterPage) GetQueryStr() string {
	if x != nil {
		return x.QueryStr
	}
	return ""
}

type TPmProductTypeResponseObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TPmProductTypeRequest `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TPmProductTypeResponseObject) Reset() {
	*x = TPmProductTypeResponseObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeResponseObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeResponseObject) ProtoMessage() {}

func (x *TPmProductTypeResponseObject) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeResponseObject.ProtoReflect.Descriptor instead.
func (*TPmProductTypeResponseObject) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{3}
}

func (x *TPmProductTypeResponseObject) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TPmProductTypeResponseObject) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TPmProductTypeResponseObject) GetData() *TPmProductTypeRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type TPmProductTypeResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Code  int32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string                   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	List  []*TPmProductTypeRequest `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TPmProductTypeResponseList) Reset() {
	*x = TPmProductTypeResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeResponseList) ProtoMessage() {}

func (x *TPmProductTypeResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeResponseList.ProtoReflect.Descriptor instead.
func (*TPmProductTypeResponseList) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{4}
}

func (x *TPmProductTypeResponseList) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TPmProductTypeResponseList) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TPmProductTypeResponseList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TPmProductTypeResponseList) GetList() []*TPmProductTypeRequest {
	if x != nil {
		return x.List
	}
	return nil
}

type TPmProductTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TPmProductTypeRequest `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TPmProductTypeResponse) Reset() {
	*x = TPmProductTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeResponse) ProtoMessage() {}

func (x *TPmProductTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeResponse.ProtoReflect.Descriptor instead.
func (*TPmProductTypeResponse) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{5}
}

func (x *TPmProductTypeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TPmProductTypeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TPmProductTypeResponse) GetData() *TPmProductTypeRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type TPmProductTypeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //主键（雪花算法19位）
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                   //分类名称
	NameEn      string `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                 //分类名称（英文）
	Identifier  string `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`                       //属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。
	Sort        int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                                  //排序
	ParentId    int64  `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`          //父ID
	Desc        string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                                   //描述
	CreatedBy   int64  `protobuf:"varint,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`       //创建人
	CreatedTime string `protobuf:"bytes,9,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`  //创建时间
	UpdatedBy   int64  `protobuf:"varint,10,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`      //修改人
	UpdatedTime string `protobuf:"bytes,11,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"` //修改时间
	Deleted     int32  `protobuf:"varint,12,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //删除的标识 0-正常 1-删除
}

func (x *TPmProductTypeFilter) Reset() {
	*x = TPmProductTypeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPmProductTypeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPmProductTypeFilter) ProtoMessage() {}

func (x *TPmProductTypeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPmProductTypeFilter.ProtoReflect.Descriptor instead.
func (*TPmProductTypeFilter) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{6}
}

func (x *TPmProductTypeFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TPmProductTypeFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TPmProductTypeFilter) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *TPmProductTypeFilter) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *TPmProductTypeFilter) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *TPmProductTypeFilter) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *TPmProductTypeFilter) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TPmProductTypeFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *TPmProductTypeFilter) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *TPmProductTypeFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *TPmProductTypeFilter) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *TPmProductTypeFilter) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

type ModelsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductTypeId int64  `protobuf:"varint,2,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`
	Dpid          int32  `protobuf:"varint,3,opt,name=dpid,proto3" json:"dpid,omitempty"`
	Identifier    string `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	RwFlag        string `protobuf:"bytes,6,opt,name=rwFlag,proto3" json:"rwFlag,omitempty"`
	DataType      string `protobuf:"bytes,7,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Properties    string `protobuf:"bytes,8,opt,name=properties,proto3" json:"properties,omitempty"`
	Mark          string `protobuf:"bytes,9,opt,name=mark,proto3" json:"mark,omitempty"`
	Required      int32  `protobuf:"varint,10,opt,name=required,proto3" json:"required,omitempty"`
}

func (x *ModelsItem) Reset() {
	*x = ModelsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_t_pm_product_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelsItem) ProtoMessage() {}

func (x *ModelsItem) ProtoReflect() protoreflect.Message {
	mi := &file_t_pm_product_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelsItem.ProtoReflect.Descriptor instead.
func (*ModelsItem) Descriptor() ([]byte, []int) {
	return file_t_pm_product_type_proto_rawDescGZIP(), []int{7}
}

func (x *ModelsItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelsItem) GetProductTypeId() int64 {
	if x != nil {
		return x.ProductTypeId
	}
	return 0
}

func (x *ModelsItem) GetDpid() int32 {
	if x != nil {
		return x.Dpid
	}
	return 0
}

func (x *ModelsItem) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ModelsItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelsItem) GetRwFlag() string {
	if x != nil {
		return x.RwFlag
	}
	return ""
}

func (x *ModelsItem) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *ModelsItem) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

func (x *ModelsItem) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *ModelsItem) GetRequired() int32 {
	if x != nil {
		return x.Required
	}
	return 0
}

var File_t_pm_product_type_proto protoreflect.FileDescriptor

var file_t_pm_product_type_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x5f, 0x70, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xee, 0x04, 0x0a, 0x15, 0x54, 0x50,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x67, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6d, 0x67, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6d, 0x67, 0x6b, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x67, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x50,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x54, 0x50,
	0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x18, 0x54, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x40, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x22, 0x7f, 0x0a, 0x1c, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x93, 0x01, 0x0a,
	0x1a, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x79, 0x0a, 0x16, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x02,
	0x0a, 0x14, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x70, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x32, 0x84, 0x06, 0x0a, 0x0e, 0x54, 0x50, 0x6d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x71, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x2c, 0x2e,
	0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54,
	0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x2c, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x2a, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x67, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x1a, 0x2a, 0x2e, 0x74, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x54, 0x50, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_t_pm_product_type_proto_rawDescOnce sync.Once
	file_t_pm_product_type_proto_rawDescData = file_t_pm_product_type_proto_rawDesc
)

func file_t_pm_product_type_proto_rawDescGZIP() []byte {
	file_t_pm_product_type_proto_rawDescOnce.Do(func() {
		file_t_pm_product_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_t_pm_product_type_proto_rawDescData)
	})
	return file_t_pm_product_type_proto_rawDescData
}

var file_t_pm_product_type_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_t_pm_product_type_proto_goTypes = []interface{}{
	(*TPmProductTypeRequest)(nil),        // 0: tPmProductType.TPmProductTypeRequest
	(*TPmProductTypeFilterById)(nil),     // 1: tPmProductType.TPmProductTypeFilterById
	(*TPmProductTypeFilterPage)(nil),     // 2: tPmProductType.TPmProductTypeFilterPage
	(*TPmProductTypeResponseObject)(nil), // 3: tPmProductType.TPmProductTypeResponseObject
	(*TPmProductTypeResponseList)(nil),   // 4: tPmProductType.TPmProductTypeResponseList
	(*TPmProductTypeResponse)(nil),       // 5: tPmProductType.TPmProductTypeResponse
	(*TPmProductTypeFilter)(nil),         // 6: tPmProductType.TPmProductTypeFilter
	(*ModelsItem)(nil),                   // 7: tPmProductType.ModelsItem
}
var file_t_pm_product_type_proto_depIdxs = []int32{
	7,  // 0: tPmProductType.TPmProductTypeRequest.modelsItems:type_name -> tPmProductType.ModelsItem
	6,  // 1: tPmProductType.TPmProductTypeFilterPage.queryObj:type_name -> tPmProductType.TPmProductTypeFilter
	0,  // 2: tPmProductType.TPmProductTypeResponseObject.data:type_name -> tPmProductType.TPmProductTypeRequest
	0,  // 3: tPmProductType.TPmProductTypeResponseList.list:type_name -> tPmProductType.TPmProductTypeRequest
	0,  // 4: tPmProductType.TPmProductTypeResponse.data:type_name -> tPmProductType.TPmProductTypeRequest
	1,  // 5: tPmProductType.TPmProductType.GetByIdTPmProductType:input_type -> tPmProductType.TPmProductTypeFilterById
	6,  // 6: tPmProductType.TPmProductType.GetTPmProductType:input_type -> tPmProductType.TPmProductTypeFilter
	2,  // 7: tPmProductType.TPmProductType.ListTPmProductType:input_type -> tPmProductType.TPmProductTypeFilterPage
	0,  // 8: tPmProductType.TPmProductType.CreateTPmProductType:input_type -> tPmProductType.TPmProductTypeRequest
	0,  // 9: tPmProductType.TPmProductType.UpdateTPmProductType:input_type -> tPmProductType.TPmProductTypeRequest
	0,  // 10: tPmProductType.TPmProductType.DeleteTPmProductType:input_type -> tPmProductType.TPmProductTypeRequest
	2,  // 11: tPmProductType.TPmProductType.GetAppProductType:input_type -> tPmProductType.TPmProductTypeFilterPage
	3,  // 12: tPmProductType.TPmProductType.GetByIdTPmProductType:output_type -> tPmProductType.TPmProductTypeResponseObject
	3,  // 13: tPmProductType.TPmProductType.GetTPmProductType:output_type -> tPmProductType.TPmProductTypeResponseObject
	4,  // 14: tPmProductType.TPmProductType.ListTPmProductType:output_type -> tPmProductType.TPmProductTypeResponseList
	5,  // 15: tPmProductType.TPmProductType.CreateTPmProductType:output_type -> tPmProductType.TPmProductTypeResponse
	5,  // 16: tPmProductType.TPmProductType.UpdateTPmProductType:output_type -> tPmProductType.TPmProductTypeResponse
	5,  // 17: tPmProductType.TPmProductType.DeleteTPmProductType:output_type -> tPmProductType.TPmProductTypeResponse
	4,  // 18: tPmProductType.TPmProductType.GetAppProductType:output_type -> tPmProductType.TPmProductTypeResponseList
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_t_pm_product_type_proto_init() }
func file_t_pm_product_type_proto_init() {
	if File_t_pm_product_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_t_pm_product_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeFilterById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeFilterPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeResponseObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPmProductTypeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_t_pm_product_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_t_pm_product_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_t_pm_product_type_proto_goTypes,
		DependencyIndexes: file_t_pm_product_type_proto_depIdxs,
		MessageInfos:      file_t_pm_product_type_proto_msgTypes,
	}.Build()
	File_t_pm_product_type_proto = out.File
	file_t_pm_product_type_proto_rawDesc = nil
	file_t_pm_product_type_proto_goTypes = nil
	file_t_pm_product_type_proto_depIdxs = nil
}
