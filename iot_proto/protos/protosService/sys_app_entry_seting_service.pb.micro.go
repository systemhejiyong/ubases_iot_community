// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: sys_app_entry_seting_service.proto

package protosService

import (
	
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for SysAppEntrySetingService service

func NewSysAppEntrySetingServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{
		{
			Name:    "SysAppEntrySetingService.Create",
			Path:    []string{"/v1/sysAppEntrySeting/create"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.Delete",
			Path:    []string{"/v1/sysAppEntrySeting/delete"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.DeleteById",
			Path:    []string{"/v1/sysAppEntrySeting/deleteById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.DeleteByIds",
			Path:    []string{"/v1/sysAppEntrySeting/DeleteByIds"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.Update",
			Path:    []string{"/v1/sysAppEntrySeting/update"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.UpdateAll",
			Path:    []string{"/v1/sysAppEntrySeting/updateAll"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.UpdateFields",
			Path:    []string{"/v1/sysAppEntrySeting/updateFields"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.FindById",
			Path:    []string{"/v1/sysAppEntrySeting/findById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.Find",
			Path:    []string{"/v1/sysAppEntrySeting/find"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.Lists",
			Path:    []string{"/v1/sysAppEntrySeting/lists"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "SysAppEntrySetingService.CreateBatch",
			Path:    []string{"/v1/sysAppEntrySeting/createBatch"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
	}
}

// Client API for SysAppEntrySetingService service

type SysAppEntrySetingService interface {
	//创建
	Create(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error)
	//匹配多条件删除
	Delete(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error)
	//匹配主键删除,一般是Id
	DeleteById(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error)
	//匹配主键批量删除
	DeleteByIds(ctx context.Context, in *SysAppEntrySetingBatchDeleteRequest, opts ...client.CallOption) (*Response, error)
	//根据主键更新非空字段
	Update(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error)
	//根据主键更新所有字段
	UpdateAll(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error)
	//根据主键更新指定列
	UpdateFields(ctx context.Context, in *SysAppEntrySetingUpdateFieldsRequest, opts ...client.CallOption) (*Response, error)
	//根据主键查找,一般是Id,返回单条数据
	FindById(ctx context.Context, in *SysAppEntrySetingFilter, opts ...client.CallOption) (*SysAppEntrySetingResponse, error)
	//多条件查找，返回单条数据
	Find(ctx context.Context, in *SysAppEntrySetingFilter, opts ...client.CallOption) (*SysAppEntrySetingResponse, error)
	//查找，支持分页，可返回多条数据
	Lists(ctx context.Context, in *SysAppEntrySetingListRequest, opts ...client.CallOption) (*SysAppEntrySetingResponse, error)
	//批量创建
	CreateBatch(ctx context.Context, in *SysAppEntrySetingBatchRequest, opts ...client.CallOption) (*Response, error)
}

type sysAppEntrySetingService struct {
	c    client.Client
	name string
}

func NewSysAppEntrySetingService(name string, c client.Client) SysAppEntrySetingService {
	return &sysAppEntrySetingService{
		c:    c,
		name: name,
	}
}

func (c *sysAppEntrySetingService) Create(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) Delete(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) DeleteById(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.DeleteById", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) DeleteByIds(ctx context.Context, in *SysAppEntrySetingBatchDeleteRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.DeleteByIds", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) Update(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) UpdateAll(ctx context.Context, in *SysAppEntrySeting, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.UpdateAll", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) UpdateFields(ctx context.Context, in *SysAppEntrySetingUpdateFieldsRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.UpdateFields", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) FindById(ctx context.Context, in *SysAppEntrySetingFilter, opts ...client.CallOption) (*SysAppEntrySetingResponse, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.FindById", in)
	out := new(SysAppEntrySetingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) Find(ctx context.Context, in *SysAppEntrySetingFilter, opts ...client.CallOption) (*SysAppEntrySetingResponse, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.Find", in)
	out := new(SysAppEntrySetingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) Lists(ctx context.Context, in *SysAppEntrySetingListRequest, opts ...client.CallOption) (*SysAppEntrySetingResponse, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.Lists", in)
	out := new(SysAppEntrySetingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysAppEntrySetingService) CreateBatch(ctx context.Context, in *SysAppEntrySetingBatchRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SysAppEntrySetingService.CreateBatch", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SysAppEntrySetingService service

type SysAppEntrySetingServiceHandler interface {
	//创建
	Create(context.Context, *SysAppEntrySeting, *Response) error
	//匹配多条件删除
	Delete(context.Context, *SysAppEntrySeting, *Response) error
	//匹配主键删除,一般是Id
	DeleteById(context.Context, *SysAppEntrySeting, *Response) error
	//匹配主键批量删除
	DeleteByIds(context.Context, *SysAppEntrySetingBatchDeleteRequest, *Response) error
	//根据主键更新非空字段
	Update(context.Context, *SysAppEntrySeting, *Response) error
	//根据主键更新所有字段
	UpdateAll(context.Context, *SysAppEntrySeting, *Response) error
	//根据主键更新指定列
	UpdateFields(context.Context, *SysAppEntrySetingUpdateFieldsRequest, *Response) error
	//根据主键查找,一般是Id,返回单条数据
	FindById(context.Context, *SysAppEntrySetingFilter, *SysAppEntrySetingResponse) error
	//多条件查找，返回单条数据
	Find(context.Context, *SysAppEntrySetingFilter, *SysAppEntrySetingResponse) error
	//查找，支持分页，可返回多条数据
	Lists(context.Context, *SysAppEntrySetingListRequest, *SysAppEntrySetingResponse) error
	//批量创建
	CreateBatch(context.Context, *SysAppEntrySetingBatchRequest, *Response) error
}

func RegisterSysAppEntrySetingServiceHandler(s server.Server, hdlr SysAppEntrySetingServiceHandler, opts ...server.HandlerOption) error {
	type sysAppEntrySetingService interface {
		Create(ctx context.Context, in *SysAppEntrySeting, out *Response) error
		Delete(ctx context.Context, in *SysAppEntrySeting, out *Response) error
		DeleteById(ctx context.Context, in *SysAppEntrySeting, out *Response) error
		DeleteByIds(ctx context.Context, in *SysAppEntrySetingBatchDeleteRequest, out *Response) error
		Update(ctx context.Context, in *SysAppEntrySeting, out *Response) error
		UpdateAll(ctx context.Context, in *SysAppEntrySeting, out *Response) error
		UpdateFields(ctx context.Context, in *SysAppEntrySetingUpdateFieldsRequest, out *Response) error
		FindById(ctx context.Context, in *SysAppEntrySetingFilter, out *SysAppEntrySetingResponse) error
		Find(ctx context.Context, in *SysAppEntrySetingFilter, out *SysAppEntrySetingResponse) error
		Lists(ctx context.Context, in *SysAppEntrySetingListRequest, out *SysAppEntrySetingResponse) error
		CreateBatch(ctx context.Context, in *SysAppEntrySetingBatchRequest, out *Response) error
	}
	type SysAppEntrySetingService struct {
		sysAppEntrySetingService
	}
	h := &sysAppEntrySetingServiceHandler{hdlr}
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.Create",
		Path:    []string{"/v1/sysAppEntrySeting/create"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.Delete",
		Path:    []string{"/v1/sysAppEntrySeting/delete"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.DeleteById",
		Path:    []string{"/v1/sysAppEntrySeting/deleteById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.DeleteByIds",
		Path:    []string{"/v1/sysAppEntrySeting/DeleteByIds"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.Update",
		Path:    []string{"/v1/sysAppEntrySeting/update"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.UpdateAll",
		Path:    []string{"/v1/sysAppEntrySeting/updateAll"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.UpdateFields",
		Path:    []string{"/v1/sysAppEntrySeting/updateFields"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.FindById",
		Path:    []string{"/v1/sysAppEntrySeting/findById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.Find",
		Path:    []string{"/v1/sysAppEntrySeting/find"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.Lists",
		Path:    []string{"/v1/sysAppEntrySeting/lists"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "SysAppEntrySetingService.CreateBatch",
		Path:    []string{"/v1/sysAppEntrySeting/createBatch"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	return s.Handle(s.NewHandler(&SysAppEntrySetingService{h}, opts...))
}

type sysAppEntrySetingServiceHandler struct {
	SysAppEntrySetingServiceHandler
}

func (h *sysAppEntrySetingServiceHandler) Create(ctx context.Context, in *SysAppEntrySeting, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.Create(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) Delete(ctx context.Context, in *SysAppEntrySeting, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.Delete(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) DeleteById(ctx context.Context, in *SysAppEntrySeting, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.DeleteById(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) DeleteByIds(ctx context.Context, in *SysAppEntrySetingBatchDeleteRequest, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.DeleteByIds(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) Update(ctx context.Context, in *SysAppEntrySeting, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.Update(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) UpdateAll(ctx context.Context, in *SysAppEntrySeting, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.UpdateAll(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) UpdateFields(ctx context.Context, in *SysAppEntrySetingUpdateFieldsRequest, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.UpdateFields(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) FindById(ctx context.Context, in *SysAppEntrySetingFilter, out *SysAppEntrySetingResponse) error {
	return h.SysAppEntrySetingServiceHandler.FindById(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) Find(ctx context.Context, in *SysAppEntrySetingFilter, out *SysAppEntrySetingResponse) error {
	return h.SysAppEntrySetingServiceHandler.Find(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) Lists(ctx context.Context, in *SysAppEntrySetingListRequest, out *SysAppEntrySetingResponse) error {
	return h.SysAppEntrySetingServiceHandler.Lists(ctx, in, out)
}

func (h *sysAppEntrySetingServiceHandler) CreateBatch(ctx context.Context, in *SysAppEntrySetingBatchRequest, out *Response) error {
	return h.SysAppEntrySetingServiceHandler.CreateBatch(ctx, in, out)
}
