// Code generated by protoc,2022-04-19 09:58:33. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: config_license_model.gen.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type ConfigLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:;comment:;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"belongType" gorm:"default:归属对象类型 =1 管理平台 =2 开发平台;comment:归属对象类型 =1 管理平台 =2 开发平台;size:10;"
	BelongType int32 `protobuf:"varint,101,opt,name=belongType,proto3" json:"belongType,omitempty"`
	// @inject_tag: json:"belongId" gorm:"default:归属对象ID;comment:归属对象ID;size:19;"
	BelongId int64 `protobuf:"varint,102,opt,name=belongId,proto3" json:"belongId,omitempty"`
	// @inject_tag: json:"machineId" gorm:"default:服务Mac地址;comment:服务Mac地址;size:50;"
	MachineId string `protobuf:"bytes,103,opt,name=machineId,proto3" json:"machineId,omitempty"`
	// @inject_tag: json:"license" gorm:"default:许可证密文;comment:许可证密文;size:255;"
	License string `protobuf:"bytes,104,opt,name=license,proto3" json:"license,omitempty"`
	// @inject_tag: json:"licenseType" gorm:"default:许可证型 =1一次性数量授权许可 =2年递增量授权许可;comment:许可证型 =1一次性数量授权许可 =2年递增量授权许可;size:10;"
	LicenseType int32 `protobuf:"varint,105,opt,name=licenseType,proto3" json:"licenseType,omitempty"`
	// @inject_tag: json:"agentNumber" gorm:"default:许可数量;comment:许可数量;size:10;"
	AgentNumber int32 `protobuf:"varint,106,opt,name=agentNumber,proto3" json:"agentNumber,omitempty"`
	// @inject_tag: json:"surplusagentNumber" gorm:"default:剩余数量;comment:剩余数量;size:10;"
	SurplusagentNumber int32 `protobuf:"varint,107,opt,name=surplusagentNumber,proto3" json:"surplusagentNumber,omitempty"`
	// @inject_tag: json:"type" gorm:"default:是否检查过期;comment:是否检查过期;size:10;"
	Type int32 `protobuf:"varint,108,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"timeout" gorm:"default:过期时间;comment:过期时间;"
	Timeout *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,110,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,111,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *ConfigLicense) Reset() {
	*x = ConfigLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicense) ProtoMessage() {}

func (x *ConfigLicense) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicense.ProtoReflect.Descriptor instead.
func (*ConfigLicense) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigLicense) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigLicense) GetBelongType() int32 {
	if x != nil {
		return x.BelongType
	}
	return 0
}

func (x *ConfigLicense) GetBelongId() int64 {
	if x != nil {
		return x.BelongId
	}
	return 0
}

func (x *ConfigLicense) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *ConfigLicense) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *ConfigLicense) GetLicenseType() int32 {
	if x != nil {
		return x.LicenseType
	}
	return 0
}

func (x *ConfigLicense) GetAgentNumber() int32 {
	if x != nil {
		return x.AgentNumber
	}
	return 0
}

func (x *ConfigLicense) GetSurplusagentNumber() int32 {
	if x != nil {
		return x.SurplusagentNumber
	}
	return 0
}

func (x *ConfigLicense) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ConfigLicense) GetTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ConfigLicense) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *ConfigLicense) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *ConfigLicense) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConfigLicense) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConfigLicense) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ConfigLicenseFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:;comment:;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"belongType" gorm:"default:归属对象类型 =1 管理平台 =2 开发平台;comment:归属对象类型 =1 管理平台 =2 开发平台;size:10;"
	BelongType int32 `protobuf:"varint,101,opt,name=belongType,proto3" json:"belongType,omitempty"`
	// @inject_tag: json:"belongId" gorm:"default:归属对象ID;comment:归属对象ID;size:19;"
	BelongId int64 `protobuf:"varint,102,opt,name=belongId,proto3" json:"belongId,omitempty"`
	// @inject_tag: json:"machineId" gorm:"default:服务Mac地址;comment:服务Mac地址;size:50;"
	MachineId string `protobuf:"bytes,103,opt,name=machineId,proto3" json:"machineId,omitempty"`
	// @inject_tag: json:"license" gorm:"default:许可证密文;comment:许可证密文;size:255;"
	License string `protobuf:"bytes,104,opt,name=license,proto3" json:"license,omitempty"`
	// @inject_tag: json:"licenseType" gorm:"default:许可证型 =1一次性数量授权许可 =2年递增量授权许可;comment:许可证型 =1一次性数量授权许可 =2年递增量授权许可;size:10;"
	LicenseType int32 `protobuf:"varint,105,opt,name=licenseType,proto3" json:"licenseType,omitempty"`
	// @inject_tag: json:"agentNumber" gorm:"default:许可数量;comment:许可数量;size:10;"
	AgentNumber int32 `protobuf:"varint,106,opt,name=agentNumber,proto3" json:"agentNumber,omitempty"`
	// @inject_tag: json:"surplusagentNumber" gorm:"default:剩余数量;comment:剩余数量;size:10;"
	SurplusagentNumber int32 `protobuf:"varint,107,opt,name=surplusagentNumber,proto3" json:"surplusagentNumber,omitempty"`
	// @inject_tag: json:"type" gorm:"default:是否检查过期;comment:是否检查过期;size:10;"
	Type int32 `protobuf:"varint,108,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"timeout" gorm:"default:过期时间;comment:过期时间;"
	Timeout *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,110,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
	UpdatedBy int64 `protobuf:"varint,111,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,113,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,114,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *ConfigLicenseFilter) Reset() {
	*x = ConfigLicenseFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicenseFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicenseFilter) ProtoMessage() {}

func (x *ConfigLicenseFilter) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicenseFilter.ProtoReflect.Descriptor instead.
func (*ConfigLicenseFilter) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigLicenseFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigLicenseFilter) GetBelongType() int32 {
	if x != nil {
		return x.BelongType
	}
	return 0
}

func (x *ConfigLicenseFilter) GetBelongId() int64 {
	if x != nil {
		return x.BelongId
	}
	return 0
}

func (x *ConfigLicenseFilter) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *ConfigLicenseFilter) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *ConfigLicenseFilter) GetLicenseType() int32 {
	if x != nil {
		return x.LicenseType
	}
	return 0
}

func (x *ConfigLicenseFilter) GetAgentNumber() int32 {
	if x != nil {
		return x.AgentNumber
	}
	return 0
}

func (x *ConfigLicenseFilter) GetSurplusagentNumber() int32 {
	if x != nil {
		return x.SurplusagentNumber
	}
	return 0
}

func (x *ConfigLicenseFilter) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ConfigLicenseFilter) GetTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ConfigLicenseFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *ConfigLicenseFilter) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *ConfigLicenseFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConfigLicenseFilter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConfigLicenseFilter) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ConfigLicenseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *ConfigLicense `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64          `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64          `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string         `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string         `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *ConfigLicenseListRequest) Reset() {
	*x = ConfigLicenseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicenseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicenseListRequest) ProtoMessage() {}

func (x *ConfigLicenseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicenseListRequest.ProtoReflect.Descriptor instead.
func (*ConfigLicenseListRequest) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigLicenseListRequest) GetQuery() *ConfigLicense {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ConfigLicenseListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ConfigLicenseListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ConfigLicenseListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *ConfigLicenseListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type ConfigLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64            `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*ConfigLicense `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConfigLicenseResponse) Reset() {
	*x = ConfigLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicenseResponse) ProtoMessage() {}

func (x *ConfigLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicenseResponse.ProtoReflect.Descriptor instead.
func (*ConfigLicenseResponse) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigLicenseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigLicenseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfigLicenseResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ConfigLicenseResponse) GetData() []*ConfigLicense {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConfigLicenseUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string       `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *ConfigLicense `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ConfigLicenseUpdateFieldsRequest) Reset() {
	*x = ConfigLicenseUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicenseUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicenseUpdateFieldsRequest) ProtoMessage() {}

func (x *ConfigLicenseUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicenseUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*ConfigLicenseUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigLicenseUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ConfigLicenseUpdateFieldsRequest) GetData() *ConfigLicense {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type ConfigLicensePrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	BelongType int32  `protobuf:"varint,101,opt,name=belongType,proto3" json:"belongType,omitempty"`
	MachineId  string `protobuf:"bytes,103,opt,name=machineId,proto3" json:"machineId,omitempty"`
	License    string `protobuf:"bytes,104,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *ConfigLicensePrimarykey) Reset() {
	*x = ConfigLicensePrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicensePrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicensePrimarykey) ProtoMessage() {}

func (x *ConfigLicensePrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicensePrimarykey.ProtoReflect.Descriptor instead.
func (*ConfigLicensePrimarykey) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigLicensePrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigLicensePrimarykey) GetBelongType() int32 {
	if x != nil {
		return x.BelongType
	}
	return 0
}

func (x *ConfigLicensePrimarykey) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *ConfigLicensePrimarykey) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type ConfigLicenseBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*ConfigLicensePrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ConfigLicenseBatchDeleteRequest) Reset() {
	*x = ConfigLicenseBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_license_model_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigLicenseBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLicenseBatchDeleteRequest) ProtoMessage() {}

func (x *ConfigLicenseBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_license_model_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLicenseBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*ConfigLicenseBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_config_license_model_gen_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigLicenseBatchDeleteRequest) GetKeys() []*ConfigLicensePrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_config_license_model_gen_proto protoreflect.FileDescriptor

var file_config_license_model_gen_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x04, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc1, 0x04, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x75, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x6f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb2, 0x01, 0x0a,
	0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x20, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_license_model_gen_proto_rawDescOnce sync.Once
	file_config_license_model_gen_proto_rawDescData = file_config_license_model_gen_proto_rawDesc
)

func file_config_license_model_gen_proto_rawDescGZIP() []byte {
	file_config_license_model_gen_proto_rawDescOnce.Do(func() {
		file_config_license_model_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_license_model_gen_proto_rawDescData)
	})
	return file_config_license_model_gen_proto_rawDescData
}

var file_config_license_model_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_config_license_model_gen_proto_goTypes = []interface{}{
	(*ConfigLicense)(nil),                    // 0: service.ConfigLicense
	(*ConfigLicenseFilter)(nil),              // 1: service.ConfigLicenseFilter
	(*ConfigLicenseListRequest)(nil),         // 2: service.ConfigLicenseListRequest
	(*ConfigLicenseResponse)(nil),            // 3: service.ConfigLicenseResponse
	(*ConfigLicenseUpdateFieldsRequest)(nil), // 4: service.ConfigLicenseUpdateFieldsRequest
	(*ConfigLicensePrimarykey)(nil),          // 5: service.ConfigLicensePrimarykey
	(*ConfigLicenseBatchDeleteRequest)(nil),  // 6: service.ConfigLicenseBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),            // 7: google.protobuf.Timestamp
}
var file_config_license_model_gen_proto_depIdxs = []int32{
	7,  // 0: service.ConfigLicense.timeout:type_name -> google.protobuf.Timestamp
	7,  // 1: service.ConfigLicense.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 2: service.ConfigLicense.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 3: service.ConfigLicense.deletedAt:type_name -> google.protobuf.Timestamp
	7,  // 4: service.ConfigLicenseFilter.timeout:type_name -> google.protobuf.Timestamp
	7,  // 5: service.ConfigLicenseFilter.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 6: service.ConfigLicenseFilter.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 7: service.ConfigLicenseFilter.deletedAt:type_name -> google.protobuf.Timestamp
	0,  // 8: service.ConfigLicenseListRequest.query:type_name -> service.ConfigLicense
	0,  // 9: service.ConfigLicenseResponse.data:type_name -> service.ConfigLicense
	0,  // 10: service.ConfigLicenseUpdateFieldsRequest.data:type_name -> service.ConfigLicense
	5,  // 11: service.ConfigLicenseBatchDeleteRequest.keys:type_name -> service.ConfigLicensePrimarykey
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_config_license_model_gen_proto_init() }
func file_config_license_model_gen_proto_init() {
	if File_config_license_model_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_license_model_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_license_model_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicenseFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_license_model_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicenseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_license_model_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_license_model_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicenseUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_license_model_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicensePrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_license_model_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigLicenseBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_license_model_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_license_model_gen_proto_goTypes,
		DependencyIndexes: file_config_license_model_gen_proto_depIdxs,
		MessageInfos:      file_config_license_model_gen_proto_msgTypes,
	}.Build()
	File_config_license_model_gen_proto = out.File
	file_config_license_model_gen_proto_rawDesc = nil
	file_config_license_model_gen_proto_goTypes = nil
	file_config_license_model_gen_proto_depIdxs = nil
}
