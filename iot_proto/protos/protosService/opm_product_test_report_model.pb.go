// Code generated by protoc,2022-06-07 09:10:32. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: opm_product_test_report_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type OpmProductTestReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:测试用例模板主键ID;comment:测试用例模板主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品品类编号;comment:产品品类编号;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"testType" gorm:"default:测试类型;comment:测试类型;size:10;"
	TestType int32 `protobuf:"varint,102,opt,name=testType,proto3" json:"testType,omitempty"`
	// @inject_tag: json:"isValid" gorm:"default:是否有效;comment:是否有效;size:50;"
	IsValid int32 `protobuf:"varint,103,opt,name=isValid,proto3" json:"isValid,omitempty"`
	// @inject_tag: json:"filePath" gorm:"default:测试用例模板文件;comment:测试用例模板文件;size:255;"
	FilePath string `protobuf:"bytes,104,opt,name=filePath,proto3" json:"filePath,omitempty"`
	// @inject_tag: json:"fileName" gorm:"default:文件名称;comment:文件名称;size:100;"
	FileName string `protobuf:"bytes,105,opt,name=fileName,proto3" json:"fileName,omitempty"`
	// @inject_tag: json:"fileSize" gorm:"default:文件大小;comment:文件大小;size:10;"
	FileSize int32 `protobuf:"varint,106,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	// @inject_tag: json:"fileKey" gorm:"default:文件MD5;comment:文件MD5;size:50;"
	FileKey string `protobuf:"bytes,107,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	// @inject_tag: json:"testOrigin" gorm:"default:测试来源（=1自测）;comment:测试来源（=1自测）;size:10;"
	TestOrigin int32 `protobuf:"varint,108,opt,name=testOrigin,proto3" json:"testOrigin,omitempty"`
	// @inject_tag: json:"version" gorm:"default:版本号;comment:版本号;size:20;"
	Version string `protobuf:"bytes,109,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"testResult" gorm:"default:测试结果（1通过 2不通过）;comment:测试结果（1通过 2不通过）;size:10;"
	TestResult int32 `protobuf:"varint,110,opt,name=testResult,proto3" json:"testResult,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,111,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,112,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *OpmProductTestReport) Reset() {
	*x = OpmProductTestReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReport) ProtoMessage() {}

func (x *OpmProductTestReport) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReport.ProtoReflect.Descriptor instead.
func (*OpmProductTestReport) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{0}
}

func (x *OpmProductTestReport) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmProductTestReport) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmProductTestReport) GetTestType() int32 {
	if x != nil {
		return x.TestType
	}
	return 0
}

func (x *OpmProductTestReport) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *OpmProductTestReport) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *OpmProductTestReport) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *OpmProductTestReport) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *OpmProductTestReport) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *OpmProductTestReport) GetTestOrigin() int32 {
	if x != nil {
		return x.TestOrigin
	}
	return 0
}

func (x *OpmProductTestReport) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpmProductTestReport) GetTestResult() int32 {
	if x != nil {
		return x.TestResult
	}
	return 0
}

func (x *OpmProductTestReport) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *OpmProductTestReport) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type OpmProductTestReportFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:测试用例模板主键ID;comment:测试用例模板主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"productId" gorm:"default:产品品类编号;comment:产品品类编号;size:19;"
	ProductId int64 `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	// @inject_tag: json:"testType" gorm:"default:测试类型;comment:测试类型;size:10;"
	TestType int32 `protobuf:"varint,102,opt,name=testType,proto3" json:"testType,omitempty"`
	// @inject_tag: json:"isValid" gorm:"default:是否有效;comment:是否有效;size:50;"
	IsValid int32 `protobuf:"varint,103,opt,name=isValid,proto3" json:"isValid,omitempty"`
	// @inject_tag: json:"filePath" gorm:"default:测试用例模板文件;comment:测试用例模板文件;size:255;"
	FilePath string `protobuf:"bytes,104,opt,name=filePath,proto3" json:"filePath,omitempty"`
	// @inject_tag: json:"fileName" gorm:"default:文件名称;comment:文件名称;size:100;"
	FileName string `protobuf:"bytes,105,opt,name=fileName,proto3" json:"fileName,omitempty"`
	// @inject_tag: json:"fileSize" gorm:"default:文件大小;comment:文件大小;size:10;"
	FileSize int32 `protobuf:"varint,106,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	// @inject_tag: json:"fileKey" gorm:"default:文件MD5;comment:文件MD5;size:50;"
	FileKey string `protobuf:"bytes,107,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	// @inject_tag: json:"testOrigin" gorm:"default:测试来源（=1自测）;comment:测试来源（=1自测）;size:10;"
	TestOrigin int32 `protobuf:"varint,108,opt,name=testOrigin,proto3" json:"testOrigin,omitempty"`
	// @inject_tag: json:"version" gorm:"default:版本号;comment:版本号;size:20;"
	Version string `protobuf:"bytes,109,opt,name=version,proto3" json:"version,omitempty"`
	// @inject_tag: json:"testResult" gorm:"default:测试结果（1通过 2不通过）;comment:测试结果（1通过 2不通过）;size:10;"
	TestResult int32 `protobuf:"varint,110,opt,name=testResult,proto3" json:"testResult,omitempty"`
	// @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
	CreatedBy int64 `protobuf:"varint,111,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
}

func (x *OpmProductTestReportFilter) Reset() {
	*x = OpmProductTestReportFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReportFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReportFilter) ProtoMessage() {}

func (x *OpmProductTestReportFilter) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReportFilter.ProtoReflect.Descriptor instead.
func (*OpmProductTestReportFilter) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{1}
}

func (x *OpmProductTestReportFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetTestType() int32 {
	if x != nil {
		return x.TestType
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *OpmProductTestReportFilter) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *OpmProductTestReportFilter) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *OpmProductTestReportFilter) GetTestOrigin() int32 {
	if x != nil {
		return x.TestOrigin
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpmProductTestReportFilter) GetTestResult() int32 {
	if x != nil {
		return x.TestResult
	}
	return 0
}

func (x *OpmProductTestReportFilter) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

type OpmProductTestReportListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *OpmProductTestReport `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                 `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                 `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string                `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string                `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string                `protobuf:"bytes,106,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *OpmProductTestReportListRequest) Reset() {
	*x = OpmProductTestReportListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReportListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReportListRequest) ProtoMessage() {}

func (x *OpmProductTestReportListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReportListRequest.ProtoReflect.Descriptor instead.
func (*OpmProductTestReportListRequest) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{2}
}

func (x *OpmProductTestReportListRequest) GetQuery() *OpmProductTestReport {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *OpmProductTestReportListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OpmProductTestReportListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OpmProductTestReportListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OpmProductTestReportListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *OpmProductTestReportListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type OpmProductTestReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                   `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OpmProductTestReport `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmProductTestReportResponse) Reset() {
	*x = OpmProductTestReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReportResponse) ProtoMessage() {}

func (x *OpmProductTestReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReportResponse.ProtoReflect.Descriptor instead.
func (*OpmProductTestReportResponse) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{3}
}

func (x *OpmProductTestReportResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpmProductTestReportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpmProductTestReportResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpmProductTestReportResponse) GetData() []*OpmProductTestReport {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpmProductTestReportUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string              `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *OpmProductTestReport `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpmProductTestReportUpdateFieldsRequest) Reset() {
	*x = OpmProductTestReportUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReportUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReportUpdateFieldsRequest) ProtoMessage() {}

func (x *OpmProductTestReportUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReportUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*OpmProductTestReportUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{4}
}

func (x *OpmProductTestReportUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *OpmProductTestReportUpdateFieldsRequest) GetData() *OpmProductTestReport {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type OpmProductTestReportPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpmProductTestReportPrimarykey) Reset() {
	*x = OpmProductTestReportPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReportPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReportPrimarykey) ProtoMessage() {}

func (x *OpmProductTestReportPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReportPrimarykey.ProtoReflect.Descriptor instead.
func (*OpmProductTestReportPrimarykey) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{5}
}

func (x *OpmProductTestReportPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpmProductTestReportBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*OpmProductTestReportPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *OpmProductTestReportBatchDeleteRequest) Reset() {
	*x = OpmProductTestReportBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opm_product_test_report_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpmProductTestReportBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpmProductTestReportBatchDeleteRequest) ProtoMessage() {}

func (x *OpmProductTestReportBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opm_product_test_report_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpmProductTestReportBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*OpmProductTestReportBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_opm_product_test_report_model_proto_rawDescGZIP(), []int{6}
}

func (x *OpmProductTestReportBatchDeleteRequest) GetKeys() []*OpmProductTestReportPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_opm_product_test_report_model_proto protoreflect.FileDescriptor

var file_opm_product_test_report_model_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6f, 0x70, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9a, 0x03, 0x0a, 0x14, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65,
	0x73, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe6, 0x02, 0x0a,
	0x1a, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xde, 0x01, 0x0a, 0x1f, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x1c, 0x4f, 0x70, 0x6d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x74,
	0x0a, 0x27, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x1e, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x26, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x6d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x11, 0x5a,
	0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opm_product_test_report_model_proto_rawDescOnce sync.Once
	file_opm_product_test_report_model_proto_rawDescData = file_opm_product_test_report_model_proto_rawDesc
)

func file_opm_product_test_report_model_proto_rawDescGZIP() []byte {
	file_opm_product_test_report_model_proto_rawDescOnce.Do(func() {
		file_opm_product_test_report_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_opm_product_test_report_model_proto_rawDescData)
	})
	return file_opm_product_test_report_model_proto_rawDescData
}

var file_opm_product_test_report_model_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_opm_product_test_report_model_proto_goTypes = []interface{}{
	(*OpmProductTestReport)(nil),                    // 0: service.OpmProductTestReport
	(*OpmProductTestReportFilter)(nil),              // 1: service.OpmProductTestReportFilter
	(*OpmProductTestReportListRequest)(nil),         // 2: service.OpmProductTestReportListRequest
	(*OpmProductTestReportResponse)(nil),            // 3: service.OpmProductTestReportResponse
	(*OpmProductTestReportUpdateFieldsRequest)(nil), // 4: service.OpmProductTestReportUpdateFieldsRequest
	(*OpmProductTestReportPrimarykey)(nil),          // 5: service.OpmProductTestReportPrimarykey
	(*OpmProductTestReportBatchDeleteRequest)(nil),  // 6: service.OpmProductTestReportBatchDeleteRequest
	(*timestamppb.Timestamp)(nil),                   // 7: google.protobuf.Timestamp
}
var file_opm_product_test_report_model_proto_depIdxs = []int32{
	7, // 0: service.OpmProductTestReport.createdAt:type_name -> google.protobuf.Timestamp
	0, // 1: service.OpmProductTestReportListRequest.query:type_name -> service.OpmProductTestReport
	0, // 2: service.OpmProductTestReportResponse.data:type_name -> service.OpmProductTestReport
	0, // 3: service.OpmProductTestReportUpdateFieldsRequest.data:type_name -> service.OpmProductTestReport
	5, // 4: service.OpmProductTestReportBatchDeleteRequest.keys:type_name -> service.OpmProductTestReportPrimarykey
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_opm_product_test_report_model_proto_init() }
func file_opm_product_test_report_model_proto_init() {
	if File_opm_product_test_report_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opm_product_test_report_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_product_test_report_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReportFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_product_test_report_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReportListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_product_test_report_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_product_test_report_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReportUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_product_test_report_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReportPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opm_product_test_report_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpmProductTestReportBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opm_product_test_report_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opm_product_test_report_model_proto_goTypes,
		DependencyIndexes: file_opm_product_test_report_model_proto_depIdxs,
		MessageInfos:      file_opm_product_test_report_model_proto_msgTypes,
	}.Build()
	File_opm_product_test_report_model_proto = out.File
	file_opm_product_test_report_model_proto_rawDesc = nil
	file_opm_product_test_report_model_proto_goTypes = nil
	file_opm_product_test_report_model_proto_depIdxs = nil
}
