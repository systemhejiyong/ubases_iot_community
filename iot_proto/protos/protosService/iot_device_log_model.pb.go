// Code generated by protoc,2022-04-21 19:06:38. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: iot_device_log_model.proto

package protosService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//来源于数据表
type IotDeviceLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:16;"
	Did string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"reportTime" gorm:"default:产品ID(t_cloud_product.id);comment:产品ID(t_cloud_product.id);"
	ReportTime *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	// @inject_tag: json:"eventType" gorm:"default:在线状态（0 在线 1 不在线）;comment:在线状态（0 在线 1 不在线）;size:10;"
	EventType int32 `protobuf:"varint,103,opt,name=eventType,proto3" json:"eventType,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:设备名称;comment:设备名称;size:50;"
	FuncKey string `protobuf:"bytes,104,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:设备性质;comment:设备性质;size:100;"
	FuncValue string `protobuf:"bytes,105,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"funcDesc" gorm:"default:设备SN;comment:设备SN;size:100;"
	FuncDesc string `protobuf:"bytes,106,opt,name=funcDesc,proto3" json:"funcDesc,omitempty"`
	// @inject_tag: json:"originType" gorm:"default:批次ID(t_cloud_device_batch.id);comment:批次ID(t_cloud_device_batch.id);size:10;"
	OriginType int32 `protobuf:"varint,107,opt,name=originType,proto3" json:"originType,omitempty"`
	// @inject_tag: json:"originDetail" gorm:"default:设备组ID（t_cloud_device_group.id）;comment:设备组ID（t_cloud_device_group.id）;size:255;"
	OriginDetail string `protobuf:"bytes,108,opt,name=originDetail,proto3" json:"originDetail,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *IotDeviceLog) Reset() {
	*x = IotDeviceLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLog) ProtoMessage() {}

func (x *IotDeviceLog) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLog.ProtoReflect.Descriptor instead.
func (*IotDeviceLog) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{0}
}

func (x *IotDeviceLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceLog) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceLog) GetReportTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportTime
	}
	return nil
}

func (x *IotDeviceLog) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *IotDeviceLog) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceLog) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceLog) GetFuncDesc() string {
	if x != nil {
		return x.FuncDesc
	}
	return ""
}

func (x *IotDeviceLog) GetOriginType() int32 {
	if x != nil {
		return x.OriginType
	}
	return 0
}

func (x *IotDeviceLog) GetOriginDetail() string {
	if x != nil {
		return x.OriginDetail
	}
	return ""
}

func (x *IotDeviceLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type IotDeviceLogFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"did" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:16;"
	Did string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	// @inject_tag: json:"reportTime" gorm:"default:产品ID(t_cloud_product.id);comment:产品ID(t_cloud_product.id);"
	ReportTime *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	// @inject_tag: json:"eventType" gorm:"default:在线状态（0 在线 1 不在线）;comment:在线状态（0 在线 1 不在线）;size:10;"
	EventType int32 `protobuf:"varint,103,opt,name=eventType,proto3" json:"eventType,omitempty"`
	// @inject_tag: json:"funcKey" gorm:"default:设备名称;comment:设备名称;size:50;"
	FuncKey string `protobuf:"bytes,104,opt,name=funcKey,proto3" json:"funcKey,omitempty"`
	// @inject_tag: json:"funcValue" gorm:"default:设备性质;comment:设备性质;size:100;"
	FuncValue string `protobuf:"bytes,105,opt,name=funcValue,proto3" json:"funcValue,omitempty"`
	// @inject_tag: json:"funcDesc" gorm:"default:设备SN;comment:设备SN;size:100;"
	FuncDesc string `protobuf:"bytes,106,opt,name=funcDesc,proto3" json:"funcDesc,omitempty"`
	// @inject_tag: json:"originType" gorm:"default:批次ID(t_cloud_device_batch.id);comment:批次ID(t_cloud_device_batch.id);size:10;"
	OriginType int32 `protobuf:"varint,107,opt,name=originType,proto3" json:"originType,omitempty"`
	// @inject_tag: json:"originDetail" gorm:"default:设备组ID（t_cloud_device_group.id）;comment:设备组ID（t_cloud_device_group.id）;size:255;"
	OriginDetail string `protobuf:"bytes,108,opt,name=originDetail,proto3" json:"originDetail,omitempty"`
	// @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,109,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *IotDeviceLogFilter) Reset() {
	*x = IotDeviceLogFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogFilter) ProtoMessage() {}

func (x *IotDeviceLogFilter) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogFilter.ProtoReflect.Descriptor instead.
func (*IotDeviceLogFilter) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{1}
}

func (x *IotDeviceLogFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IotDeviceLogFilter) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceLogFilter) GetReportTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportTime
	}
	return nil
}

func (x *IotDeviceLogFilter) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *IotDeviceLogFilter) GetFuncKey() string {
	if x != nil {
		return x.FuncKey
	}
	return ""
}

func (x *IotDeviceLogFilter) GetFuncValue() string {
	if x != nil {
		return x.FuncValue
	}
	return ""
}

func (x *IotDeviceLogFilter) GetFuncDesc() string {
	if x != nil {
		return x.FuncDesc
	}
	return ""
}

func (x *IotDeviceLogFilter) GetOriginType() int32 {
	if x != nil {
		return x.OriginType
	}
	return 0
}

func (x *IotDeviceLogFilter) GetOriginDetail() string {
	if x != nil {
		return x.OriginDetail
	}
	return ""
}

func (x *IotDeviceLogFilter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type IotDeviceLogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *IotDeviceLogQueryObj `protobuf:"bytes,101,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64                 `protobuf:"varint,102,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                 `protobuf:"varint,103,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string                `protobuf:"bytes,104,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string                `protobuf:"bytes,105,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
}

func (x *IotDeviceLogListRequest) Reset() {
	*x = IotDeviceLogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogListRequest) ProtoMessage() {}

func (x *IotDeviceLogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogListRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceLogListRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{2}
}

func (x *IotDeviceLogListRequest) GetQuery() *IotDeviceLogQueryObj {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *IotDeviceLogListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IotDeviceLogListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IotDeviceLogListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *IotDeviceLogListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

type IotDeviceLogQueryObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did         string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	EventType   string `protobuf:"bytes,102,opt,name=eventType,proto3" json:"eventType,omitempty"`
	EventKey    string `protobuf:"bytes,103,opt,name=eventKey,proto3" json:"eventKey,omitempty"`
	Origin      string `protobuf:"bytes,104,opt,name=origin,proto3" json:"origin,omitempty"`
	EndTime     int64  `protobuf:"varint,105,opt,name=endTime,proto3" json:"endTime,omitempty"`
	StartTime   int64  `protobuf:"varint,106,opt,name=startTime,proto3" json:"startTime,omitempty"`
	IsOnlyCount int64  `protobuf:"varint,107,opt,name=isOnlyCount,proto3" json:"isOnlyCount,omitempty"` //是否仅仅返回统计数量
}

func (x *IotDeviceLogQueryObj) Reset() {
	*x = IotDeviceLogQueryObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogQueryObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogQueryObj) ProtoMessage() {}

func (x *IotDeviceLogQueryObj) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogQueryObj.ProtoReflect.Descriptor instead.
func (*IotDeviceLogQueryObj) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{3}
}

func (x *IotDeviceLogQueryObj) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *IotDeviceLogQueryObj) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *IotDeviceLogQueryObj) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *IotDeviceLogQueryObj) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *IotDeviceLogQueryObj) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *IotDeviceLogQueryObj) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *IotDeviceLogQueryObj) GetIsOnlyCount() int64 {
	if x != nil {
		return x.IsOnlyCount
	}
	return 0
}

type IotDeviceLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64           `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*IotDeviceLog `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceLogResponse) Reset() {
	*x = IotDeviceLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogResponse) ProtoMessage() {}

func (x *IotDeviceLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceLogResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{4}
}

func (x *IotDeviceLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceLogResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceLogResponse) GetData() []*IotDeviceLog {
	if x != nil {
		return x.Data
	}
	return nil
}

type IotDeviceLogUpdateFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string      `protobuf:"bytes,101,rep,name=fields,proto3" json:"fields,omitempty"`
	Data   *IotDeviceLog `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IotDeviceLogUpdateFieldsRequest) Reset() {
	*x = IotDeviceLogUpdateFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogUpdateFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogUpdateFieldsRequest) ProtoMessage() {}

func (x *IotDeviceLogUpdateFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogUpdateFieldsRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceLogUpdateFieldsRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{5}
}

func (x *IotDeviceLogUpdateFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *IotDeviceLogUpdateFieldsRequest) GetData() *IotDeviceLog {
	if x != nil {
		return x.Data
	}
	return nil
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
type IotDeviceLogPrimarykey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IotDeviceLogPrimarykey) Reset() {
	*x = IotDeviceLogPrimarykey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogPrimarykey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogPrimarykey) ProtoMessage() {}

func (x *IotDeviceLogPrimarykey) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogPrimarykey.ProtoReflect.Descriptor instead.
func (*IotDeviceLogPrimarykey) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{6}
}

func (x *IotDeviceLogPrimarykey) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IotDeviceLogBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*IotDeviceLogPrimarykey `protobuf:"bytes,101,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *IotDeviceLogBatchDeleteRequest) Reset() {
	*x = IotDeviceLogBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogBatchDeleteRequest) ProtoMessage() {}

func (x *IotDeviceLogBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*IotDeviceLogBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{7}
}

func (x *IotDeviceLogBatchDeleteRequest) GetKeys() []*IotDeviceLogPrimarykey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type IotDeviceLogDExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total    int64  `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	FileName string `protobuf:"bytes,104,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FilePath string `protobuf:"bytes,105,opt,name=filePath,proto3" json:"filePath,omitempty"`
}

func (x *IotDeviceLogDExportResponse) Reset() {
	*x = IotDeviceLogDExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotDeviceLogDExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotDeviceLogDExportResponse) ProtoMessage() {}

func (x *IotDeviceLogDExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotDeviceLogDExportResponse.ProtoReflect.Descriptor instead.
func (*IotDeviceLogDExportResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{8}
}

func (x *IotDeviceLogDExportResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IotDeviceLogDExportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IotDeviceLogDExportResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IotDeviceLogDExportResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IotDeviceLogDExportResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type CreateProductLogTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   int64             `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductKey  string            `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`
	ThingModels map[string]string `protobuf:"bytes,103,rep,name=thingModels,proto3" json:"thingModels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateProductLogTableResponse) Reset() {
	*x = CreateProductLogTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductLogTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductLogTableResponse) ProtoMessage() {}

func (x *CreateProductLogTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductLogTableResponse.ProtoReflect.Descriptor instead.
func (*CreateProductLogTableResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{9}
}

func (x *CreateProductLogTableResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateProductLogTableResponse) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *CreateProductLogTableResponse) GetThingModels() map[string]string {
	if x != nil {
		return x.ThingModels
	}
	return nil
}

type ProductLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  int64   `protobuf:"varint,101,opt,name=productId,proto3" json:"productId,omitempty"`        //产品Id
	ProductKey string  `protobuf:"bytes,102,opt,name=productKey,proto3" json:"productKey,omitempty"`       //产品Key
	DeviceId   string  `protobuf:"bytes,103,opt,name=deviceId,proto3" json:"deviceId,omitempty"`           //设备编号
	TimeRange  []int64 `protobuf:"varint,104,rep,packed,name=timeRange,proto3" json:"timeRange,omitempty"` //查询事件范围
	Identifier string  `protobuf:"bytes,105,opt,name=identifier,proto3" json:"identifier,omitempty"`       //事件名称、事件标识符
	Ns         string  `protobuf:"bytes,106,opt,name=ns,proto3" json:"ns,omitempty"`                       //协议命名空间
	Name       string  `protobuf:"bytes,107,opt,name=name,proto3" json:"name,omitempty"`                   //协议名称
	EventType  int32   `protobuf:"varint,108,opt,name=eventType,proto3" json:"eventType,omitempty"`        //设备事件
	Origin     int32   `protobuf:"varint,109,opt,name=origin,proto3" json:"origin,omitempty"`              //来源
	Timezone   string  `protobuf:"bytes,110,opt,name=timezone,proto3" json:"timezone,omitempty"`           //客户时区
}

func (x *ProductLogRequest) Reset() {
	*x = ProductLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLogRequest) ProtoMessage() {}

func (x *ProductLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLogRequest.ProtoReflect.Descriptor instead.
func (*ProductLogRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{10}
}

func (x *ProductLogRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductLogRequest) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *ProductLogRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ProductLogRequest) GetTimeRange() []int64 {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *ProductLogRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ProductLogRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ProductLogRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductLogRequest) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *ProductLogRequest) GetOrigin() int32 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *ProductLogRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type ProductLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	List    []*ProductEventLogItem `protobuf:"bytes,103,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductLogResponse) Reset() {
	*x = ProductLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLogResponse) ProtoMessage() {}

func (x *ProductLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLogResponse.ProtoReflect.Descriptor instead.
func (*ProductLogResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{11}
}

func (x *ProductLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProductLogResponse) GetList() []*ProductEventLogItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductEventLogItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date         string                       `protobuf:"bytes,101,opt,name=date,proto3" json:"date,omitempty"`
	Time         string                       `protobuf:"bytes,102,opt,name=time,proto3" json:"time,omitempty"`
	Properties   []*ProductLogEventProperties `protobuf:"bytes,103,rep,name=properties,proto3" json:"properties,omitempty"`
	MessageId    string                       `protobuf:"bytes,104,opt,name=messageId,proto3" json:"messageId,omitempty"` //消息编号
	Timezone     string                       `protobuf:"bytes,105,opt,name=timezone,proto3" json:"timezone,omitempty"`   //时区
	FullTime     int64                        `protobuf:"varint,106,opt,name=fullTime,proto3" json:"fullTime,omitempty"`
	From         string                       `protobuf:"bytes,107,opt,name=from,proto3" json:"from,omitempty"` //来源
	Name         string                       `protobuf:"bytes,108,opt,name=name,proto3" json:"name,omitempty"` //协议头名称
	OnlineStatus string                       `protobuf:"bytes,109,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`
}

func (x *ProductEventLogItem) Reset() {
	*x = ProductEventLogItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEventLogItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEventLogItem) ProtoMessage() {}

func (x *ProductEventLogItem) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEventLogItem.ProtoReflect.Descriptor instead.
func (*ProductEventLogItem) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{12}
}

func (x *ProductEventLogItem) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ProductEventLogItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ProductEventLogItem) GetProperties() []*ProductLogEventProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ProductEventLogItem) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ProductEventLogItem) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *ProductEventLogItem) GetFullTime() int64 {
	if x != nil {
		return x.FullTime
	}
	return 0
}

func (x *ProductEventLogItem) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ProductEventLogItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductEventLogItem) GetOnlineStatus() string {
	if x != nil {
		return x.OnlineStatus
	}
	return ""
}

type ProductLogEventProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dpid       string `protobuf:"bytes,101,opt,name=dpid,proto3" json:"dpid,omitempty"`
	Value      string `protobuf:"bytes,102,opt,name=value,proto3" json:"value,omitempty"`
	Identifier string `protobuf:"bytes,103,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Name       string `protobuf:"bytes,104,opt,name=name,proto3" json:"name,omitempty"`
	Did        string `protobuf:"bytes,105,opt,name=did,proto3" json:"did,omitempty"`
	EventType  string `protobuf:"bytes,106,opt,name=eventType,proto3" json:"eventType,omitempty"`
}

func (x *ProductLogEventProperties) Reset() {
	*x = ProductLogEventProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLogEventProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLogEventProperties) ProtoMessage() {}

func (x *ProductLogEventProperties) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLogEventProperties.ProtoReflect.Descriptor instead.
func (*ProductLogEventProperties) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{13}
}

func (x *ProductLogEventProperties) GetDpid() string {
	if x != nil {
		return x.Dpid
	}
	return ""
}

func (x *ProductLogEventProperties) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProductLogEventProperties) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ProductLogEventProperties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductLogEventProperties) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *ProductLogEventProperties) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type ProductLogRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Records []*ProductLogRecord `protobuf:"bytes,103,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ProductLogRecordResponse) Reset() {
	*x = ProductLogRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLogRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLogRecordResponse) ProtoMessage() {}

func (x *ProductLogRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLogRecordResponse.ProtoReflect.Descriptor instead.
func (*ProductLogRecordResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{14}
}

func (x *ProductLogRecordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductLogRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProductLogRecordResponse) GetRecords() []*ProductLogRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type ProductLogRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId        string                       `protobuf:"bytes,100,opt,name=msgId,proto3" json:"msgId,omitempty"`
	Did          string                       `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	ProductKey   string                       `protobuf:"bytes,102,opt,name=product_key,json=productKey,proto3" json:"product_key,omitempty"`
	Ver          string                       `protobuf:"bytes,103,opt,name=ver,proto3" json:"ver,omitempty"`
	Ns           string                       `protobuf:"bytes,104,opt,name=ns,proto3" json:"ns,omitempty"`
	EventType    string                       `protobuf:"bytes,105,opt,name=eventType,proto3" json:"eventType,omitempty"`
	StartTs      int64                        `protobuf:"varint,106,opt,name=startTs,proto3" json:"startTs,omitempty"`
	CreatedAt    int64                        `protobuf:"varint,107,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Origin       string                       `protobuf:"bytes,108,opt,name=origin,proto3" json:"origin,omitempty"`
	Properties   []*ProductLogEventProperties `protobuf:"bytes,109,rep,name=properties,proto3" json:"properties,omitempty"`
	OnlineStatus string                       `protobuf:"bytes,110,opt,name=onlineStatus,proto3" json:"onlineStatus,omitempty"`
	From         string                       `protobuf:"bytes,111,opt,name=from,proto3" json:"from,omitempty"` //来源
}

func (x *ProductLogRecord) Reset() {
	*x = ProductLogRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLogRecord) ProtoMessage() {}

func (x *ProductLogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLogRecord.ProtoReflect.Descriptor instead.
func (*ProductLogRecord) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{15}
}

func (x *ProductLogRecord) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *ProductLogRecord) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *ProductLogRecord) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *ProductLogRecord) GetVer() string {
	if x != nil {
		return x.Ver
	}
	return ""
}

func (x *ProductLogRecord) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ProductLogRecord) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ProductLogRecord) GetStartTs() int64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *ProductLogRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProductLogRecord) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ProductLogRecord) GetProperties() []*ProductLogEventProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ProductLogRecord) GetOnlineStatus() string {
	if x != nil {
		return x.OnlineStatus
	}
	return ""
}

func (x *ProductLogRecord) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

type DeviceOperationFailLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId    string `protobuf:"bytes,101,opt,name=deviceId,proto3" json:"deviceId,omitempty"`       //设备Id
	Type        int32  `protobuf:"varint,102,opt,name=type,proto3" json:"type,omitempty"`              //类型 1-配网 2-OTA升级
	Content     string `protobuf:"bytes,103,opt,name=content,proto3" json:"content,omitempty"`         //上报内容
	UserId      string `protobuf:"bytes,104,opt,name=userId,proto3" json:"userId,omitempty"`           //用户Id
	UserAccount string `protobuf:"bytes,105,opt,name=userAccount,proto3" json:"userAccount,omitempty"` //用户账号
	TenantId    string `protobuf:"bytes,106,opt,name=tenantId,proto3" json:"tenantId,omitempty"`       //租户编号
	AppKey      string `protobuf:"bytes,107,opt,name=appKey,proto3" json:"appKey,omitempty"`           //APP Key
}

func (x *DeviceOperationFailLogRequest) Reset() {
	*x = DeviceOperationFailLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOperationFailLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOperationFailLogRequest) ProtoMessage() {}

func (x *DeviceOperationFailLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOperationFailLogRequest.ProtoReflect.Descriptor instead.
func (*DeviceOperationFailLogRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{16}
}

func (x *DeviceOperationFailLogRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceOperationFailLogRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DeviceOperationFailLogRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DeviceOperationFailLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeviceOperationFailLogRequest) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *DeviceOperationFailLogRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceOperationFailLogRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

type DeviceOperationFailLogRequestEx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId     string `protobuf:"bytes,101,opt,name=deviceId,proto3" json:"deviceId,omitempty"`         //设备Id
	Type         int32  `protobuf:"varint,102,opt,name=type,proto3" json:"type,omitempty"`                //类型 1-配网 2-OTA升级
	Content      string `protobuf:"bytes,103,opt,name=content,proto3" json:"content,omitempty"`           //上报内容
	UserId       string `protobuf:"bytes,104,opt,name=userId,proto3" json:"userId,omitempty"`             //用户Id
	UserAccount  string `protobuf:"bytes,105,opt,name=userAccount,proto3" json:"userAccount,omitempty"`   //用户账号
	TenantId     string `protobuf:"bytes,106,opt,name=tenantId,proto3" json:"tenantId,omitempty"`         //租户编号
	AppKey       string `protobuf:"bytes,107,opt,name=appKey,proto3" json:"appKey,omitempty"`             //APP Key
	ProductKey   string `protobuf:"bytes,108,opt,name=productKey,proto3" json:"productKey,omitempty"`     //产品key
	FailTime     int64  `protobuf:"varint,109,opt,name=failTime,proto3" json:"failTime,omitempty"`        //时间,时间戳
	Code         int32  `protobuf:"varint,110,opt,name=code,proto3" json:"code,omitempty"`                //错误码
	Timezone     string `protobuf:"bytes,111,opt,name=timezone,proto3" json:"timezone,omitempty"`         //用户app 时区
	Region       string `protobuf:"bytes,112,opt,name=region,proto3" json:"region,omitempty"`             //用户app 登录的区域，区域id
	Lang         string `protobuf:"bytes,113,opt,name=lang,proto3" json:"lang,omitempty"`                 //用户app app语言
	Sysinfo      string `protobuf:"bytes,114,opt,name=sysinfo,proto3" json:"sysinfo,omitempty"`           //用户手机系统信息, Android 12,Xiaomi22081212C,1.01
	UploadFrom   string `protobuf:"bytes,115,opt,name=uploadFrom,proto3" json:"uploadFrom,omitempty"`     //上报端 app\device\broker
	UploadMethod string `protobuf:"bytes,116,opt,name=uploadMethod,proto3" json:"uploadMethod,omitempty"` //上报方式 http\mqtt
}

func (x *DeviceOperationFailLogRequestEx) Reset() {
	*x = DeviceOperationFailLogRequestEx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOperationFailLogRequestEx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOperationFailLogRequestEx) ProtoMessage() {}

func (x *DeviceOperationFailLogRequestEx) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOperationFailLogRequestEx.ProtoReflect.Descriptor instead.
func (*DeviceOperationFailLogRequestEx) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{17}
}

func (x *DeviceOperationFailLogRequestEx) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DeviceOperationFailLogRequestEx) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetFailTime() int64 {
	if x != nil {
		return x.FailTime
	}
	return 0
}

func (x *DeviceOperationFailLogRequestEx) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeviceOperationFailLogRequestEx) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetSysinfo() string {
	if x != nil {
		return x.Sysinfo
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetUploadFrom() string {
	if x != nil {
		return x.UploadFrom
	}
	return ""
}

func (x *DeviceOperationFailLogRequestEx) GetUploadMethod() string {
	if x != nil {
		return x.UploadMethod
	}
	return ""
}

type OperationFailLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DeviceOperationFailLogRequestEx `protobuf:"bytes,101,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OperationFailLogRequest) Reset() {
	*x = OperationFailLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationFailLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationFailLogRequest) ProtoMessage() {}

func (x *OperationFailLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationFailLogRequest.ProtoReflect.Descriptor instead.
func (*OperationFailLogRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{18}
}

func (x *OperationFailLogRequest) GetData() []*DeviceOperationFailLogRequestEx {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeviceOperationFailLogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64                           `protobuf:"varint,101,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                           `protobuf:"varint,102,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey  string                          `protobuf:"bytes,103,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	OrderDesc string                          `protobuf:"bytes,104,opt,name=orderDesc,proto3" json:"orderDesc,omitempty"`
	SearchKey string                          `protobuf:"bytes,105,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Query     *DeviceOperationFailLogQueryObj `protobuf:"bytes,106,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *DeviceOperationFailLogListRequest) Reset() {
	*x = DeviceOperationFailLogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOperationFailLogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOperationFailLogListRequest) ProtoMessage() {}

func (x *DeviceOperationFailLogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOperationFailLogListRequest.ProtoReflect.Descriptor instead.
func (*DeviceOperationFailLogListRequest) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{19}
}

func (x *DeviceOperationFailLogListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DeviceOperationFailLogListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeviceOperationFailLogListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *DeviceOperationFailLogListRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *DeviceOperationFailLogListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *DeviceOperationFailLogListRequest) GetQuery() *DeviceOperationFailLogQueryObj {
	if x != nil {
		return x.Query
	}
	return nil
}

type DeviceOperationFailLogQueryObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did          string `protobuf:"bytes,101,opt,name=did,proto3" json:"did,omitempty"`
	Code         string `protobuf:"bytes,102,opt,name=code,proto3" json:"code,omitempty"`
	ProductKey   string `protobuf:"bytes,103,opt,name=productKey,proto3" json:"productKey,omitempty"`
	LastDay      int32  `protobuf:"varint,104,opt,name=lastDay,proto3" json:"lastDay,omitempty"` //0,今天，7近7天，30近30天，-1所有
	EndTime      int64  `protobuf:"varint,105,opt,name=endTime,proto3" json:"endTime,omitempty"`
	StartTime    int64  `protobuf:"varint,106,opt,name=startTime,proto3" json:"startTime,omitempty"`
	UploadFrom   string `protobuf:"bytes,107,opt,name=UploadFrom,proto3" json:"UploadFrom,omitempty"`     //上报端
	UploadMethod string `protobuf:"bytes,108,opt,name=UploadMethod,proto3" json:"UploadMethod,omitempty"` //上报方法
}

func (x *DeviceOperationFailLogQueryObj) Reset() {
	*x = DeviceOperationFailLogQueryObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOperationFailLogQueryObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOperationFailLogQueryObj) ProtoMessage() {}

func (x *DeviceOperationFailLogQueryObj) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOperationFailLogQueryObj.ProtoReflect.Descriptor instead.
func (*DeviceOperationFailLogQueryObj) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{20}
}

func (x *DeviceOperationFailLogQueryObj) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *DeviceOperationFailLogQueryObj) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeviceOperationFailLogQueryObj) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *DeviceOperationFailLogQueryObj) GetLastDay() int32 {
	if x != nil {
		return x.LastDay
	}
	return 0
}

func (x *DeviceOperationFailLogQueryObj) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DeviceOperationFailLogQueryObj) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DeviceOperationFailLogQueryObj) GetUploadFrom() string {
	if x != nil {
		return x.UploadFrom
	}
	return ""
}

func (x *DeviceOperationFailLogQueryObj) GetUploadMethod() string {
	if x != nil {
		return x.UploadMethod
	}
	return ""
}

type DeviceOperationFailLogListResponseObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId     string `protobuf:"bytes,101,opt,name=deviceId,proto3" json:"deviceId,omitempty"`       //设备Id
	Type         int32  `protobuf:"varint,102,opt,name=type,proto3" json:"type,omitempty"`              //类型 1-配网 2-OTA升级
	Content      string `protobuf:"bytes,103,opt,name=content,proto3" json:"content,omitempty"`         //上报内容
	UserId       string `protobuf:"bytes,104,opt,name=userId,proto3" json:"userId,omitempty"`           //用户Id
	UserAccount  string `protobuf:"bytes,105,opt,name=userAccount,proto3" json:"userAccount,omitempty"` //用户账号
	TenantId     string `protobuf:"bytes,106,opt,name=tenantId,proto3" json:"tenantId,omitempty"`       //租户编号
	AppKey       string `protobuf:"bytes,107,opt,name=appKey,proto3" json:"appKey,omitempty"`           //APP Key
	ProductKey   string `protobuf:"bytes,108,opt,name=productKey,proto3" json:"productKey,omitempty"`   //产品key
	FailTime     int64  `protobuf:"varint,109,opt,name=failTime,proto3" json:"failTime,omitempty"`      //时间,时间戳
	Code         int32  `protobuf:"varint,110,opt,name=code,proto3" json:"code,omitempty"`              //错误码
	Timezone     string `protobuf:"bytes,111,opt,name=timezone,proto3" json:"timezone,omitempty"`       //用户app 时区
	Region       string `protobuf:"bytes,112,opt,name=region,proto3" json:"region,omitempty"`           //用户app 登录的区域，区域id
	Lang         string `protobuf:"bytes,113,opt,name=lang,proto3" json:"lang,omitempty"`               //用户app app语言
	Os           string `protobuf:"bytes,114,opt,name=os,proto3" json:"os,omitempty"`                   //操作系统
	Model        string `protobuf:"bytes,115,opt,name=model,proto3" json:"model,omitempty"`             //手机型号
	AppVersion   string `protobuf:"bytes,116,opt,name=appVersion,proto3" json:"appVersion,omitempty"`   //app版本
	Desc         string `protobuf:"bytes,117,opt,name=desc,proto3" json:"desc,omitempty"`
	UploadFrom   string `protobuf:"bytes,118,opt,name=uploadFrom,proto3" json:"uploadFrom,omitempty"`     //上报端 app\device\broker
	UploadMethod string `protobuf:"bytes,119,opt,name=uploadMethod,proto3" json:"uploadMethod,omitempty"` //上报方式 http\mqtt
}

func (x *DeviceOperationFailLogListResponseObj) Reset() {
	*x = DeviceOperationFailLogListResponseObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOperationFailLogListResponseObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOperationFailLogListResponseObj) ProtoMessage() {}

func (x *DeviceOperationFailLogListResponseObj) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOperationFailLogListResponseObj.ProtoReflect.Descriptor instead.
func (*DeviceOperationFailLogListResponseObj) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{21}
}

func (x *DeviceOperationFailLogListResponseObj) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DeviceOperationFailLogListResponseObj) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetFailTime() int64 {
	if x != nil {
		return x.FailTime
	}
	return 0
}

func (x *DeviceOperationFailLogListResponseObj) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeviceOperationFailLogListResponseObj) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetUploadFrom() string {
	if x != nil {
		return x.UploadFrom
	}
	return ""
}

func (x *DeviceOperationFailLogListResponseObj) GetUploadMethod() string {
	if x != nil {
		return x.UploadMethod
	}
	return ""
}

type DeviceOperationFailLogListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                                    `protobuf:"varint,101,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                   `protobuf:"bytes,102,opt,name=message,proto3" json:"message,omitempty"`
	Total   int64                                    `protobuf:"varint,103,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*DeviceOperationFailLogListResponseObj `protobuf:"bytes,104,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeviceOperationFailLogListResponse) Reset() {
	*x = DeviceOperationFailLogListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_device_log_model_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOperationFailLogListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOperationFailLogListResponse) ProtoMessage() {}

func (x *DeviceOperationFailLogListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_device_log_model_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOperationFailLogListResponse.ProtoReflect.Descriptor instead.
func (*DeviceOperationFailLogListResponse) Descriptor() ([]byte, []int) {
	return file_iot_device_log_model_proto_rawDescGZIP(), []int{22}
}

func (x *DeviceOperationFailLogListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeviceOperationFailLogListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeviceOperationFailLogListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeviceOperationFailLogListResponse) GetData() []*DeviceOperationFailLogListResponseObj {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_iot_device_log_model_proto protoreflect.FileDescriptor

var file_iot_device_log_model_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x67,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x02, 0x0a, 0x0c, 0x49, 0x6f, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x68,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe2, 0x02, 0x0a, 0x12, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x3a,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x17, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x62, 0x6a, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x01, 0x0a,
	0x14, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x1f, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x16, 0x49, 0x6f,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x1e, 0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x65,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x6b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1b,
	0x49, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xf8, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x59, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa1, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x68, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x74, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x70, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xe7, 0x02,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x65, 0x72, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x6c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x6d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0xd7, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x22, 0xcf, 0x03, 0x0a, 0x1f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18,
	0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x73, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x22, 0x57, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xea, 0x01, 0x0a,
	0x21, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x62, 0x6a, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xfc, 0x01, 0x0a, 0x1e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xa5, 0x04, 0x0a, 0x25, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f,
	0x62, 0x6a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x71, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x72, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x73, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x74, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x76, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x77, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0xac, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x42, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_device_log_model_proto_rawDescOnce sync.Once
	file_iot_device_log_model_proto_rawDescData = file_iot_device_log_model_proto_rawDesc
)

func file_iot_device_log_model_proto_rawDescGZIP() []byte {
	file_iot_device_log_model_proto_rawDescOnce.Do(func() {
		file_iot_device_log_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_device_log_model_proto_rawDescData)
	})
	return file_iot_device_log_model_proto_rawDescData
}

var file_iot_device_log_model_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_iot_device_log_model_proto_goTypes = []interface{}{
	(*IotDeviceLog)(nil),                          // 0: service.IotDeviceLog
	(*IotDeviceLogFilter)(nil),                    // 1: service.IotDeviceLogFilter
	(*IotDeviceLogListRequest)(nil),               // 2: service.IotDeviceLogListRequest
	(*IotDeviceLogQueryObj)(nil),                  // 3: service.IotDeviceLogQueryObj
	(*IotDeviceLogResponse)(nil),                  // 4: service.IotDeviceLogResponse
	(*IotDeviceLogUpdateFieldsRequest)(nil),       // 5: service.IotDeviceLogUpdateFieldsRequest
	(*IotDeviceLogPrimarykey)(nil),                // 6: service.IotDeviceLogPrimarykey
	(*IotDeviceLogBatchDeleteRequest)(nil),        // 7: service.IotDeviceLogBatchDeleteRequest
	(*IotDeviceLogDExportResponse)(nil),           // 8: service.IotDeviceLogDExportResponse
	(*CreateProductLogTableResponse)(nil),         // 9: service.CreateProductLogTableResponse
	(*ProductLogRequest)(nil),                     // 10: service.ProductLogRequest
	(*ProductLogResponse)(nil),                    // 11: service.ProductLogResponse
	(*ProductEventLogItem)(nil),                   // 12: service.ProductEventLogItem
	(*ProductLogEventProperties)(nil),             // 13: service.ProductLogEventProperties
	(*ProductLogRecordResponse)(nil),              // 14: service.ProductLogRecordResponse
	(*ProductLogRecord)(nil),                      // 15: service.ProductLogRecord
	(*DeviceOperationFailLogRequest)(nil),         // 16: service.DeviceOperationFailLogRequest
	(*DeviceOperationFailLogRequestEx)(nil),       // 17: service.DeviceOperationFailLogRequestEx
	(*OperationFailLogRequest)(nil),               // 18: service.OperationFailLogRequest
	(*DeviceOperationFailLogListRequest)(nil),     // 19: service.DeviceOperationFailLogListRequest
	(*DeviceOperationFailLogQueryObj)(nil),        // 20: service.DeviceOperationFailLogQueryObj
	(*DeviceOperationFailLogListResponseObj)(nil), // 21: service.DeviceOperationFailLogListResponseObj
	(*DeviceOperationFailLogListResponse)(nil),    // 22: service.DeviceOperationFailLogListResponse
	nil,                           // 23: service.CreateProductLogTableResponse.ThingModelsEntry
	(*timestamppb.Timestamp)(nil), // 24: google.protobuf.Timestamp
}
var file_iot_device_log_model_proto_depIdxs = []int32{
	24, // 0: service.IotDeviceLog.reportTime:type_name -> google.protobuf.Timestamp
	24, // 1: service.IotDeviceLog.createdAt:type_name -> google.protobuf.Timestamp
	24, // 2: service.IotDeviceLogFilter.reportTime:type_name -> google.protobuf.Timestamp
	24, // 3: service.IotDeviceLogFilter.createdAt:type_name -> google.protobuf.Timestamp
	3,  // 4: service.IotDeviceLogListRequest.query:type_name -> service.IotDeviceLogQueryObj
	0,  // 5: service.IotDeviceLogResponse.data:type_name -> service.IotDeviceLog
	0,  // 6: service.IotDeviceLogUpdateFieldsRequest.data:type_name -> service.IotDeviceLog
	6,  // 7: service.IotDeviceLogBatchDeleteRequest.keys:type_name -> service.IotDeviceLogPrimarykey
	23, // 8: service.CreateProductLogTableResponse.thingModels:type_name -> service.CreateProductLogTableResponse.ThingModelsEntry
	12, // 9: service.ProductLogResponse.list:type_name -> service.ProductEventLogItem
	13, // 10: service.ProductEventLogItem.properties:type_name -> service.ProductLogEventProperties
	15, // 11: service.ProductLogRecordResponse.records:type_name -> service.ProductLogRecord
	13, // 12: service.ProductLogRecord.properties:type_name -> service.ProductLogEventProperties
	17, // 13: service.OperationFailLogRequest.data:type_name -> service.DeviceOperationFailLogRequestEx
	20, // 14: service.DeviceOperationFailLogListRequest.query:type_name -> service.DeviceOperationFailLogQueryObj
	21, // 15: service.DeviceOperationFailLogListResponse.data:type_name -> service.DeviceOperationFailLogListResponseObj
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_iot_device_log_model_proto_init() }
func file_iot_device_log_model_proto_init() {
	if File_iot_device_log_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_device_log_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogQueryObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogUpdateFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogPrimarykey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotDeviceLogDExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductLogTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEventLogItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLogEventProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLogRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLogRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOperationFailLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOperationFailLogRequestEx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationFailLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOperationFailLogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOperationFailLogQueryObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOperationFailLogListResponseObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_device_log_model_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOperationFailLogListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_device_log_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iot_device_log_model_proto_goTypes,
		DependencyIndexes: file_iot_device_log_model_proto_depIdxs,
		MessageInfos:      file_iot_device_log_model_proto_msgTypes,
	}.Build()
	File_iot_device_log_model_proto = out.File
	file_iot_device_log_model_proto_rawDesc = nil
	file_iot_device_log_model_proto_goTypes = nil
	file_iot_device_log_model_proto_depIdxs = nil
}
