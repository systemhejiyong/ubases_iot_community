// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: opm_network_guide_service.proto

package protosService

import (
	
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for OpmNetworkGuideService service

func NewOpmNetworkGuideServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{
		{
			Name:    "OpmNetworkGuideService.CreateAndUpdate",
			Path:    []string{"/v1/opmNetworkGuide/save"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmNetworkGuideService.SetNetworkGuideTypes",
			Path:    []string{"/v1/opmNetworkGuide/setNetworkGuideTypes"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmNetworkGuideService.DeleteByProductId",
			Path:    []string{"/v1/opmNetworkGuide/deleteByProductId"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmNetworkGuideService.FindByProductId",
			Path:    []string{"/v1/opmNetworkGuide/findById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
		{
			Name:    "OpmNetworkGuideService.FindDefaultByProductId",
			Path:    []string{"/v1/opmNetworkGuide/findDefaultById"},
			Method:  []string{"POST"},
			Body:    "*",
			Handler: "rpc",
		},
	}
}

// Client API for OpmNetworkGuideService service

type OpmNetworkGuideService interface {
	//创建
	CreateAndUpdate(ctx context.Context, in *OpmNetworkGuide, opts ...client.CallOption) (*Response, error)
	//创建
	SetNetworkGuideTypes(ctx context.Context, in *SetNetworkGuideTypeRequest, opts ...client.CallOption) (*OpmNetworkGuideResponse, error)
	//匹配主键删除,一般是Id
	DeleteByProductId(ctx context.Context, in *OpmNetworkGuideFilter, opts ...client.CallOption) (*Response, error)
	//根据主键查找,一般是Id,返回单条数据
	FindByProductId(ctx context.Context, in *OpmNetworkGuideFilter, opts ...client.CallOption) (*OpmNetworkGuideResponse, error)
	//根据主键查找,一般是Id,返回单条数据
	FindDefaultByProductId(ctx context.Context, in *OpmNetworkGuideFilter, opts ...client.CallOption) (*OpmNetworkGuideResponse, error)
}

type opmNetworkGuideService struct {
	c    client.Client
	name string
}

func NewOpmNetworkGuideService(name string, c client.Client) OpmNetworkGuideService {
	return &opmNetworkGuideService{
		c:    c,
		name: name,
	}
}

func (c *opmNetworkGuideService) CreateAndUpdate(ctx context.Context, in *OpmNetworkGuide, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmNetworkGuideService.CreateAndUpdate", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmNetworkGuideService) SetNetworkGuideTypes(ctx context.Context, in *SetNetworkGuideTypeRequest, opts ...client.CallOption) (*OpmNetworkGuideResponse, error) {
	req := c.c.NewRequest(c.name, "OpmNetworkGuideService.SetNetworkGuideTypes", in)
	out := new(OpmNetworkGuideResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmNetworkGuideService) DeleteByProductId(ctx context.Context, in *OpmNetworkGuideFilter, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "OpmNetworkGuideService.DeleteByProductId", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmNetworkGuideService) FindByProductId(ctx context.Context, in *OpmNetworkGuideFilter, opts ...client.CallOption) (*OpmNetworkGuideResponse, error) {
	req := c.c.NewRequest(c.name, "OpmNetworkGuideService.FindByProductId", in)
	out := new(OpmNetworkGuideResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opmNetworkGuideService) FindDefaultByProductId(ctx context.Context, in *OpmNetworkGuideFilter, opts ...client.CallOption) (*OpmNetworkGuideResponse, error) {
	req := c.c.NewRequest(c.name, "OpmNetworkGuideService.FindDefaultByProductId", in)
	out := new(OpmNetworkGuideResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpmNetworkGuideService service

type OpmNetworkGuideServiceHandler interface {
	//创建
	CreateAndUpdate(context.Context, *OpmNetworkGuide, *Response) error
	//创建
	SetNetworkGuideTypes(context.Context, *SetNetworkGuideTypeRequest, *OpmNetworkGuideResponse) error
	//匹配主键删除,一般是Id
	DeleteByProductId(context.Context, *OpmNetworkGuideFilter, *Response) error
	//根据主键查找,一般是Id,返回单条数据
	FindByProductId(context.Context, *OpmNetworkGuideFilter, *OpmNetworkGuideResponse) error
	//根据主键查找,一般是Id,返回单条数据
	FindDefaultByProductId(context.Context, *OpmNetworkGuideFilter, *OpmNetworkGuideResponse) error
}

func RegisterOpmNetworkGuideServiceHandler(s server.Server, hdlr OpmNetworkGuideServiceHandler, opts ...server.HandlerOption) error {
	type opmNetworkGuideService interface {
		CreateAndUpdate(ctx context.Context, in *OpmNetworkGuide, out *Response) error
		SetNetworkGuideTypes(ctx context.Context, in *SetNetworkGuideTypeRequest, out *OpmNetworkGuideResponse) error
		DeleteByProductId(ctx context.Context, in *OpmNetworkGuideFilter, out *Response) error
		FindByProductId(ctx context.Context, in *OpmNetworkGuideFilter, out *OpmNetworkGuideResponse) error
		FindDefaultByProductId(ctx context.Context, in *OpmNetworkGuideFilter, out *OpmNetworkGuideResponse) error
	}
	type OpmNetworkGuideService struct {
		opmNetworkGuideService
	}
	h := &opmNetworkGuideServiceHandler{hdlr}
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmNetworkGuideService.CreateAndUpdate",
		Path:    []string{"/v1/opmNetworkGuide/save"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmNetworkGuideService.SetNetworkGuideTypes",
		Path:    []string{"/v1/opmNetworkGuide/setNetworkGuideTypes"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmNetworkGuideService.DeleteByProductId",
		Path:    []string{"/v1/opmNetworkGuide/deleteByProductId"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmNetworkGuideService.FindByProductId",
		Path:    []string{"/v1/opmNetworkGuide/findById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	opts = append(opts, api.WithEndpoint(&api.Endpoint{
		Name:    "OpmNetworkGuideService.FindDefaultByProductId",
		Path:    []string{"/v1/opmNetworkGuide/findDefaultById"},
		Method:  []string{"POST"},
		Body:    "*",
		Handler: "rpc",
	}))
	return s.Handle(s.NewHandler(&OpmNetworkGuideService{h}, opts...))
}

type opmNetworkGuideServiceHandler struct {
	OpmNetworkGuideServiceHandler
}

func (h *opmNetworkGuideServiceHandler) CreateAndUpdate(ctx context.Context, in *OpmNetworkGuide, out *Response) error {
	return h.OpmNetworkGuideServiceHandler.CreateAndUpdate(ctx, in, out)
}

func (h *opmNetworkGuideServiceHandler) SetNetworkGuideTypes(ctx context.Context, in *SetNetworkGuideTypeRequest, out *OpmNetworkGuideResponse) error {
	return h.OpmNetworkGuideServiceHandler.SetNetworkGuideTypes(ctx, in, out)
}

func (h *opmNetworkGuideServiceHandler) DeleteByProductId(ctx context.Context, in *OpmNetworkGuideFilter, out *Response) error {
	return h.OpmNetworkGuideServiceHandler.DeleteByProductId(ctx, in, out)
}

func (h *opmNetworkGuideServiceHandler) FindByProductId(ctx context.Context, in *OpmNetworkGuideFilter, out *OpmNetworkGuideResponse) error {
	return h.OpmNetworkGuideServiceHandler.FindByProductId(ctx, in, out)
}

func (h *opmNetworkGuideServiceHandler) FindDefaultByProductId(ctx context.Context, in *OpmNetworkGuideFilter, out *OpmNetworkGuideResponse) error {
	return h.OpmNetworkGuideServiceHandler.FindDefaultByProductId(ctx, in, out)
}
