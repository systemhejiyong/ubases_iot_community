// Code generated by sgen.exe,2022-08-03 19:35:11. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";

//来源于数据表
message ProductFaultType {


    // @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
    int64 id = 100;


    // @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:14;"
    string productKey = 101;


    // @inject_tag: json:"month" gorm:"default:月份;comment:月份;"
    google.protobuf.Timestamp month = 102; 


    // @inject_tag: json:"faultType" gorm:"default:故障类型;comment:故障类型;size:100;"
    string faultType = 103;


    // @inject_tag: json:"total" gorm:"default:月份故障类型总数;comment:月份故障类型总数;size:19;"
    int64 total = 104;


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 105; 

}

message ProductFaultTypeFilter {


    // @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
    int64 id = 100;


    // @inject_tag: json:"productKey" gorm:"default:产品key;comment:产品key;size:14;"
    string productKey = 101;


    // @inject_tag: json:"month" gorm:"default:月份;comment:月份;"
    google.protobuf.Timestamp month = 102; 


    // @inject_tag: json:"faultType" gorm:"default:故障类型;comment:故障类型;size:100;"
    string faultType = 103;


    // @inject_tag: json:"total" gorm:"default:月份故障类型总数;comment:月份故障类型总数;size:19;"
    int64 total = 104;


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 105; 

}

message ProductFaultTypeListRequest {
    ProductFaultType query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
    string searchKey = 106;
}

message ProductFaultTypeResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated ProductFaultType data = 104;
}

message ProductFaultTypeUpdateFieldsRequest {
    repeated string fields = 101;
    ProductFaultType data = 102;
}


// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message ProductFaultTypePrimarykey {

    int64 id = 100;
}

message ProductFaultTypeBatchDeleteRequest {
    repeated ProductFaultTypePrimarykey keys = 101;
}