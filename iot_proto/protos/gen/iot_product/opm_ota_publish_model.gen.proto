// Code generated by sgen.exe,2022-05-13 13:53:26. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";


//来源于数据表
message OpmOtaPublish {


    // @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
    int64 id = 100;


    // @inject_tag: json:"pkgId" gorm:"default:包id（t_opm_ota_pkg.id）;comment:包id（t_opm_ota_pkg.id）;size:19;"
    int64 pkgId = 101;


    // @inject_tag: json:"publishAt" gorm:"default:发布时间;comment:发布时间;"
    google.protobuf.Timestamp publishAt = 102;


    // @inject_tag: json:"isGray" gorm:"default:是否灰度发布 0：否，1：是;comment:是否灰度发布 0：否，1：是;"
    int32 isGray = 103;


    // @inject_tag: json:"status" gorm:"default:状态[0:待发布,1:已发布,2:已暂停];comment:状态[0:待发布,1:已发布,2:已暂停];"
    int32 status = 104;


    // @inject_tag: json:"grayType" gorm:"default:灰度类型[0:按比例灰度, 1:按数量灰度];comment:灰度类型[0:按比例灰度, 1:按数量灰度];"
    int32 grayType = 105;


    // @inject_tag: json:"grayScale" gorm:"default:灰度比例;comment:灰度比例;size:10;"
    int32 grayScale = 106;


    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 107;


    // @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
    int64 updatedBy = 108;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 109;


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 110;


    // @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
    google.protobuf.Timestamp deletedAt = 111;


    // @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
    string tenantId = 112;


    // @inject_tag: json:"isAuto" gorm:"default:是否自动升级[0:否 1:是];comment:是否自动升级[0:否 1:是];"
    int32 isAuto = 113;


    // @inject_tag: json:"upgradeDesc" gorm:"default:升级文案（中文）;comment:升级文案（中文）;size:300;"
    string upgradeDesc = 114;


    // @inject_tag: json:"upgradeDescEn" gorm:"default:升级文案（英文）;comment:升级文案（英文）;size:300;"
    string upgradeDescEn = 115;


    // @inject_tag: json:"autoStartAt" gorm:"default:自动升级开始时间;comment:自动升级开始时间;size:20;"
    string autoStartAt = 116;


    // @inject_tag: json:"autoEndAt" gorm:"default:自动升级结束时间;comment:自动升级结束时间;size:20;"
    string autoEndAt = 117;


    // @inject_tag: json:"specifiedVersionMode" gorm:"default:指定升级版本（模式选择 1全部版本 2指定版本）;comment:指定升级版本（模式选择 1全部版本 2指定版本）;"
    int32 specifiedVersionMode = 118;


    // @inject_tag: json:"specifiedVersion" gorm:"default:指定升级版本;comment:指定升级版本;size:20;"
    string specifiedVersion = 119;


    // @inject_tag: json:"specifiedAreaMode" gorm:"default:指定升级区域（模式选择 1全部区域 2指定区域）;comment:指定升级区域（模式选择 1全部区域 2指定区域）;"
    int32 specifiedAreaMode = 120;


    // @inject_tag: json:"specifiedArea" gorm:"default:指定升级区域;comment:指定升级区域;size:20;"
    string specifiedArea = 121;


    // @inject_tag: json:"versionId" gorm:"default:版本号编号;comment:版本号编号;size:19;"
    int64 versionId = 122;

    // @inject_tag: json:"version" gorm:"default:固件版本号;comment:固件版本号;size:20;"
    string version = 123;

    // @inject_tag: json:"upgradeMode" gorm:"default:升级方式[0:静默,1:提醒,2:强制];comment:升级方式[0:静默,1:提醒,2:强制];size:10;"
    int32 upgradeMode = 124;
    string firmwareName = 125;
    string productName = 126;
    string productKey = 127;

    // 升级时间模式 =1 全天 =2 指定时间
    int32 upgradeTimeMode = 128;

    int32 totalCount = 129;
    int32 successCount = 130;
    string pubResult = 131;

    repeated string deviceIds = 132;
}

message OpmOtaPublishFilter {


    // @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
    int64 id = 100;


    // @inject_tag: json:"pkgId" gorm:"default:包id（t_opm_ota_pkg.id）;comment:包id（t_opm_ota_pkg.id）;size:19;"
    int64 pkgId = 101;


    // @inject_tag: json:"publishAt" gorm:"default:发布时间;comment:发布时间;"
    google.protobuf.Timestamp publishAt = 102; 


    // @inject_tag: json:"isGray" gorm:"default:是否灰度发布 0：否，1：是;comment:是否灰度发布 0：否，1：是;"
    int32 isGray = 103;


    // @inject_tag: json:"status" gorm:"default:状态[0:待发布,1:已发布,2:已暂停];comment:状态[0:待发布,1:已发布,2:已暂停];"
    int32 status = 104;


    // @inject_tag: json:"grayType" gorm:"default:灰度类型[0:按比例灰度, 1:按数量灰度];comment:灰度类型[0:按比例灰度, 1:按数量灰度];"
    int32 grayType = 105;


    // @inject_tag: json:"grayScale" gorm:"default:灰度比例;comment:灰度比例;size:10;"
    int32 grayScale = 106;


    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 107;


    // @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
    int64 updatedBy = 108;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 109; 


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 110; 


    // @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
    google.protobuf.Timestamp deletedAt = 111; 


    // @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
    string tenantId = 112;

}

message OpmOtaPublishListRequest {
    OpmOtaPublish query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
    string searchKey = 106;
}

message OpmOtaPublishResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated OpmOtaPublish data = 104;
}

message OpmOtaPublishUpdateFieldsRequest {
    repeated string fields = 101;
    OpmOtaPublish data = 102;
}


// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message OpmOtaPublishPrimarykey {

    int64 id = 100;
}

message OpmOtaPublishBatchDeleteRequest {
    repeated OpmOtaPublishPrimarykey keys = 101;
}

message CheckOtaVersionRequest {
    string productKey = 101;//产品Key
    string version = 102;//版本编号
    string deviceId = 103;//设备编号
    repeated int32 firmwareTypes = 104;//固件类型
}

message CheckOtaVersionResponse {
    int32 code = 101;
    string message = 102;
    string batch = 103;

    OtaPkgInfo otaPkg = 104;
    UpgradePublishInfo upgradePublish = 105;
}

message CheckOtaListResponse {
    int32 code = 101;
    string message = 102;
    string batch = 103;
    repeated CheckOtaVersionResponse upgradeList = 104; //升级对象列表，根据固件类型分组
}

message OtaPkgInfo {
    bool custom = 104;
    bool isDiff = 105;
    string md5 = 106;
    string productKey = 107;
    string firmwareName = 108;
    int32 size = 109;
    string appUrl = 110;
    string mcuUrl = 111;
    string otaType = 112;
    string version = 116;
    int32 upgradeOvertime = 117;
    int32 firmwareType = 118;
    string mcuVersion = 119;
    string otaState = 120;
    int32 progress = 121;
    string firmwareKey = 122;//固件Key
    string firmwareNameEn = 123;
}

message UpgradePublishInfo {
    string pointVer = 113;
    string baseVer = 114;
    string mcuBaseVer = 115;
    int32 upgradeMode = 117;//升级方式[1:APP检测升级,2:APP提醒升级,3:APP强制升级]
    int32 isAuto = 118;
    string autoStartAt = 119;
    string autoEndAt = 120;
    int32 specifiedVersionMode = 121;
    string specifiedVersion = 122;//=pointVer
    int32 specifiedAreaMode = 123;
    string specifiedArea = 124;
    string upgradeDesc = 125;
    string upgradeDescEn = 126;
    // 升级时间模式 =1 全天 =2 指定时间
    int32 upgradeTimeMode = 127;
    int64 pubId = 128;
    string oriVersion = 129;
}