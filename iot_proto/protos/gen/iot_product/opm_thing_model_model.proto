// Code generated by sgen.exe,2022-05-11 16:38:45. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";

//来源于数据表
message OpmThingModel {
    // @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
    int64 id = 100;
    // @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:19;"
    int64 productId = 101;
    // @inject_tag: json:"standard" gorm:"default:是否标准品类 0-否 1-是;comment:是否标准品类 0-否 1-是;"
    int32 standard = 102;
    // @inject_tag: json:"version" gorm:"default:物模型版本号;comment:物模型版本号;size:10;"
    string version = 103;
    // @inject_tag: json:"description" gorm:"default:物模型描述;comment:物模型描述;size:64;"
    string description = 104;
    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 105;
    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 106;
    // @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
    int64 updatedBy = 107;
    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 108;
    // @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
    google.protobuf.Timestamp deletedAt = 109;
    // @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
    string tenantId = 110;
    //标准功能类型
    int32 standardFuncType = 111;
    //标准功能编号集合
    repeated OpmStandardFuncs standardFuncs = 112;
    OpmThingModelProperties properties = 113;
    OpmThingModelEvents events = 114;
    OpmThingModelServices services = 115;


}

//来源于数据表
message OpmThingModelEvents {
    // @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
    int64 id = 100;
    // @inject_tag: json:"modelId" gorm:"default:物模型ID(t_pm_thing_model.id);comment:物模型ID(t_pm_thing_model.id);size:19;"
    int64 modelId = 101;
    // @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:50;"
    string productId = 102;
    // @inject_tag: json:"createTs" gorm:"default:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;comment:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;size:20;"
    string createTs = 103;
    // @inject_tag: json:"identifier" gorm:"default:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;comment:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;size:50;"
    string identifier = 104;
    // @inject_tag: json:"eventName" gorm:"default:事件名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文或数字开头，长度不超过30个字符，一个中文计为一个字符。;comment:事件名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文或数字开头，长度不超过30个字符，一个中文计为一个字符。;size:64;"
    string eventName = 105;
    // @inject_tag: json:"eventType" gorm:"default:事件类型。INFO_EVENT_TYPE：信息。ALERT_EVENT_TYPE：告警。ERROR_EVENT_TYPE：故障。;comment:事件类型。INFO_EVENT_TYPE：信息。ALERT_EVENT_TYPE：告警。ERROR_EVENT_TYPE：故障。;size:20;"
    string eventType = 106;
    // @inject_tag: json:"outputdata" gorm:"default:服务的输出参数;comment:服务的输出参数;"
    string outputdata = 107;
    // @inject_tag: json:"required" gorm:"default:是否是标准品类的必选服务。1：是, 0：否;comment:是否是标准品类的必选服务。1：是, 0：否;"
    int32 required = 108;
    // @inject_tag: json:"custom" gorm:"default:是否是自定义功能。1：是, 0：否;comment:是否是自定义功能。1：是, 0：否;"
    int32 custom = 109;
    // @inject_tag: json:"extension" gorm:"default:扩展字段;comment:扩展字段;size:200;"

    string funcType = 110;
    string desc = 111;

    int32 trigger_cond = 112;
    int32 exec_cond = 113;
    int64 std_id = 114;
    int32 valid = 115;

    string productKey = 116;
    int32 dpid = 117;
}

//来源于数据表
message OpmThingModelProperties {
    // @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
    int64 id = 100;
    // @inject_tag: json:"modelId" gorm:"default:物模型ID(t_pm_thing_model.id);comment:物模型ID(t_pm_thing_model.id);size:19;"
    int64 modelId = 101;
    // @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:50;"
    string productId = 102;
    // @inject_tag: json:"createTs" gorm:"default:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;comment:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;size:20;"
    string createTs = 103;
    // @inject_tag: json:"identifier" gorm:"default:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;comment:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;size:50;"
    string identifier = 104;
    // @inject_tag: json:"dataType" gorm:"default:属性值的数据类型。可选值：ARRAY、STRUCT、INT、FLOAT、DOUBLE、TEXT、DATE、JSON、ENUM、BOOL。不同数据类型，可传入的参数不同。;comment:属性值的数据类型。可选值：ARRAY、STRUCT、INT、FLOAT、DOUBLE、TEXT、DATE、JSON、ENUM、BOOL。不同数据类型，可传入的参数不同。;size:64;"
    string dataType = 105;
    // @inject_tag: json:"name" gorm:"default:属性名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;comment:属性名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;size:30;"
    string name = 106;
    // @inject_tag: json:"rwFlag" gorm:"default:在云端可以对该属性进行的操作类型。READ_WRITE：读写。READ_ONLY：只读。WRITE_ONLY：只写。;comment:在云端可以对该属性进行的操作类型。READ_WRITE：读写。READ_ONLY：只读。WRITE_ONLY：只写。;size:10;"
    string rwFlag = 107;
    // @inject_tag: json:"dataSpecs" gorm:"default:数据类型（dataType）为非列表型（INT、FLOAT、DOUBLE、TEXT、DATE、ARRAY）的数据规范存储在dataSpecs中;comment:数据类型（dataType）为非列表型（INT、FLOAT、DOUBLE、TEXT、DATE、ARRAY）的数据规范存储在dataSpecs中;"
    string dataSpecs = 108;
    // @inject_tag: json:"dataSpecsList" gorm:"default:数据类型（dataType）为列表型（ENUM、BOOL、STRUCT）的数据规范存储在dataSpecsList中;comment:数据类型（dataType）为列表型（ENUM、BOOL、STRUCT）的数据规范存储在dataSpecsList中;"
    string dataSpecsList = 109;
    // @inject_tag: json:"required" gorm:"default:是否是标准品类的必选属性。1：是, 0：否;comment:是否是标准品类的必选属性。1：是, 0：否;"
    int32 required = 110;
    // @inject_tag: json:"custom" gorm:"default:是否是自定义功能。1：是, 0：否;comment:是否是自定义功能。1：是, 0：否;"
    int32 custom = 111;
    // @inject_tag: json:"extension" gorm:"default:扩展字段;comment:扩展字段;size:200;"
    string extension = 112;

    string Unit = 113;
    int32  Step = 114;
    string Multiple = 115;
    //功能定义 properties、events、services
    string funcType = 116;
    string desc = 117;

    int32 trigger_cond = 118;
    int32 exec_cond = 119;
    int64 std_id = 120;
    int32 valid = 121;

    string productKey = 122;
    int32 dpid = 123;

    string defaultVal = 124; //默认值

    string triggerCondArgs   = 125; //触发条件参数
    string execCondArgs      = 126;//执行条件参数
    int32 allowAppointment  = 127;//允许预约
    string appointmentArgs   = 128;//预约参数
    int32 isTop             = 129;//是否顶级功能
    int64 parentId          = 130;//父级功能 isTop=0 的时候parentId具有值
    int32 sort          = 131;//排序序号
}

//来源于数据表
message OpmThingModelServices {
    // @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
    int64 id = 100;
    // @inject_tag: json:"modelId" gorm:"default:物模型ID(t_pm_thing_model.id);comment:物模型ID(t_pm_thing_model.id);size:19;"
    int64 modelId = 101;
    // @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:50;"
    string productId = 102;
    // @inject_tag: json:"createTs" gorm:"default:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;comment:功能创建的时间戳，默认长度是13位。可手动传入也可由系统生成。功能定义会根据该时间由小到大进行排序。;size:20;"
    string createTs = 103;
    // @inject_tag: json:"identifier" gorm:"default:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;comment:属性的标识符。可包含大小写英文字母、数字、下划线（_），长度不超过50个字符。;size:50;"
    string identifier = 104;
    // @inject_tag: json:"serviceName" gorm:"default:服务名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;comment:服务名称。可包含中文、大小写英文字母、数字、短划线（-）、下划线（_）和半角句号（.），且必须以中文、英文字母或数字开头，长度不超过30个字符，一个中文计为一个字符。;size:64;"
    string serviceName = 105;
    // @inject_tag: json:"inputParams" gorm:"default:服务的输入参数;comment:服务的输入参数;"
    string inputParams = 106;
    // @inject_tag: json:"outputParams" gorm:"default:服务的输出参数;comment:服务的输出参数;"
    string outputParams = 107;
    // @inject_tag: json:"required" gorm:"default:是否是标准品类的必选服务。1：是, 0：否;comment:是否是标准品类的必选服务。1：是, 0：否;"
    int32 required = 108;
    // @inject_tag: json:"callType" gorm:"default:服务的调用方式。1：异步调用, 0：同步调用;comment:服务的调用方式。1：异步调用, 0：同步调用;"
    int32 callType = 109;
    // @inject_tag: json:"custom" gorm:"default:是否是自定义功能。1：是, 0：否;comment:是否是自定义功能。1：是, 0：否;"
    int32 custom = 110;
    // @inject_tag: json:"extension" gorm:"default:扩展字段;comment:扩展字段;size:200;"
    string extension = 111;

    string funcType = 112;
    string desc = 113;

    int32 trigger_cond = 114;
    int32 exec_cond = 115;
    int64 std_id = 116;
    int32 valid = 117;

    string productKey = 118;
    int32 dpid = 119;
}

message OpmStandardFuncs {
    int64 modelId = 100;
    int64 funcId = 101;
    string funcType = 102;
    string identifier = 103;

    int32 trigger_cond = 104;
    int32 exec_cond = 105;
    string triggerCondArgs = 106;
    string execCondArgs = 107;

    int32 allowAppointment  = 108;//允许预约
    string appointmentArgs   = 109;//预约参数
    int32 isTop             = 110;//是否顶级功能
    int64 parentId          = 111;//父级功能 isTop=0 的时候parentId具有值
    int32 sort = 112;
}

message OpmThingModelFilter {


    // @inject_tag: json:"id" gorm:"default:主键（雪花算法19位）;comment:主键（雪花算法19位）;size:19;"
    int64 id = 100;


    // @inject_tag: json:"productId" gorm:"default:产品唯一标识;comment:产品唯一标识;size:19;"
    int64 productId = 101;


    // @inject_tag: json:"standard" gorm:"default:是否标准品类 0-否 1-是;comment:是否标准品类 0-否 1-是;"
    int32 standard = 102;


    // @inject_tag: json:"version" gorm:"default:物模型版本号;comment:物模型版本号;size:10;"
    string version = 103;


    // @inject_tag: json:"description" gorm:"default:物模型描述;comment:物模型描述;size:64;"
    string description = 104;


    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 105;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 106;


    // @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
    int64 updatedBy = 107;


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 108;


    // @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
    google.protobuf.Timestamp deletedAt = 109;


    // @inject_tag: json:"tenantId" gorm:"default:租户id（t_open_company.tenant_id）;comment:租户id（t_open_company.tenant_id）;size:6;"
    string tenantId = 110;

}

message OpmThingModelListRequest {
    OpmThingModel query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
    string searchKey = 106;
}

message OpmThingModelResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated OpmThingModel data = 104;
}

message OpmThingModelUpdateFieldsRequest {
    repeated string fields = 101;
    OpmThingModel data = 102;
}

// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message OpmThingModelPrimarykey {
    int64 id = 100;
}

message OpmThingModelBatchDeleteRequest {
    repeated OpmThingModelPrimarykey keys = 101;
}

message OpmThingModelByProductRequest {
    int64 productId = 100;
    int64 productTypeId = 101;
    string productKey = 102;
    int32 custom = 103;
}

message OpmThingModelAllList {
    OpmThingModel model = 101;
    repeated OpmThingModelProperties properties = 102;
    repeated OpmThingModelEvents events = 103;
    repeated OpmThingModelServices services = 104;
}

message OpmThingModelByProductResponse {
    int32 code = 101;
    string message = 102;
    OpmThingModelAllList data = 103;
}


message OpmThingModelDeleteRequest {
    int64 productId = 100;
    int64 funcId = 101;
    string funcType = 102;
}
