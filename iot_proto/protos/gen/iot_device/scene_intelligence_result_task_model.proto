// Code generated by sgen.exe,2022-05-20 13:36:04. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";

//来源于数据表
message SceneIntelligenceResultTask {


    // @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
    int64 id = 100;


    // @inject_tag: json:"startTime" gorm:"default:运行时间;comment:运行时间;"
    google.protobuf.Timestamp startTime = 101; 


    // @inject_tag: json:"endTime" gorm:"default:;comment:;"
    google.protobuf.Timestamp endTime = 102; 


    // @inject_tag: json:"intelligenceId" gorm:"default:智能场景编号;comment:智能场景编号;size:19;"
    int64 intelligenceId = 103;


    // @inject_tag: json:"resultId" gorm:"default:执行结果id;comment:执行结果id;size:19;"
    int64 resultId = 104;


    // @inject_tag: json:"isSuccess" gorm:"default:是否成功;comment:是否成功;size:10;"
    int32 isSuccess = 105;


    // @inject_tag: json:"resultMsg" gorm:"default:结果描述;comment:结果描述;size:100;"
    string resultMsg = 106;


    // @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:19;"
    int64 taskId = 107;


    // @inject_tag: json:"taskImg" gorm:"default:任务图片(产品图片、智能图片、功能图标）;comment:任务图片(产品图片、智能图片、功能图标）;size:255;"
    string taskImg = 108;


    // @inject_tag: json:"taskDesc" gorm:"default:任务描述;comment:任务描述;size:50;"
    string taskDesc = 109;


    // @inject_tag: json:"taskType" gorm:"default:任务类型（=1 延时 =2 设备执行 =3 场景开关）;comment:任务类型（=1 延时 =2 设备执行 =3 场景开关）;size:10;"
    int32 taskType = 110;


    // @inject_tag: json:"objectId" gorm:"default:对象ID（设备Id、场景Id）;comment:对象ID（设备Id、场景Id）;size:50;"
    string objectId = 111;


    // @inject_tag: json:"objectDesc" gorm:"default:对象的标题或者描述（设备名称、场景名称）;comment:对象的标题或者描述（设备名称、场景名称）;size:50;"
    string objectDesc = 112;


    // @inject_tag: json:"funcKey" gorm:"default:执行功能Key;comment:执行功能Key;size:50;"
    string funcKey = 113;


    // @inject_tag: json:"funcDesc" gorm:"default:冗余：功能描述;comment:冗余：功能描述;size:50;"
    string funcDesc = 114;


    // @inject_tag: json:"funcValue" gorm:"default:;comment:;size:50;"
    string funcValue = 115;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 116; 


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 117; 

    string functions = 118;

    string productKey = 119;
}

message SceneIntelligenceResultTaskFilter {


    // @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
    int64 id = 100;


    // @inject_tag: json:"startTime" gorm:"default:运行时间;comment:运行时间;"
    google.protobuf.Timestamp startTime = 101; 


    // @inject_tag: json:"endTime" gorm:"default:;comment:;"
    google.protobuf.Timestamp endTime = 102; 


    // @inject_tag: json:"intelligenceId" gorm:"default:智能场景编号;comment:智能场景编号;size:19;"
    int64 intelligenceId = 103;


    // @inject_tag: json:"resultId" gorm:"default:执行结果id;comment:执行结果id;size:19;"
    int64 resultId = 104;


    // @inject_tag: json:"isSuccess" gorm:"default:是否成功;comment:是否成功;size:10;"
    int32 isSuccess = 105;


    // @inject_tag: json:"resultMsg" gorm:"default:结果描述;comment:结果描述;size:100;"
    string resultMsg = 106;


    // @inject_tag: json:"taskId" gorm:"default:任务编号;comment:任务编号;size:19;"
    int64 taskId = 107;


    // @inject_tag: json:"taskImg" gorm:"default:任务图片(产品图片、智能图片、功能图标）;comment:任务图片(产品图片、智能图片、功能图标）;size:255;"
    string taskImg = 108;


    // @inject_tag: json:"taskDesc" gorm:"default:任务描述;comment:任务描述;size:50;"
    string taskDesc = 109;


    // @inject_tag: json:"taskType" gorm:"default:任务类型（=1 延时 =2 设备执行 =3 场景开关）;comment:任务类型（=1 延时 =2 设备执行 =3 场景开关）;size:10;"
    int32 taskType = 110;


    // @inject_tag: json:"objectId" gorm:"default:对象ID（设备Id、场景Id）;comment:对象ID（设备Id、场景Id）;size:50;"
    string objectId = 111;


    // @inject_tag: json:"objectDesc" gorm:"default:对象的标题或者描述（设备名称、场景名称）;comment:对象的标题或者描述（设备名称、场景名称）;size:50;"
    string objectDesc = 112;


    // @inject_tag: json:"funcKey" gorm:"default:执行功能Key;comment:执行功能Key;size:50;"
    string funcKey = 113;


    // @inject_tag: json:"funcDesc" gorm:"default:冗余：功能描述;comment:冗余：功能描述;size:50;"
    string funcDesc = 114;


    // @inject_tag: json:"funcValue" gorm:"default:;comment:;size:50;"
    string funcValue = 115;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 116; 


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 117; 

    string productKey = 118;
}

message SceneIntelligenceResultTaskListRequest {
    SceneIntelligenceResultTask query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
    string searchKey = 106;
}

message SceneIntelligenceResultTaskResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated SceneIntelligenceResultTask data = 104;
}

message SceneIntelligenceResultTaskUpdateFieldsRequest {
    repeated string fields = 101;
    SceneIntelligenceResultTask data = 102;
}


// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message SceneIntelligenceResultTaskPrimarykey {

    int64 id = 100;
}

message SceneIntelligenceResultTaskBatchDeleteRequest {
    repeated SceneIntelligenceResultTaskPrimarykey keys = 101;
}