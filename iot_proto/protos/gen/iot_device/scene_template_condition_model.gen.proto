// Code generated by sgen.exe,2022-11-11 13:33:30. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";

//来源于数据表
message SceneTemplateCondition {


    // @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
    int64 id = 100;


    // @inject_tag: json:"sceneTemplateId" gorm:"default:场景ID;comment:场景ID;size:19;"
    int64 sceneTemplateId = 101;


    // @inject_tag: json:"conditionType" gorm:"default:条件类型（定时 、天气变化、设备状态变化）;comment:条件类型（定时 、天气变化、设备状态变化）;"
    int32 conditionType = 102;


    // @inject_tag: json:"desc" gorm:"default:天气描述;comment:天气描述;size:100;"
    string desc = 103;


    // @inject_tag: json:"weatherType" gorm:"default:天气类型;comment:天气类型;size:10;"
    int32 weatherType = 104;


    // @inject_tag: json:"weatherValue" gorm:"default:天气值;comment:天气值;size:50;"
    string weatherValue = 105;


    // @inject_tag: json:"weatherCompare" gorm:"default:条件比较（1为等于 2 大于 ....);comment:条件比较（1为等于 2 大于 ....);size:10;"
    int32 weatherCompare = 106;


    // @inject_tag: json:"timerWeeks" gorm:"default:定时周设置，逗号分隔(例如：0,1,2,3,4);comment:定时周设置，逗号分隔(例如：0,1,2,3,4);size:20;"
    string timerWeeks = 107;


    // @inject_tag: json:"timerValue" gorm:"default:定时的值设置（01:33);comment:定时的值设置（01:33);size:5;"
    string timerValue = 108;


    // @inject_tag: json:"productId" gorm:"default:产品编号;comment:产品编号;size:19;"
    int64 productId = 109;


    // @inject_tag: json:"productKey" gorm:"default:产品Key;comment:产品Key;size:20;"
    string productKey = 110;


    // @inject_tag: json:"functions" gorm:"default:功能集合Json（数组）;comment:功能集合Json（数组）;size:500;"
    string functions = 111;


    // @inject_tag: json:"funcKey" gorm:"default:设备功能的Key;comment:设备功能的Key;size:50;"
    string funcKey = 112;


    // @inject_tag: json:"funcCompare" gorm:"default:条件比较（1为等于 2 大于 ....);comment:条件比较（1为等于 2 大于 ....);size:10;"
    int32 funcCompare = 113;


    // @inject_tag: json:"funcValue" gorm:"default:设备属性条件值;comment:设备属性条件值;size:50;"
    string funcValue = 114;

    // @inject_tag: json:"sort" gorm:"default:排序;comment:排序;size:10;"
    int32 sort = 115;

    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 116;

    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 117;

    //功能描述
    string funcDesc = 118;
    //功能标识符
    string funcIdentifier = 119;
}

message SceneTemplateConditionFilter {


    // @inject_tag: json:"id" gorm:"default:唯一主键;comment:唯一主键;size:19;"
    int64 id = 100;


    // @inject_tag: json:"sceneTemplateId" gorm:"default:场景ID;comment:场景ID;size:19;"
    int64 sceneTemplateId = 101;


    // @inject_tag: json:"conditionType" gorm:"default:条件类型（定时 、天气变化、设备状态变化）;comment:条件类型（定时 、天气变化、设备状态变化）;"
    int32 conditionType = 102;


    // @inject_tag: json:"desc" gorm:"default:天气描述;comment:天气描述;size:100;"
    string desc = 103;


    // @inject_tag: json:"weatherType" gorm:"default:天气类型;comment:天气类型;size:10;"
    int32 weatherType = 104;


    // @inject_tag: json:"weatherValue" gorm:"default:天气值;comment:天气值;size:50;"
    string weatherValue = 105;


    // @inject_tag: json:"weatherCompare" gorm:"default:条件比较（1为等于 2 大于 ....);comment:条件比较（1为等于 2 大于 ....);size:10;"
    int32 weatherCompare = 106;


    // @inject_tag: json:"timerWeeks" gorm:"default:定时周设置，逗号分隔(例如：0,1,2,3,4);comment:定时周设置，逗号分隔(例如：0,1,2,3,4);size:20;"
    string timerWeeks = 107;


    // @inject_tag: json:"timerValue" gorm:"default:定时的值设置（01:33);comment:定时的值设置（01:33);size:5;"
    string timerValue = 108;


    // @inject_tag: json:"productId" gorm:"default:产品编号;comment:产品编号;size:19;"
    int64 productId = 109;


    // @inject_tag: json:"productKey" gorm:"default:产品Key;comment:产品Key;size:20;"
    string productKey = 110;


    // @inject_tag: json:"functions" gorm:"default:功能集合Json（数组）;comment:功能集合Json（数组）;size:500;"
    string functions = 111;


    // @inject_tag: json:"funcKey" gorm:"default:设备功能的Key;comment:设备功能的Key;size:50;"
    string funcKey = 112;


    // @inject_tag: json:"funcCompare" gorm:"default:条件比较（1为等于 2 大于 ....);comment:条件比较（1为等于 2 大于 ....);size:10;"
    int32 funcCompare = 113;


    // @inject_tag: json:"funcValue" gorm:"default:设备属性条件值;comment:设备属性条件值;size:50;"
    string funcValue = 114;


    // @inject_tag: json:"sort" gorm:"default:排序;comment:排序;size:10;"
    int32 sort = 115;


    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 116;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 117; 

}

message SceneTemplateConditionListRequest {
    SceneTemplateCondition query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
    string searchKey = 106;
}

message SceneTemplateConditionResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated SceneTemplateCondition data = 104;
}

message SceneTemplateConditionUpdateFieldsRequest {
    repeated string fields = 101;
    SceneTemplateCondition data = 102;
}


// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message SceneTemplateConditionPrimarykey {

    int64 id = 100;
}

message SceneTemplateConditionBatchDeleteRequest {
    repeated SceneTemplateConditionPrimarykey keys = 101;
}