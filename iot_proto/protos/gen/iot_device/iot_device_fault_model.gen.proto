// Code generated by sgen.exe,2022-06-10 10:05:12. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";

//来源于数据表
message IotDeviceFault {


    // @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
    int64 id = 100;


    // @inject_tag: json:"deviceId" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:19;"
    int64 deviceId = 101;


    // @inject_tag: json:"deviceKey" gorm:"default:设备key;comment:设备key;size:20;"
    string deviceKey = 102;


    // @inject_tag: json:"deviceName" gorm:"default:设备名称;comment:设备名称;size:40;"
    string deviceName = 103;


    // @inject_tag: json:"baseProductId" gorm:"default:产品类型ID;comment:产品类型ID;size:19;"
    int64 baseProductId = 104;
    // @inject_tag: json:"productId" gorm:"default:产品ID;comment:产品ID;size:19;"
    int64 productId = 105;


    // @inject_tag: json:"productKey" gorm:"default:产品Key;comment:产品Key;size:20;"
    string productKey = 106;


    // @inject_tag: json:"productName" gorm:"default:冗余产品名称;comment:冗余产品名称;size:64;"
    string productName = 107;


    // @inject_tag: json:"faultIdentifier" gorm:"default:功能标识符;comment:功能标识符;size:50;"
    string faultIdentifier = 108;
    // @inject_tag: json:"faultDpid" gorm:"default:功能dpid;comment:功能dpid;"
    int32 faultDpid = 109;
    // @inject_tag: json:"faultCode" gorm:"default:故障编号,对应故障值;comment:故障编号,对应故障值;size:50;"
    string faultCode = 110;


    // @inject_tag: json:"faultName" gorm:"default:故障名称,对应故障名称;comment:故障名称,对应故障名称;size:100;"
    string faultName = 111;

    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 112;

    string tenantId = 113;//租户Id
}

message IotDeviceFaultFilter {


    // @inject_tag: json:"id" gorm:"default:主键ID;comment:主键ID;size:19;"
    int64 id = 100;


    // @inject_tag: json:"deviceId" gorm:"default:设备唯一ID（14位 1~9 A~Z随机）;comment:设备唯一ID（14位 1~9 A~Z随机）;size:19;"
    int64 deviceId = 101;


    // @inject_tag: json:"deviceKey" gorm:"default:设备key;comment:设备key;size:20;"
    string deviceKey = 102;


    // @inject_tag: json:"deviceName" gorm:"default:设备名称;comment:设备名称;size:40;"
    string deviceName = 103;


    // @inject_tag: json:"baseProductId" gorm:"default:产品类型ID;comment:产品类型ID;size:19;"
    int64 baseProductId = 104;
    // @inject_tag: json:"productId" gorm:"default:产品ID;comment:产品ID;size:19;"
    int64 productId = 105;


    // @inject_tag: json:"productKey" gorm:"default:产品Key;comment:产品Key;size:20;"
    string productKey = 106;


    // @inject_tag: json:"productName" gorm:"default:冗余产品名称;comment:冗余产品名称;size:64;"
    string productName = 107;


    // @inject_tag: json:"faultIdentifier" gorm:"default:功能标识符;comment:功能标识符;size:50;"
    string faultIdentifier = 108;
    // @inject_tag: json:"faultDpid" gorm:"default:功能dpid;comment:功能dpid;"
    int32 faultDpid = 109;
    // @inject_tag: json:"faultCode" gorm:"default:故障编号,对应故障值;comment:故障编号,对应故障值;size:50;"
    string faultCode = 110;


    // @inject_tag: json:"faultName" gorm:"default:故障名称,对应故障名称;comment:故障名称,对应故障名称;size:100;"
    string faultName = 111;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 112;

}

message IotDeviceFaultListFilter {
    int64 deviceId = 101;
    string deviceKey = 102;
    int64 productId = 103;//产品ID
    string faultCode = 104;
    int32 lastDay = 105;
    google.protobuf.Timestamp startTime = 106;
    google.protobuf.Timestamp endTime = 107;
    int64 baseProductId = 108; //产品类型ID
    repeated int64 productIds = 109;//产品Id集合
    string tenantId = 110;//租户Id
}

message IotDeviceFaultListRequest {
    IotDeviceFaultListFilter query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
    string searchKey = 106;
}

message IotDeviceFaultResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated IotDeviceFault data = 104;
}

message IotDeviceFaultUpdateFieldsRequest {
    repeated string fields = 101;
    IotDeviceFault data = 102;
}


// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message IotDeviceFaultPrimarykey {

    int64 id = 100;
}

message IotDeviceFaultBatchDeleteRequest {
    repeated IotDeviceFaultPrimarykey keys = 101;
}