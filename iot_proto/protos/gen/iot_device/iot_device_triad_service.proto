// Code generated by sgen.exe,2022-04-21 14:24:40. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";

import "common.proto";
import "google/api/annotations.proto";
import "iot_device_triad_model.proto";

service IotDeviceTriadService {
    //创建
    rpc Create(IotDeviceTriad) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/create"
			body:"*"
		};
	}
    //匹配多条件删除
	rpc Delete(IotDeviceTriad) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/delete"
			body:"*"
		};
	}
    //匹配主键删除,一般是Id
	rpc DeleteById(IotDeviceTriad) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/deleteById"
			body:"*"
		};
	}
    //匹配主键批量删除
    rpc DeleteByIds(IotDeviceTriadBatchDeleteRequest) returns (Response) {
        option (google.api.http) = {
            post:"/v1/iotDeviceTriad/DeleteByIds"
            body:"*"
        };
    }
    //根据主键更新非空字段
	rpc Update(IotDeviceTriad) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/update"
			body:"*"
		};
	}
    //根据主键更新所有字段
    rpc UpdateAll(IotDeviceTriad) returns (Response) {
        option (google.api.http) = {
            post:"/v1/iotDeviceTriad/updateAll"
            body:"*"
        };
    }
    //根据主键更新指定列
    rpc UpdateFields(IotDeviceTriadUpdateFieldsRequest) returns (Response) {
        option (google.api.http) = {
            post:"/v1/iotDeviceTriad/updateFields"
            body:"*"
        };
    }
    //根据主键查找,一般是Id,返回单条数据
	rpc FindById(IotDeviceTriadFilter) returns (IotDeviceTriadResponse) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/findById"
			body:"*"
		};
	}
    //多条件查找，返回单条数据
    rpc Find(IotDeviceTriadFilter) returns (IotDeviceTriadResponse) {
        option (google.api.http) = {
            post:"/v1/iotDeviceTriad/find"
            body:"*"
        };
    }

	//查找，支持分页，可返回多条数据
	rpc Lists(IotDeviceTriadListRequest) returns (IotDeviceTriadResponse) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/lists"
			body:"*"
		};
	}
    //批量生成三元组
	rpc GeneratorDeviceTriad(IotDeviceTriadGenerateRequest) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/generator"
			body:"*"
		};
	}
	//获取租户的三元组总数
	rpc GetDeviceTriadCountByTenantId(IotDeviceTriadFilter) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/count"
			body:"*"
		};
	}
	//设置测试三元组
	rpc SetTestDeviceTriad(SetTestTriadRequest) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/setTestDeviceTriad"
			body:"*"
		};
	}
	//绑定测试账号
	rpc BindTestAccount(BindTestAccountRequest) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/bindTestAccount"
			body:"*"
		};
	}

	//创建并绑定设备三元组
	rpc CreateAndBindDeviceTriad(IotDeviceTriadGenerateRequest) returns (Response) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/createAndBind"
			body:"*"
		};
	}

	//查找，支持分页，可返回多条数据
	rpc SetExportCount(IotDeviceTriadListRequest) returns (IotDeviceTriadResponse) {
		option (google.api.http) = {
			post:"/v1/iotDeviceTriad/setExportCount"
			body:"*"
		};
	}
}
