// Code generated by sgen.exe,2022-04-19 09:58:33. DO NOT EDIT.
// versions: v1.0.0
// 如果确实需要修改,请修改后改文件名,可以移除文件名中的.gen,以防下次生成覆盖

syntax = "proto3";

package service;
option go_package = ".;protosService";
import "google/protobuf/timestamp.proto";

//来源于数据表
message ConfigLicense {


    // @inject_tag: json:"id" gorm:"default:;comment:;size:19;"
    int64 id = 100;


    // @inject_tag: json:"belongType" gorm:"default:归属对象类型 =1 管理平台 =2 开发平台;comment:归属对象类型 =1 管理平台 =2 开发平台;size:10;"
    int32 belongType = 101;


    // @inject_tag: json:"belongId" gorm:"default:归属对象ID;comment:归属对象ID;size:19;"
    int64 belongId = 102;


    // @inject_tag: json:"machineId" gorm:"default:服务Mac地址;comment:服务Mac地址;size:50;"
    string machineId = 103;


    // @inject_tag: json:"license" gorm:"default:许可证密文;comment:许可证密文;size:255;"
    string license = 104;


    // @inject_tag: json:"licenseType" gorm:"default:许可证型 =1一次性数量授权许可 =2年递增量授权许可;comment:许可证型 =1一次性数量授权许可 =2年递增量授权许可;size:10;"
    int32 licenseType = 105;


    // @inject_tag: json:"agentNumber" gorm:"default:许可数量;comment:许可数量;size:10;"
    int32 agentNumber = 106;


    // @inject_tag: json:"surplusagentNumber" gorm:"default:剩余数量;comment:剩余数量;size:10;"
    int32 surplusagentNumber = 107;


    // @inject_tag: json:"type" gorm:"default:是否检查过期;comment:是否检查过期;size:10;"
    int32 type = 108;


    // @inject_tag: json:"timeout" gorm:"default:过期时间;comment:过期时间;"
    google.protobuf.Timestamp timeout = 109;


    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 110;


    // @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
    int64 updatedBy = 111;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 112; 


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 113; 


    // @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
    google.protobuf.Timestamp deletedAt = 114; 

}

message ConfigLicenseFilter {


    // @inject_tag: json:"id" gorm:"default:;comment:;size:19;"
    int64 id = 100;


    // @inject_tag: json:"belongType" gorm:"default:归属对象类型 =1 管理平台 =2 开发平台;comment:归属对象类型 =1 管理平台 =2 开发平台;size:10;"
    int32 belongType = 101;


    // @inject_tag: json:"belongId" gorm:"default:归属对象ID;comment:归属对象ID;size:19;"
    int64 belongId = 102;


    // @inject_tag: json:"machineId" gorm:"default:服务Mac地址;comment:服务Mac地址;size:50;"
    string machineId = 103;


    // @inject_tag: json:"license" gorm:"default:许可证密文;comment:许可证密文;size:255;"
    string license = 104;


    // @inject_tag: json:"licenseType" gorm:"default:许可证型 =1一次性数量授权许可 =2年递增量授权许可;comment:许可证型 =1一次性数量授权许可 =2年递增量授权许可;size:10;"
    int32 licenseType = 105;


    // @inject_tag: json:"agentNumber" gorm:"default:许可数量;comment:许可数量;size:10;"
    int32 agentNumber = 106;


    // @inject_tag: json:"surplusagentNumber" gorm:"default:剩余数量;comment:剩余数量;size:10;"
    int32 surplusagentNumber = 107;


    // @inject_tag: json:"type" gorm:"default:是否检查过期;comment:是否检查过期;size:10;"
    int32 type = 108;


    // @inject_tag: json:"timeout" gorm:"default:过期时间;comment:过期时间;"
    google.protobuf.Timestamp timeout = 109;


    // @inject_tag: json:"createdBy" gorm:"default:创建人;comment:创建人;size:20;"
    int64 createdBy = 110;


    // @inject_tag: json:"updatedBy" gorm:"default:修改人;comment:修改人;size:20;"
    int64 updatedBy = 111;


    // @inject_tag: json:"createdAt" gorm:"default:创建时间;comment:创建时间;"
    google.protobuf.Timestamp createdAt = 112; 


    // @inject_tag: json:"updatedAt" gorm:"default:修改时间;comment:修改时间;"
    google.protobuf.Timestamp updatedAt = 113; 


    // @inject_tag: json:"deletedAt" gorm:"default:删除时间;comment:删除时间;"
    google.protobuf.Timestamp deletedAt = 114; 

}

message ConfigLicenseListRequest {
    ConfigLicense query = 101;
    int64 page = 102;
    int64 pageSize = 103;
    string orderKey = 104;
    string orderDesc = 105;
}

message ConfigLicenseResponse {
    int32 code = 101;
    string message = 102;
    int64 total = 103;
    repeated ConfigLicense data = 104;
}

message ConfigLicenseUpdateFieldsRequest {
    repeated string fields = 101;
    ConfigLicense data = 102;
}


// 表模型主键，只能是整数或字符串，若生成错误，请检查数据库表主键是否正确。支持组合主键
message ConfigLicensePrimarykey {

    int64 id = 100;
    int32 belongType = 101;
    string machineId = 103;
    string license = 104;
}

message ConfigLicenseBatchDeleteRequest {
    repeated ConfigLicensePrimarykey keys = 101;
}